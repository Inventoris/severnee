{"mappings":"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","sources":["<anon>","src/scripts/index.js","src/scripts/modules/cookie.js","src/scripts/modules/menu.js","src/scripts/modules/scroll.js","src/scripts/modules/three-day-forecast.js","src/scripts/modules/charts.js","node_modules/chart.js/auto/auto.mjs","node_modules/chart.js/dist/chart.mjs","node_modules/chart.js/dist/chunks/helpers.segment.mjs","src/scripts/modules/month-forecast.js","src/scripts/modules/test-wrapper-toggler.js","src/scripts/modules/test.js"],"sourcesContent":["(function \\u0441ookieNotify() {\n    const notification = localStorage.cookieNotification;\n    if (!notification) {\n        const cookieBanner = document.querySelector('.cookie-notification');\n        const cookieButton = document.querySelector('.cookie-notification__button');\n        cookieBanner.classList.replace('notification_hidden', 'notification_visible');\n        cookieButton.addEventListener('click', ()=>{\n            localStorage.setItem('cookieNotification', new Date());\n            cookieBanner.classList.replace('notification_visible', 'notification_hidden');\n        }, {\n            once: true\n        });\n    }\n})();\n\n\nconst $9463ba52c520f603$var$menu = document.querySelector('.header__menu');\nconst $9463ba52c520f603$var$menuButton = document.querySelector('.header__menu-button');\n$9463ba52c520f603$var$menuButton.addEventListener('click', ()=>{\n    $9463ba52c520f603$var$menuButton.classList.toggle('header__menu-button_clicked');\n    $9463ba52c520f603$var$menu.classList.toggle('header__menu_closed');\n});\nconst $9463ba52c520f603$var$closeMenu = ()=>{\n    $9463ba52c520f603$var$menuButton.classList.remove('header__menu-button_clicked');\n    $9463ba52c520f603$var$menu.classList.add('header__menu_closed');\n};\ndocument.addEventListener('click', (event)=>{\n    if (!$9463ba52c520f603$var$menu.contains(event.target) && !$9463ba52c520f603$var$menuButton.contains(event.target)) $9463ba52c520f603$var$closeMenu();\n});\n$9463ba52c520f603$var$menu.addEventListener('click', (event)=>{\n    if (event.target.matches('.menu-list__link')) $9463ba52c520f603$var$closeMenu();\n});\n\n\nconst $5bed2ca21484f679$var$navLinks = document.querySelectorAll('.menu-list__link, .intro__arrow-down');\nfunction $5bed2ca21484f679$var$scrollView(event) {\n    event.preventDefault();\n    document.querySelector(event.currentTarget.hash).scrollIntoView();\n}\n$5bed2ca21484f679$var$navLinks.forEach((link)=>link.addEventListener('click', $5bed2ca21484f679$var$scrollView));\n\n\n/*!\n * Chart.js v3.9.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */ /*!\n * Chart.js v3.9.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */ function $97ecbd121be4860b$export$cf2f7c5792f80b46() {}\nconst $97ecbd121be4860b$export$4c3d22f3d993c33f = function() {\n    let id = 0;\n    return function() {\n        return id++;\n    };\n}();\nfunction $97ecbd121be4860b$export$342063e11d6c3cad(value) {\n    return value === null || typeof value === 'undefined';\n}\nfunction $97ecbd121be4860b$export$8b22cf2602fb60ce(value) {\n    if (Array.isArray && Array.isArray(value)) return true;\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') return true;\n    return false;\n}\nfunction $97ecbd121be4860b$export$23f2a1d2818174ef(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\nconst $97ecbd121be4860b$export$39b482c5e57630a8 = (value)=>(typeof value === 'number' || value instanceof Number) && isFinite(+value);\nfunction $97ecbd121be4860b$export$ef35774e6d314e91(value, defaultValue) {\n    return $97ecbd121be4860b$export$39b482c5e57630a8(value) ? value : defaultValue;\n}\nfunction $97ecbd121be4860b$export$90a7f3efeed30595(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst $97ecbd121be4860b$export$953cecd6e717a553 = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : value / dimension;\nconst $97ecbd121be4860b$export$7ccc53e8f1e7dfc5 = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\nfunction $97ecbd121be4860b$export$e7094788287c5e9b(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') return fn.apply(thisArg, args);\n}\nfunction $97ecbd121be4860b$export$3722cfe417b6ed86(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if ($97ecbd121be4860b$export$8b22cf2602fb60ce(loopable)) {\n        len = loopable.length;\n        if (reverse) for(i = len - 1; i >= 0; i--)fn.call(thisArg, loopable[i], i);\n        else for(i = 0; i < len; i++)fn.call(thisArg, loopable[i], i);\n    } else if ($97ecbd121be4860b$export$23f2a1d2818174ef(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++)fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n}\nfunction $97ecbd121be4860b$export$f38c853ae54ed474(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) return false;\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) return false;\n    }\n    return true;\n}\nfunction $97ecbd121be4860b$export$738ab4df8bf92ae9(source) {\n    if ($97ecbd121be4860b$export$8b22cf2602fb60ce(source)) return source.map($97ecbd121be4860b$export$738ab4df8bf92ae9);\n    if ($97ecbd121be4860b$export$23f2a1d2818174ef(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k)target[keys[k]] = $97ecbd121be4860b$export$738ab4df8bf92ae9(source[keys[k]]);\n        return target;\n    }\n    return source;\n}\nfunction $97ecbd121be4860b$var$isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\nfunction $97ecbd121be4860b$export$d377dcb2b61d6c4e(key, target, source, options) {\n    if (!$97ecbd121be4860b$var$isValidKey(key)) return;\n    const tval = target[key];\n    const sval = source[key];\n    if ($97ecbd121be4860b$export$23f2a1d2818174ef(tval) && $97ecbd121be4860b$export$23f2a1d2818174ef(sval)) $97ecbd121be4860b$export$e7c866399fa523f5(tval, sval, options);\n    else target[key] = $97ecbd121be4860b$export$738ab4df8bf92ae9(sval);\n}\nfunction $97ecbd121be4860b$export$e7c866399fa523f5(target, source, options) {\n    const sources = $97ecbd121be4860b$export$8b22cf2602fb60ce(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!$97ecbd121be4860b$export$23f2a1d2818174ef(target)) return target;\n    options = options || {};\n    const merger = options.merger || $97ecbd121be4860b$export$d377dcb2b61d6c4e;\n    for(let i = 0; i < ilen; ++i){\n        source = sources[i];\n        if (!$97ecbd121be4860b$export$23f2a1d2818174ef(source)) continue;\n        const keys = Object.keys(source);\n        for(let k = 0, klen = keys.length; k < klen; ++k)merger(keys[k], target, source, options);\n    }\n    return target;\n}\nfunction $97ecbd121be4860b$export$2219238a014317b0(target, source) {\n    return $97ecbd121be4860b$export$e7c866399fa523f5(target, source, {\n        merger: $97ecbd121be4860b$export$667d3bf0c5f83305\n    });\n}\nfunction $97ecbd121be4860b$export$667d3bf0c5f83305(key, target, source) {\n    if (!$97ecbd121be4860b$var$isValidKey(key)) return;\n    const tval = target[key];\n    const sval = source[key];\n    if ($97ecbd121be4860b$export$23f2a1d2818174ef(tval) && $97ecbd121be4860b$export$23f2a1d2818174ef(sval)) $97ecbd121be4860b$export$2219238a014317b0(tval, sval);\n    else if (!Object.prototype.hasOwnProperty.call(target, key)) target[key] = $97ecbd121be4860b$export$738ab4df8bf92ae9(sval);\n}\nfunction $97ecbd121be4860b$export$317a3d46287192d8(scope, value, previous, current) {\n    if (value !== undefined) console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n}\nconst $97ecbd121be4860b$var$keyResolvers = {\n    '': (v)=>v,\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\nfunction $97ecbd121be4860b$export$2d1720544b23b823(obj, key) {\n    const resolver = $97ecbd121be4860b$var$keyResolvers[key] || ($97ecbd121be4860b$var$keyResolvers[key] = $97ecbd121be4860b$var$_getKeyResolver(key));\n    return resolver(obj);\n}\nfunction $97ecbd121be4860b$var$_getKeyResolver(key) {\n    const keys = $97ecbd121be4860b$export$1ee57be6f6687d2c(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') break;\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction $97ecbd121be4860b$export$1ee57be6f6687d2c(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) tmp = tmp.slice(0, -1) + '.';\n        else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction $97ecbd121be4860b$export$71cec2538cb2c617(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst $97ecbd121be4860b$export$35e795649ee09318 = (value)=>typeof value !== 'undefined';\nconst $97ecbd121be4860b$export$c3950d9923825c02 = (value)=>typeof value === 'function';\nconst $97ecbd121be4860b$export$995eb9fca571757 = (a, b)=>{\n    if (a.size !== b.size) return false;\n    for (const item of a){\n        if (!b.has(item)) return false;\n    }\n    return true;\n};\nfunction $97ecbd121be4860b$export$3b513254972cfc9c(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\nconst $97ecbd121be4860b$export$56c0d5a1e737357d = Math.PI;\nconst $97ecbd121be4860b$export$971d5caa766a69d7 = 2 * $97ecbd121be4860b$export$56c0d5a1e737357d;\nconst $97ecbd121be4860b$export$8c78c7c36408ea29 = $97ecbd121be4860b$export$971d5caa766a69d7 + $97ecbd121be4860b$export$56c0d5a1e737357d;\nconst $97ecbd121be4860b$export$d29e374196577086 = Number.POSITIVE_INFINITY;\nconst $97ecbd121be4860b$export$2ec5befb9e6c97d4 = $97ecbd121be4860b$export$56c0d5a1e737357d / 180;\nconst $97ecbd121be4860b$export$7f8ddf7c7c20b3cd = $97ecbd121be4860b$export$56c0d5a1e737357d / 2;\nconst $97ecbd121be4860b$export$53c86fa97d611818 = $97ecbd121be4860b$export$56c0d5a1e737357d / 4;\nconst $97ecbd121be4860b$export$39c1cc7c062529d4 = $97ecbd121be4860b$export$56c0d5a1e737357d * 2 / 3;\nconst $97ecbd121be4860b$export$df995fae86a55f06 = Math.log10;\nconst $97ecbd121be4860b$export$2408f22a0fab9ae5 = Math.sign;\nfunction $97ecbd121be4860b$export$b9a6b53f9be3734(range) {\n    const roundedRange = Math.round(range);\n    range = $97ecbd121be4860b$export$23ebac1979863676(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor($97ecbd121be4860b$export$df995fae86a55f06(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\nfunction $97ecbd121be4860b$export$ebd11618f299a286(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++)if (value % i === 0) {\n        result.push(i);\n        result.push(value / i);\n    }\n    if (sqrt === (sqrt | 0)) result.push(sqrt);\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction $97ecbd121be4860b$export$d141bba7fdc215a3(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction $97ecbd121be4860b$export$23ebac1979863676(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\nfunction $97ecbd121be4860b$export$a05254e7c3aeba6e(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\nfunction $97ecbd121be4860b$export$a33b77bbdbb8366c(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction $97ecbd121be4860b$export$625550452a3fa3ec(degrees) {\n    return degrees * ($97ecbd121be4860b$export$56c0d5a1e737357d / 180);\n}\nfunction $97ecbd121be4860b$export$d66501df72047452(radians) {\n    return radians * (180 / $97ecbd121be4860b$export$56c0d5a1e737357d);\n}\nfunction $97ecbd121be4860b$export$91477dc880baac21(x) {\n    if (!$97ecbd121be4860b$export$39b482c5e57630a8(x)) return;\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\nfunction $97ecbd121be4860b$export$34aec0b863436764(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * $97ecbd121be4860b$export$56c0d5a1e737357d) angle += $97ecbd121be4860b$export$971d5caa766a69d7;\n    return {\n        angle: angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction $97ecbd121be4860b$export$53a70dd1ebbae346(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\nfunction $97ecbd121be4860b$export$7a0bdf7d4a91ea88(a, b) {\n    return (a - b + $97ecbd121be4860b$export$8c78c7c36408ea29) % $97ecbd121be4860b$export$971d5caa766a69d7 - $97ecbd121be4860b$export$56c0d5a1e737357d;\n}\nfunction $97ecbd121be4860b$export$3d12bd131bb975d1(a) {\n    return (a % $97ecbd121be4860b$export$971d5caa766a69d7 + $97ecbd121be4860b$export$971d5caa766a69d7) % $97ecbd121be4860b$export$971d5caa766a69d7;\n}\nfunction $97ecbd121be4860b$export$ffb5f4729a158638(angle, start, end, sameAngleIsFullCircle) {\n    const a = $97ecbd121be4860b$export$3d12bd131bb975d1(angle);\n    const s = $97ecbd121be4860b$export$3d12bd131bb975d1(start);\n    const e = $97ecbd121be4860b$export$3d12bd131bb975d1(end);\n    const angleToStart = $97ecbd121be4860b$export$3d12bd131bb975d1(s - a);\n    const angleToEnd = $97ecbd121be4860b$export$3d12bd131bb975d1(e - a);\n    const startToAngle = $97ecbd121be4860b$export$3d12bd131bb975d1(a - s);\n    const endToAngle = $97ecbd121be4860b$export$3d12bd131bb975d1(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\nfunction $97ecbd121be4860b$export$a9c23c6ac3fc3eca(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\nfunction $97ecbd121be4860b$export$9bb611d729802a56(value) {\n    return $97ecbd121be4860b$export$a9c23c6ac3fc3eca(value, -32768, 32767);\n}\nfunction $97ecbd121be4860b$export$21579262ef46735b(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\nfunction $97ecbd121be4860b$export$c03999cb2f36933f(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) lo = mid;\n        else hi = mid;\n    }\n    return {\n        lo: lo,\n        hi: hi\n    };\n}\nconst $97ecbd121be4860b$export$dc98b0b04f4c7758 = (table, key, value, last)=>$97ecbd121be4860b$export$c03999cb2f36933f(table, value, last ? (index)=>table[index][key] <= value : (index)=>table[index][key] < value);\nconst $97ecbd121be4860b$export$8743009a87fcb00f = (table, key, value)=>$97ecbd121be4860b$export$c03999cb2f36933f(table, value, (index)=>table[index][key] >= value);\nfunction $97ecbd121be4860b$export$faec65b429be379(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min)start++;\n    while(end > start && values[end - 1] > max)end--;\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst $97ecbd121be4860b$var$arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction $97ecbd121be4860b$export$882b5998b3b9117c(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    $97ecbd121be4860b$var$arrayEvents.forEach((key)=>{\n        const method = '_onData' + $97ecbd121be4860b$export$71cec2538cb2c617(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') object[method](...args);\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction $97ecbd121be4860b$export$3b14a55fb2447963(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) return;\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) listeners.splice(index, 1);\n    if (listeners.length > 0) return;\n    $97ecbd121be4860b$var$arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\nfunction $97ecbd121be4860b$export$71511d61b312f219(items) {\n    const set = new Set();\n    let i, ilen;\n    for(i = 0, ilen = items.length; i < ilen; ++i)set.add(items[i]);\n    if (set.size === ilen) return items;\n    return Array.from(set);\n}\nfunction $97ecbd121be4860b$export$a17c37559e1db147(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\nconst $97ecbd121be4860b$export$43caf9889c228507 = function() {\n    if (typeof window === 'undefined') return function(callback) {\n        return callback();\n    };\n    return window.requestAnimationFrame;\n}();\nfunction $97ecbd121be4860b$export$efca4cbe5dd06740(fn, thisArg, updateFn) {\n    const updateArgs = updateFn || ((args)=>Array.prototype.slice.call(args));\n    let ticking = false;\n    let args = [];\n    return function(...rest) {\n        args = updateArgs(rest);\n        if (!ticking) {\n            ticking = true;\n            $97ecbd121be4860b$export$43caf9889c228507.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, args);\n            });\n        }\n    };\n}\nfunction $97ecbd121be4860b$export$f787f51d84a910ad(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else fn.apply(this, args);\n        return delay;\n    };\n}\nconst $97ecbd121be4860b$export$db202ddc8be9136 = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\nconst $97ecbd121be4860b$export$25ce5a424b770e84 = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\nconst $97ecbd121be4860b$export$890c4ad488842ce7 = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\nfunction $97ecbd121be4860b$export$9e5f44173e64f162(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale: iScale, _parsed: _parsed } = meta;\n        const axis = iScale.axis;\n        const { min: min, max: max, minDefined: minDefined, maxDefined: maxDefined } = iScale.getUserBounds();\n        if (minDefined) start = $97ecbd121be4860b$export$a9c23c6ac3fc3eca(Math.min($97ecbd121be4860b$export$dc98b0b04f4c7758(_parsed, iScale.axis, min).lo, animationsDisabled ? pointCount : $97ecbd121be4860b$export$dc98b0b04f4c7758(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        if (maxDefined) count = $97ecbd121be4860b$export$a9c23c6ac3fc3eca(Math.max($97ecbd121be4860b$export$dc98b0b04f4c7758(_parsed, iScale.axis, max, true).hi + 1, animationsDisabled ? 0 : $97ecbd121be4860b$export$dc98b0b04f4c7758(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        else count = pointCount - start;\n    }\n    return {\n        start: start,\n        count: count\n    };\n}\nfunction $97ecbd121be4860b$export$efccba1c4a2ef57b(meta) {\n    const { xScale: xScale, yScale: yScale, _scaleRanges: _scaleRanges } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\nconst $97ecbd121be4860b$var$atEdge = (t)=>t === 0 || t === 1;\nconst $97ecbd121be4860b$var$elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * $97ecbd121be4860b$export$971d5caa766a69d7 / p));\nconst $97ecbd121be4860b$var$elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * $97ecbd121be4860b$export$971d5caa766a69d7 / p) + 1;\nconst $97ecbd121be4860b$export$f1e1789686576879 = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * $97ecbd121be4860b$export$7f8ddf7c7c20b3cd) + 1,\n    easeOutSine: (t)=>Math.sin(t * $97ecbd121be4860b$export$7f8ddf7c7c20b3cd),\n    easeInOutSine: (t)=>-0.5 * (Math.cos($97ecbd121be4860b$export$56c0d5a1e737357d * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>$97ecbd121be4860b$var$atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>$97ecbd121be4860b$var$atEdge(t) ? t : $97ecbd121be4860b$var$elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>$97ecbd121be4860b$var$atEdge(t) ? t : $97ecbd121be4860b$var$elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return $97ecbd121be4860b$var$atEdge(t) ? t : t < 0.5 ? 0.5 * $97ecbd121be4860b$var$elasticIn(t * 2, s, p) : 0.5 + 0.5 * $97ecbd121be4860b$var$elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - $97ecbd121be4860b$export$f1e1789686576879.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) return m * t * t;\n        if (t < 2 / d) return m * (t -= 1.5 / d) * t + 0.75;\n        if (t < 2.5 / d) return m * (t -= 2.25 / d) * t + 0.9375;\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? $97ecbd121be4860b$export$f1e1789686576879.easeInBounce(t * 2) * 0.5 : $97ecbd121be4860b$export$f1e1789686576879.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n/*!\n * @kurkle/color v0.2.1\n * https://github.com/kurkle/color#readme\n * (c) 2022 Jukka Kurkela\n * Released under the MIT License\n */ function $97ecbd121be4860b$var$round(v) {\n    return v + 0.5 | 0;\n}\nconst $97ecbd121be4860b$var$lim = (v, l, h)=>Math.max(Math.min(v, h), l);\nfunction $97ecbd121be4860b$var$p2b(v) {\n    return $97ecbd121be4860b$var$lim($97ecbd121be4860b$var$round(v * 2.55), 0, 255);\n}\nfunction $97ecbd121be4860b$var$n2b(v) {\n    return $97ecbd121be4860b$var$lim($97ecbd121be4860b$var$round(v * 255), 0, 255);\n}\nfunction $97ecbd121be4860b$var$b2n(v) {\n    return $97ecbd121be4860b$var$lim($97ecbd121be4860b$var$round(v / 2.55) / 100, 0, 1);\n}\nfunction $97ecbd121be4860b$var$n2p(v) {\n    return $97ecbd121be4860b$var$lim($97ecbd121be4860b$var$round(v * 100), 0, 100);\n}\nconst $97ecbd121be4860b$var$map$1 = {\n    0: 0,\n    1: 1,\n    2: 2,\n    3: 3,\n    4: 4,\n    5: 5,\n    6: 6,\n    7: 7,\n    8: 8,\n    9: 9,\n    A: 10,\n    B: 11,\n    C: 12,\n    D: 13,\n    E: 14,\n    F: 15,\n    a: 10,\n    b: 11,\n    c: 12,\n    d: 13,\n    e: 14,\n    f: 15\n};\nconst $97ecbd121be4860b$var$hex = [\n    ...'0123456789ABCDEF'\n];\nconst $97ecbd121be4860b$var$h1 = (b)=>$97ecbd121be4860b$var$hex[b & 0xF];\nconst $97ecbd121be4860b$var$h2 = (b)=>$97ecbd121be4860b$var$hex[(b & 0xF0) >> 4] + $97ecbd121be4860b$var$hex[b & 0xF];\nconst $97ecbd121be4860b$var$eq = (b)=>(b & 0xF0) >> 4 === (b & 0xF);\nconst $97ecbd121be4860b$var$isShort = (v)=>$97ecbd121be4860b$var$eq(v.r) && $97ecbd121be4860b$var$eq(v.g) && $97ecbd121be4860b$var$eq(v.b) && $97ecbd121be4860b$var$eq(v.a);\nfunction $97ecbd121be4860b$var$hexParse(str) {\n    var len = str.length;\n    var ret;\n    if (str[0] === '#') {\n        if (len === 4 || len === 5) ret = {\n            r: 255 & $97ecbd121be4860b$var$map$1[str[1]] * 17,\n            g: 255 & $97ecbd121be4860b$var$map$1[str[2]] * 17,\n            b: 255 & $97ecbd121be4860b$var$map$1[str[3]] * 17,\n            a: len === 5 ? $97ecbd121be4860b$var$map$1[str[4]] * 17 : 255\n        };\n        else if (len === 7 || len === 9) ret = {\n            r: $97ecbd121be4860b$var$map$1[str[1]] << 4 | $97ecbd121be4860b$var$map$1[str[2]],\n            g: $97ecbd121be4860b$var$map$1[str[3]] << 4 | $97ecbd121be4860b$var$map$1[str[4]],\n            b: $97ecbd121be4860b$var$map$1[str[5]] << 4 | $97ecbd121be4860b$var$map$1[str[6]],\n            a: len === 9 ? $97ecbd121be4860b$var$map$1[str[7]] << 4 | $97ecbd121be4860b$var$map$1[str[8]] : 255\n        };\n    }\n    return ret;\n}\nconst $97ecbd121be4860b$var$alpha = (a, f)=>a < 255 ? f(a) : '';\nfunction $97ecbd121be4860b$var$hexString(v) {\n    var f = $97ecbd121be4860b$var$isShort(v) ? $97ecbd121be4860b$var$h1 : $97ecbd121be4860b$var$h2;\n    return v ? '#' + f(v.r) + f(v.g) + f(v.b) + $97ecbd121be4860b$var$alpha(v.a, f) : undefined;\n}\nconst $97ecbd121be4860b$var$HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction $97ecbd121be4860b$var$hsl2rgbn(h, s, l) {\n    const a = s * Math.min(l, 1 - l);\n    const f = (n, k = (n + h / 30) % 12)=>l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n    return [\n        f(0),\n        f(8),\n        f(4)\n    ];\n}\nfunction $97ecbd121be4860b$var$hsv2rgbn(h, s, v) {\n    const f = (n, k = (n + h / 60) % 6)=>v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n    return [\n        f(5),\n        f(3),\n        f(1)\n    ];\n}\nfunction $97ecbd121be4860b$var$hwb2rgbn(h, w, b) {\n    const rgb = $97ecbd121be4860b$var$hsl2rgbn(h, 1, 0.5);\n    let i;\n    if (w + b > 1) {\n        i = 1 / (w + b);\n        w *= i;\n        b *= i;\n    }\n    for(i = 0; i < 3; i++){\n        rgb[i] *= 1 - w - b;\n        rgb[i] += w;\n    }\n    return rgb;\n}\nfunction $97ecbd121be4860b$var$hueValue(r, g, b, d, max) {\n    if (r === max) return (g - b) / d + (g < b ? 6 : 0);\n    if (g === max) return (b - r) / d + 2;\n    return (r - g) / d + 4;\n}\nfunction $97ecbd121be4860b$var$rgb2hsl(v) {\n    const range = 255;\n    const r = v.r / range;\n    const g = v.g / range;\n    const b = v.b / range;\n    const max = Math.max(r, g, b);\n    const min = Math.min(r, g, b);\n    const l = (max + min) / 2;\n    let h, s, d;\n    if (max !== min) {\n        d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        h = $97ecbd121be4860b$var$hueValue(r, g, b, d, max);\n        h = h * 60 + 0.5;\n    }\n    return [\n        h | 0,\n        s || 0,\n        l\n    ];\n}\nfunction $97ecbd121be4860b$var$calln(f, a, b, c) {\n    return (Array.isArray(a) ? f(a[0], a[1], a[2]) : f(a, b, c)).map($97ecbd121be4860b$var$n2b);\n}\nfunction $97ecbd121be4860b$var$hsl2rgb(h, s, l) {\n    return $97ecbd121be4860b$var$calln($97ecbd121be4860b$var$hsl2rgbn, h, s, l);\n}\nfunction $97ecbd121be4860b$var$hwb2rgb(h, w, b) {\n    return $97ecbd121be4860b$var$calln($97ecbd121be4860b$var$hwb2rgbn, h, w, b);\n}\nfunction $97ecbd121be4860b$var$hsv2rgb(h, s, v) {\n    return $97ecbd121be4860b$var$calln($97ecbd121be4860b$var$hsv2rgbn, h, s, v);\n}\nfunction $97ecbd121be4860b$var$hue(h) {\n    return (h % 360 + 360) % 360;\n}\nfunction $97ecbd121be4860b$var$hueParse(str) {\n    const m = $97ecbd121be4860b$var$HUE_RE.exec(str);\n    let a = 255;\n    let v;\n    if (!m) return;\n    if (m[5] !== v) a = m[6] ? $97ecbd121be4860b$var$p2b(+m[5]) : $97ecbd121be4860b$var$n2b(+m[5]);\n    const h = $97ecbd121be4860b$var$hue(+m[2]);\n    const p1 = +m[3] / 100;\n    const p2 = +m[4] / 100;\n    if (m[1] === 'hwb') v = $97ecbd121be4860b$var$hwb2rgb(h, p1, p2);\n    else if (m[1] === 'hsv') v = $97ecbd121be4860b$var$hsv2rgb(h, p1, p2);\n    else v = $97ecbd121be4860b$var$hsl2rgb(h, p1, p2);\n    return {\n        r: v[0],\n        g: v[1],\n        b: v[2],\n        a: a\n    };\n}\nfunction $97ecbd121be4860b$var$rotate(v, deg) {\n    var h = $97ecbd121be4860b$var$rgb2hsl(v);\n    h[0] = $97ecbd121be4860b$var$hue(h[0] + deg);\n    h = $97ecbd121be4860b$var$hsl2rgb(h);\n    v.r = h[0];\n    v.g = h[1];\n    v.b = h[2];\n}\nfunction $97ecbd121be4860b$var$hslString(v) {\n    if (!v) return;\n    const a = $97ecbd121be4860b$var$rgb2hsl(v);\n    const h = a[0];\n    const s = $97ecbd121be4860b$var$n2p(a[1]);\n    const l = $97ecbd121be4860b$var$n2p(a[2]);\n    return v.a < 255 ? `hsla(${h}, ${s}%, ${l}%, ${$97ecbd121be4860b$var$b2n(v.a)})` : `hsl(${h}, ${s}%, ${l}%)`;\n}\nconst $97ecbd121be4860b$var$map = {\n    x: 'dark',\n    Z: 'light',\n    Y: 're',\n    X: 'blu',\n    W: 'gr',\n    V: 'medium',\n    U: 'slate',\n    A: 'ee',\n    T: 'ol',\n    S: 'or',\n    B: 'ra',\n    C: 'lateg',\n    D: 'ights',\n    R: 'in',\n    Q: 'turquois',\n    E: 'hi',\n    P: 'ro',\n    O: 'al',\n    N: 'le',\n    M: 'de',\n    L: 'yello',\n    F: 'en',\n    K: 'ch',\n    G: 'arks',\n    H: 'ea',\n    I: 'ightg',\n    J: 'wh'\n};\nconst $97ecbd121be4860b$var$names$1 = {\n    OiceXe: 'f0f8ff',\n    antiquewEte: 'faebd7',\n    aqua: 'ffff',\n    aquamarRe: '7fffd4',\n    azuY: 'f0ffff',\n    beige: 'f5f5dc',\n    bisque: 'ffe4c4',\n    black: '0',\n    blanKedOmond: 'ffebcd',\n    Xe: 'ff',\n    XeviTet: '8a2be2',\n    bPwn: 'a52a2a',\n    burlywood: 'deb887',\n    caMtXe: '5f9ea0',\n    KartYuse: '7fff00',\n    KocTate: 'd2691e',\n    cSO: 'ff7f50',\n    cSnflowerXe: '6495ed',\n    cSnsilk: 'fff8dc',\n    crimson: 'dc143c',\n    cyan: 'ffff',\n    xXe: '8b',\n    xcyan: '8b8b',\n    xgTMnPd: 'b8860b',\n    xWay: 'a9a9a9',\n    xgYF: '6400',\n    xgYy: 'a9a9a9',\n    xkhaki: 'bdb76b',\n    xmagFta: '8b008b',\n    xTivegYF: '556b2f',\n    xSange: 'ff8c00',\n    xScEd: '9932cc',\n    xYd: '8b0000',\n    xsOmon: 'e9967a',\n    xsHgYF: '8fbc8f',\n    xUXe: '483d8b',\n    xUWay: '2f4f4f',\n    xUgYy: '2f4f4f',\n    xQe: 'ced1',\n    xviTet: '9400d3',\n    dAppRk: 'ff1493',\n    dApskyXe: 'bfff',\n    dimWay: '696969',\n    dimgYy: '696969',\n    dodgerXe: '1e90ff',\n    fiYbrick: 'b22222',\n    flSOwEte: 'fffaf0',\n    foYstWAn: '228b22',\n    fuKsia: 'ff00ff',\n    gaRsbSo: 'dcdcdc',\n    ghostwEte: 'f8f8ff',\n    gTd: 'ffd700',\n    gTMnPd: 'daa520',\n    Way: '808080',\n    gYF: '8000',\n    gYFLw: 'adff2f',\n    gYy: '808080',\n    honeyMw: 'f0fff0',\n    hotpRk: 'ff69b4',\n    RdianYd: 'cd5c5c',\n    Rdigo: '4b0082',\n    ivSy: 'fffff0',\n    khaki: 'f0e68c',\n    lavFMr: 'e6e6fa',\n    lavFMrXsh: 'fff0f5',\n    lawngYF: '7cfc00',\n    NmoncEffon: 'fffacd',\n    ZXe: 'add8e6',\n    ZcSO: 'f08080',\n    Zcyan: 'e0ffff',\n    ZgTMnPdLw: 'fafad2',\n    ZWay: 'd3d3d3',\n    ZgYF: '90ee90',\n    ZgYy: 'd3d3d3',\n    ZpRk: 'ffb6c1',\n    ZsOmon: 'ffa07a',\n    ZsHgYF: '20b2aa',\n    ZskyXe: '87cefa',\n    ZUWay: '778899',\n    ZUgYy: '778899',\n    ZstAlXe: 'b0c4de',\n    ZLw: 'ffffe0',\n    lime: 'ff00',\n    limegYF: '32cd32',\n    lRF: 'faf0e6',\n    magFta: 'ff00ff',\n    maPon: '800000',\n    VaquamarRe: '66cdaa',\n    VXe: 'cd',\n    VScEd: 'ba55d3',\n    VpurpN: '9370db',\n    VsHgYF: '3cb371',\n    VUXe: '7b68ee',\n    VsprRggYF: 'fa9a',\n    VQe: '48d1cc',\n    VviTetYd: 'c71585',\n    midnightXe: '191970',\n    mRtcYam: 'f5fffa',\n    mistyPse: 'ffe4e1',\n    moccasR: 'ffe4b5',\n    navajowEte: 'ffdead',\n    navy: '80',\n    Tdlace: 'fdf5e6',\n    Tive: '808000',\n    TivedBb: '6b8e23',\n    Sange: 'ffa500',\n    SangeYd: 'ff4500',\n    ScEd: 'da70d6',\n    pOegTMnPd: 'eee8aa',\n    pOegYF: '98fb98',\n    pOeQe: 'afeeee',\n    pOeviTetYd: 'db7093',\n    papayawEp: 'ffefd5',\n    pHKpuff: 'ffdab9',\n    peru: 'cd853f',\n    pRk: 'ffc0cb',\n    plum: 'dda0dd',\n    powMrXe: 'b0e0e6',\n    purpN: '800080',\n    YbeccapurpN: '663399',\n    Yd: 'ff0000',\n    Psybrown: 'bc8f8f',\n    PyOXe: '4169e1',\n    saddNbPwn: '8b4513',\n    sOmon: 'fa8072',\n    sandybPwn: 'f4a460',\n    sHgYF: '2e8b57',\n    sHshell: 'fff5ee',\n    siFna: 'a0522d',\n    silver: 'c0c0c0',\n    skyXe: '87ceeb',\n    UXe: '6a5acd',\n    UWay: '708090',\n    UgYy: '708090',\n    snow: 'fffafa',\n    sprRggYF: 'ff7f',\n    stAlXe: '4682b4',\n    tan: 'd2b48c',\n    teO: '8080',\n    tEstN: 'd8bfd8',\n    tomato: 'ff6347',\n    Qe: '40e0d0',\n    viTet: 'ee82ee',\n    JHt: 'f5deb3',\n    wEte: 'ffffff',\n    wEtesmoke: 'f5f5f5',\n    Lw: 'ffff00',\n    LwgYF: '9acd32'\n};\nfunction $97ecbd121be4860b$var$unpack() {\n    const unpacked = {};\n    const keys = Object.keys($97ecbd121be4860b$var$names$1);\n    const tkeys = Object.keys($97ecbd121be4860b$var$map);\n    let i, j, k, ok, nk;\n    for(i = 0; i < keys.length; i++){\n        ok = nk = keys[i];\n        for(j = 0; j < tkeys.length; j++){\n            k = tkeys[j];\n            nk = nk.replace(k, $97ecbd121be4860b$var$map[k]);\n        }\n        k = parseInt($97ecbd121be4860b$var$names$1[ok], 16);\n        unpacked[nk] = [\n            k >> 16 & 0xFF,\n            k >> 8 & 0xFF,\n            k & 0xFF\n        ];\n    }\n    return unpacked;\n}\nlet $97ecbd121be4860b$var$names;\nfunction $97ecbd121be4860b$var$nameParse(str) {\n    if (!$97ecbd121be4860b$var$names) {\n        $97ecbd121be4860b$var$names = $97ecbd121be4860b$var$unpack();\n        $97ecbd121be4860b$var$names.transparent = [\n            0,\n            0,\n            0,\n            0\n        ];\n    }\n    const a = $97ecbd121be4860b$var$names[str.toLowerCase()];\n    return a && {\n        r: a[0],\n        g: a[1],\n        b: a[2],\n        a: a.length === 4 ? a[3] : 255\n    };\n}\nconst $97ecbd121be4860b$var$RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction $97ecbd121be4860b$var$rgbParse(str) {\n    const m = $97ecbd121be4860b$var$RGB_RE.exec(str);\n    let a = 255;\n    let r, g, b;\n    if (!m) return;\n    if (m[7] !== r) {\n        const v = +m[7];\n        a = m[8] ? $97ecbd121be4860b$var$p2b(v) : $97ecbd121be4860b$var$lim(v * 255, 0, 255);\n    }\n    r = +m[1];\n    g = +m[3];\n    b = +m[5];\n    r = 255 & (m[2] ? $97ecbd121be4860b$var$p2b(r) : $97ecbd121be4860b$var$lim(r, 0, 255));\n    g = 255 & (m[4] ? $97ecbd121be4860b$var$p2b(g) : $97ecbd121be4860b$var$lim(g, 0, 255));\n    b = 255 & (m[6] ? $97ecbd121be4860b$var$p2b(b) : $97ecbd121be4860b$var$lim(b, 0, 255));\n    return {\n        r: r,\n        g: g,\n        b: b,\n        a: a\n    };\n}\nfunction $97ecbd121be4860b$var$rgbString(v) {\n    return v && (v.a < 255 ? `rgba(${v.r}, ${v.g}, ${v.b}, ${$97ecbd121be4860b$var$b2n(v.a)})` : `rgb(${v.r}, ${v.g}, ${v.b})`);\n}\nconst $97ecbd121be4860b$var$to = (v)=>v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst $97ecbd121be4860b$var$from = (v)=>v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction $97ecbd121be4860b$var$interpolate(rgb1, rgb2, t) {\n    const r = $97ecbd121be4860b$var$from($97ecbd121be4860b$var$b2n(rgb1.r));\n    const g = $97ecbd121be4860b$var$from($97ecbd121be4860b$var$b2n(rgb1.g));\n    const b = $97ecbd121be4860b$var$from($97ecbd121be4860b$var$b2n(rgb1.b));\n    return {\n        r: $97ecbd121be4860b$var$n2b($97ecbd121be4860b$var$to(r + t * ($97ecbd121be4860b$var$from($97ecbd121be4860b$var$b2n(rgb2.r)) - r))),\n        g: $97ecbd121be4860b$var$n2b($97ecbd121be4860b$var$to(g + t * ($97ecbd121be4860b$var$from($97ecbd121be4860b$var$b2n(rgb2.g)) - g))),\n        b: $97ecbd121be4860b$var$n2b($97ecbd121be4860b$var$to(b + t * ($97ecbd121be4860b$var$from($97ecbd121be4860b$var$b2n(rgb2.b)) - b))),\n        a: rgb1.a + t * (rgb2.a - rgb1.a)\n    };\n}\nfunction $97ecbd121be4860b$var$modHSL(v, i, ratio) {\n    if (v) {\n        let tmp = $97ecbd121be4860b$var$rgb2hsl(v);\n        tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n        tmp = $97ecbd121be4860b$var$hsl2rgb(tmp);\n        v.r = tmp[0];\n        v.g = tmp[1];\n        v.b = tmp[2];\n    }\n}\nfunction $97ecbd121be4860b$var$clone(v, proto) {\n    return v ? Object.assign(proto || {}, v) : v;\n}\nfunction $97ecbd121be4860b$var$fromObject(input) {\n    var v = {\n        r: 0,\n        g: 0,\n        b: 0,\n        a: 255\n    };\n    if (Array.isArray(input)) {\n        if (input.length >= 3) {\n            v = {\n                r: input[0],\n                g: input[1],\n                b: input[2],\n                a: 255\n            };\n            if (input.length > 3) v.a = $97ecbd121be4860b$var$n2b(input[3]);\n        }\n    } else {\n        v = $97ecbd121be4860b$var$clone(input, {\n            r: 0,\n            g: 0,\n            b: 0,\n            a: 1\n        });\n        v.a = $97ecbd121be4860b$var$n2b(v.a);\n    }\n    return v;\n}\nfunction $97ecbd121be4860b$var$functionParse(str) {\n    if (str.charAt(0) === 'r') return $97ecbd121be4860b$var$rgbParse(str);\n    return $97ecbd121be4860b$var$hueParse(str);\n}\nclass $97ecbd121be4860b$var$Color {\n    constructor(input){\n        if (input instanceof $97ecbd121be4860b$var$Color) return input;\n        const type = typeof input;\n        let v;\n        if (type === 'object') v = $97ecbd121be4860b$var$fromObject(input);\n        else if (type === 'string') v = $97ecbd121be4860b$var$hexParse(input) || $97ecbd121be4860b$var$nameParse(input) || $97ecbd121be4860b$var$functionParse(input);\n        this._rgb = v;\n        this._valid = !!v;\n    }\n    get valid() {\n        return this._valid;\n    }\n    get rgb() {\n        var v = $97ecbd121be4860b$var$clone(this._rgb);\n        if (v) v.a = $97ecbd121be4860b$var$b2n(v.a);\n        return v;\n    }\n    set rgb(obj) {\n        this._rgb = $97ecbd121be4860b$var$fromObject(obj);\n    }\n    rgbString() {\n        return this._valid ? $97ecbd121be4860b$var$rgbString(this._rgb) : undefined;\n    }\n    hexString() {\n        return this._valid ? $97ecbd121be4860b$var$hexString(this._rgb) : undefined;\n    }\n    hslString() {\n        return this._valid ? $97ecbd121be4860b$var$hslString(this._rgb) : undefined;\n    }\n    mix(color, weight) {\n        if (color) {\n            const c1 = this.rgb;\n            const c2 = color.rgb;\n            let w2;\n            const p = weight === w2 ? 0.5 : weight;\n            const w = 2 * p - 1;\n            const a = c1.a - c2.a;\n            const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n            w2 = 1 - w1;\n            c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n            c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n            c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n            c1.a = p * c1.a + (1 - p) * c2.a;\n            this.rgb = c1;\n        }\n        return this;\n    }\n    interpolate(color, t) {\n        if (color) this._rgb = $97ecbd121be4860b$var$interpolate(this._rgb, color._rgb, t);\n        return this;\n    }\n    clone() {\n        return new $97ecbd121be4860b$var$Color(this.rgb);\n    }\n    alpha(a) {\n        this._rgb.a = $97ecbd121be4860b$var$n2b(a);\n        return this;\n    }\n    clearer(ratio) {\n        const rgb = this._rgb;\n        rgb.a *= 1 - ratio;\n        return this;\n    }\n    greyscale() {\n        const rgb = this._rgb;\n        const val = $97ecbd121be4860b$var$round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n        rgb.r = rgb.g = rgb.b = val;\n        return this;\n    }\n    opaquer(ratio) {\n        const rgb = this._rgb;\n        rgb.a *= 1 + ratio;\n        return this;\n    }\n    negate() {\n        const v = this._rgb;\n        v.r = 255 - v.r;\n        v.g = 255 - v.g;\n        v.b = 255 - v.b;\n        return this;\n    }\n    lighten(ratio) {\n        $97ecbd121be4860b$var$modHSL(this._rgb, 2, ratio);\n        return this;\n    }\n    darken(ratio) {\n        $97ecbd121be4860b$var$modHSL(this._rgb, 2, -ratio);\n        return this;\n    }\n    saturate(ratio) {\n        $97ecbd121be4860b$var$modHSL(this._rgb, 1, ratio);\n        return this;\n    }\n    desaturate(ratio) {\n        $97ecbd121be4860b$var$modHSL(this._rgb, 1, -ratio);\n        return this;\n    }\n    rotate(deg) {\n        $97ecbd121be4860b$var$rotate(this._rgb, deg);\n        return this;\n    }\n}\nfunction $97ecbd121be4860b$var$index_esm(input) {\n    return new $97ecbd121be4860b$var$Color(input);\n}\nfunction $97ecbd121be4860b$export$2ed0fc6709e59212(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction $97ecbd121be4860b$export$db3b6bfb95261072(value) {\n    return $97ecbd121be4860b$export$2ed0fc6709e59212(value) ? value : $97ecbd121be4860b$var$index_esm(value);\n}\nfunction $97ecbd121be4860b$export$f96d196f7728bb5(value) {\n    return $97ecbd121be4860b$export$2ed0fc6709e59212(value) ? value : $97ecbd121be4860b$var$index_esm(value).saturate(0.5).darken(0.1).hexString();\n}\nconst $97ecbd121be4860b$export$3a6d5c9ae78a2c08 = Object.create(null);\nconst $97ecbd121be4860b$export$a93c5207d687da10 = Object.create(null);\nfunction $97ecbd121be4860b$var$getScope$1(node, key) {\n    if (!key) return node;\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction $97ecbd121be4860b$var$set(root, scope, values) {\n    if (typeof scope === 'string') return $97ecbd121be4860b$export$e7c866399fa523f5($97ecbd121be4860b$var$getScope$1(root, scope), values);\n    return $97ecbd121be4860b$export$e7c866399fa523f5($97ecbd121be4860b$var$getScope$1(root, ''), scope);\n}\nclass $97ecbd121be4860b$var$Defaults {\n    constructor(_descriptors){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>$97ecbd121be4860b$export$f96d196f7728bb5(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>$97ecbd121be4860b$export$f96d196f7728bb5(options.borderColor);\n        this.hoverColor = (ctx, options)=>$97ecbd121be4860b$export$f96d196f7728bb5(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n    }\n    set(scope, values) {\n        return $97ecbd121be4860b$var$set(this, scope, values);\n    }\n    get(scope) {\n        return $97ecbd121be4860b$var$getScope$1(this, scope);\n    }\n    describe(scope, values) {\n        return $97ecbd121be4860b$var$set($97ecbd121be4860b$export$a93c5207d687da10, scope, values);\n    }\n    override(scope, values) {\n        return $97ecbd121be4860b$var$set($97ecbd121be4860b$export$3a6d5c9ae78a2c08, scope, values);\n    }\n    route(scope, name, targetScope, targetName) {\n        const scopeObject = $97ecbd121be4860b$var$getScope$1(this, scope);\n        const targetScopeObject = $97ecbd121be4860b$var$getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if ($97ecbd121be4860b$export$23f2a1d2818174ef(local)) return Object.assign({}, target, local);\n                    return $97ecbd121be4860b$export$90a7f3efeed30595(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n}\nvar $97ecbd121be4860b$export$4368d992c4eafac0 = new $97ecbd121be4860b$var$Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n});\nfunction $97ecbd121be4860b$export$9d0e2d13d04f7070(font) {\n    if (!font || $97ecbd121be4860b$export$342063e11d6c3cad(font.size) || $97ecbd121be4860b$export$342063e11d6c3cad(font.family)) return null;\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\nfunction $97ecbd121be4860b$export$2329c99376c9d0a4(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) longest = textWidth;\n    return longest;\n}\nfunction $97ecbd121be4860b$export$9f4f30ee63539e24(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        if (thing !== undefined && thing !== null && $97ecbd121be4860b$export$8b22cf2602fb60ce(thing) !== true) longest = $97ecbd121be4860b$export$2329c99376c9d0a4(ctx, data, gc, longest, thing);\n        else if ($97ecbd121be4860b$export$8b22cf2602fb60ce(thing)) for(j = 0, jlen = thing.length; j < jlen; j++){\n            nestedThing = thing[j];\n            if (nestedThing !== undefined && nestedThing !== null && !$97ecbd121be4860b$export$8b22cf2602fb60ce(nestedThing)) longest = $97ecbd121be4860b$export$2329c99376c9d0a4(ctx, data, gc, longest, nestedThing);\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++)delete data[gc[i]];\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\nfunction $97ecbd121be4860b$export$b4171a6734a65d42(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\nfunction $97ecbd121be4860b$export$ee7c8ad385a60b7b(canvas, ctx) {\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction $97ecbd121be4860b$export$1fbe638ecf81657e(ctx, options, x, y) {\n    $97ecbd121be4860b$export$158acd800e1ef08b(ctx, options, x, y, null);\n}\nfunction $97ecbd121be4860b$export$158acd800e1ef08b(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * $97ecbd121be4860b$export$2ec5befb9e6c97d4;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) return;\n    ctx.beginPath();\n    switch(style){\n        default:\n            if (w) ctx.ellipse(x, y, w / 2, radius, 0, 0, $97ecbd121be4860b$export$971d5caa766a69d7);\n            else ctx.arc(x, y, radius, 0, $97ecbd121be4860b$export$971d5caa766a69d7);\n            ctx.closePath();\n            break;\n        case 'triangle':\n            ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n            rad += $97ecbd121be4860b$export$39c1cc7c062529d4;\n            ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n            rad += $97ecbd121be4860b$export$39c1cc7c062529d4;\n            ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + $97ecbd121be4860b$export$53c86fa97d611818) * size;\n            yOffset = Math.sin(rad + $97ecbd121be4860b$export$53c86fa97d611818) * size;\n            ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - $97ecbd121be4860b$export$56c0d5a1e737357d, rad - $97ecbd121be4860b$export$7f8ddf7c7c20b3cd);\n            ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - $97ecbd121be4860b$export$7f8ddf7c7c20b3cd, rad);\n            ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + $97ecbd121be4860b$export$7f8ddf7c7c20b3cd);\n            ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + $97ecbd121be4860b$export$7f8ddf7c7c20b3cd, rad + $97ecbd121be4860b$export$56c0d5a1e737357d);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += $97ecbd121be4860b$export$53c86fa97d611818;\n        case 'rectRot':\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + yOffset, y - xOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            ctx.lineTo(x - yOffset, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += $97ecbd121be4860b$export$53c86fa97d611818;\n        case 'cross':\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            ctx.moveTo(x + yOffset, y - xOffset);\n            ctx.lineTo(x - yOffset, y + xOffset);\n            break;\n        case 'star':\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            ctx.moveTo(x + yOffset, y - xOffset);\n            ctx.lineTo(x - yOffset, y + xOffset);\n            rad += $97ecbd121be4860b$export$53c86fa97d611818;\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            ctx.moveTo(x + yOffset, y - xOffset);\n            ctx.lineTo(x - yOffset, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) ctx.stroke();\n}\nfunction $97ecbd121be4860b$export$3d8c2f653ac9d0b9(point, area, margin) {\n    margin = margin || 0.5;\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction $97ecbd121be4860b$export$61196ced6d74a310(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction $97ecbd121be4860b$export$a07804094c3ecf2d(ctx) {\n    ctx.restore();\n}\nfunction $97ecbd121be4860b$export$6554612db691658e(ctx, previous, target, flip, mode) {\n    if (!previous) return ctx.lineTo(target.x, target.y);\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) ctx.lineTo(previous.x, target.y);\n    else ctx.lineTo(target.x, previous.y);\n    ctx.lineTo(target.x, target.y);\n}\nfunction $97ecbd121be4860b$export$493d36ec626b6698(ctx, previous, target, flip) {\n    if (!previous) return ctx.lineTo(target.x, target.y);\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction $97ecbd121be4860b$export$3a1a48c8f6ef640e(ctx, text, x, y, font, opts = {}) {\n    const lines = $97ecbd121be4860b$export$8b22cf2602fb60ce(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    $97ecbd121be4860b$var$setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (stroke) {\n            if (opts.strokeColor) ctx.strokeStyle = opts.strokeColor;\n            if (!$97ecbd121be4860b$export$342063e11d6c3cad(opts.strokeWidth)) ctx.lineWidth = opts.strokeWidth;\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        $97ecbd121be4860b$var$decorateText(ctx, x, y, line, opts);\n        y += font.lineHeight;\n    }\n    ctx.restore();\n}\nfunction $97ecbd121be4860b$var$setRenderOpts(ctx, opts) {\n    if (opts.translation) ctx.translate(opts.translation[0], opts.translation[1]);\n    if (!$97ecbd121be4860b$export$342063e11d6c3cad(opts.rotation)) ctx.rotate(opts.rotation);\n    if (opts.color) ctx.fillStyle = opts.color;\n    if (opts.textAlign) ctx.textAlign = opts.textAlign;\n    if (opts.textBaseline) ctx.textBaseline = opts.textBaseline;\n}\nfunction $97ecbd121be4860b$var$decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction $97ecbd121be4860b$export$d66dc83d8cfc8dd(ctx, rect) {\n    const { x: x, y: y, w: w, h: h, radius: radius } = rect;\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -$97ecbd121be4860b$export$7f8ddf7c7c20b3cd, $97ecbd121be4860b$export$56c0d5a1e737357d, true);\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, $97ecbd121be4860b$export$56c0d5a1e737357d, $97ecbd121be4860b$export$7f8ddf7c7c20b3cd, true);\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, $97ecbd121be4860b$export$7f8ddf7c7c20b3cd, 0, true);\n    ctx.lineTo(x + w, y + radius.topRight);\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -$97ecbd121be4860b$export$7f8ddf7c7c20b3cd, true);\n    ctx.lineTo(x + radius.topLeft, y);\n}\nconst $97ecbd121be4860b$var$LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\nconst $97ecbd121be4860b$var$FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\nfunction $97ecbd121be4860b$export$fef3dfd9bad05307(value, size) {\n    const matches = ('' + value).match($97ecbd121be4860b$var$LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') return size * 1.2;\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst $97ecbd121be4860b$var$numberOrZero = (v)=>+v || 0;\nfunction $97ecbd121be4860b$export$ab83b03e4111b1d0(value, props) {\n    const ret = {};\n    const objProps = $97ecbd121be4860b$export$23f2a1d2818174ef(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = $97ecbd121be4860b$export$23f2a1d2818174ef(value) ? objProps ? (prop)=>$97ecbd121be4860b$export$90a7f3efeed30595(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys)ret[prop] = $97ecbd121be4860b$var$numberOrZero(read(prop));\n    return ret;\n}\nfunction $97ecbd121be4860b$export$92108d983e8ee699(value) {\n    return $97ecbd121be4860b$export$ab83b03e4111b1d0(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\nfunction $97ecbd121be4860b$export$9fa96a7d116ea3ce(value) {\n    return $97ecbd121be4860b$export$ab83b03e4111b1d0(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\nfunction $97ecbd121be4860b$export$3466f893ebf79586(value) {\n    const obj = $97ecbd121be4860b$export$92108d983e8ee699(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\nfunction $97ecbd121be4860b$export$c4ce752e73470fba(options, fallback) {\n    options = options || {};\n    fallback = fallback || $97ecbd121be4860b$export$4368d992c4eafac0.font;\n    let size = $97ecbd121be4860b$export$90a7f3efeed30595(options.size, fallback.size);\n    if (typeof size === 'string') size = parseInt(size, 10);\n    let style = $97ecbd121be4860b$export$90a7f3efeed30595(options.style, fallback.style);\n    if (style && !('' + style).match($97ecbd121be4860b$var$FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = '';\n    }\n    const font = {\n        family: $97ecbd121be4860b$export$90a7f3efeed30595(options.family, fallback.family),\n        lineHeight: $97ecbd121be4860b$export$fef3dfd9bad05307($97ecbd121be4860b$export$90a7f3efeed30595(options.lineHeight, fallback.lineHeight), size),\n        size: size,\n        style: style,\n        weight: $97ecbd121be4860b$export$90a7f3efeed30595(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = $97ecbd121be4860b$export$9d0e2d13d04f7070(font);\n    return font;\n}\nfunction $97ecbd121be4860b$export$407448d2b89b1813(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) continue;\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && $97ecbd121be4860b$export$8b22cf2602fb60ce(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) info.cacheable = false;\n            return value;\n        }\n    }\n}\nfunction $97ecbd121be4860b$export$96f57966bedc81b4(minmax, grace, beginAtZero) {\n    const { min: min, max: max } = minmax;\n    const change = $97ecbd121be4860b$export$7ccc53e8f1e7dfc5(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction $97ecbd121be4860b$export$dda1d9f60106f0e9(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\nfunction $97ecbd121be4860b$export$7910e0436ed8d1de(scopes, prefixes = [\n    ''\n], rootScopes = scopes, fallback, getTarget = ()=>scopes[0]) {\n    if (!$97ecbd121be4860b$export$35e795649ee09318(fallback)) fallback = $97ecbd121be4860b$var$_resolve('_fallback', scopes);\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: rootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>$97ecbd121be4860b$export$7910e0436ed8d1de([\n                scope,\n                ...scopes\n            ], prefixes, rootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        deleteProperty (target, prop) {\n            delete target[prop];\n            delete target._keys;\n            delete scopes[0][prop];\n            return true;\n        },\n        get (target, prop) {\n            return $97ecbd121be4860b$var$_cached(target, prop, ()=>$97ecbd121be4860b$var$_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        has (target, prop) {\n            return $97ecbd121be4860b$var$getKeysFromAllScopes(target).includes(prop);\n        },\n        ownKeys (target) {\n            return $97ecbd121be4860b$var$getKeysFromAllScopes(target);\n        },\n        set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value;\n            delete target._keys;\n            return true;\n        }\n    });\n}\nfunction $97ecbd121be4860b$export$a9c996f45e5784d0(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: $97ecbd121be4860b$export$555508cbc6add439(proxy, descriptorDefaults),\n        setContext: (ctx)=>$97ecbd121be4860b$export$a9c996f45e5784d0(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>$97ecbd121be4860b$export$a9c996f45e5784d0(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        deleteProperty (target, prop) {\n            delete target[prop];\n            delete proxy[prop];\n            return true;\n        },\n        get (target, prop, receiver) {\n            return $97ecbd121be4860b$var$_cached(target, prop, ()=>$97ecbd121be4860b$var$_resolveWithContext(target, prop, receiver));\n        },\n        getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        set (target, prop, value) {\n            proxy[prop] = value;\n            delete target[prop];\n            return true;\n        }\n    });\n}\nfunction $97ecbd121be4860b$export$555508cbc6add439(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable: _scriptable = defaults.scriptable, _indexable: _indexable = defaults.indexable, _allKeys: _allKeys = defaults.allKeys } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: $97ecbd121be4860b$export$c3950d9923825c02(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: $97ecbd121be4860b$export$c3950d9923825c02(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst $97ecbd121be4860b$var$readKey = (prefix, name)=>prefix ? prefix + $97ecbd121be4860b$export$71cec2538cb2c617(name) : name;\nconst $97ecbd121be4860b$var$needsSubResolver = (prop, value)=>$97ecbd121be4860b$export$23f2a1d2818174ef(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction $97ecbd121be4860b$var$_cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop)) return target[prop];\n    const value = resolve();\n    target[prop] = value;\n    return value;\n}\nfunction $97ecbd121be4860b$var$_resolveWithContext(target, prop, receiver) {\n    const { _proxy: _proxy, _context: _context, _subProxy: _subProxy, _descriptors: descriptors } = target;\n    let value = _proxy[prop];\n    if ($97ecbd121be4860b$export$c3950d9923825c02(value) && descriptors.isScriptable(prop)) value = $97ecbd121be4860b$var$_resolveScriptable(prop, value, target, receiver);\n    if ($97ecbd121be4860b$export$8b22cf2602fb60ce(value) && value.length) value = $97ecbd121be4860b$var$_resolveArray(prop, value, target, descriptors.isIndexable);\n    if ($97ecbd121be4860b$var$needsSubResolver(prop, value)) value = $97ecbd121be4860b$export$a9c996f45e5784d0(value, _context, _subProxy && _subProxy[prop], descriptors);\n    return value;\n}\nfunction $97ecbd121be4860b$var$_resolveScriptable(prop, value, target, receiver) {\n    const { _proxy: _proxy, _context: _context, _subProxy: _subProxy, _stack: _stack } = target;\n    if (_stack.has(prop)) throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    _stack.add(prop);\n    value = value(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if ($97ecbd121be4860b$var$needsSubResolver(prop, value)) value = $97ecbd121be4860b$var$createSubResolver(_proxy._scopes, _proxy, prop, value);\n    return value;\n}\nfunction $97ecbd121be4860b$var$_resolveArray(prop, value, target, isIndexable) {\n    const { _proxy: _proxy, _context: _context, _subProxy: _subProxy, _descriptors: descriptors } = target;\n    if ($97ecbd121be4860b$export$35e795649ee09318(_context.index) && isIndexable(prop)) value = value[_context.index % value.length];\n    else if ($97ecbd121be4860b$export$23f2a1d2818174ef(value[0])) {\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = $97ecbd121be4860b$var$createSubResolver(scopes, _proxy, prop, item);\n            value.push($97ecbd121be4860b$export$a9c996f45e5784d0(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction $97ecbd121be4860b$var$resolveFallback(fallback, prop, value) {\n    return $97ecbd121be4860b$export$c3950d9923825c02(fallback) ? fallback(prop, value) : fallback;\n}\nconst $97ecbd121be4860b$var$getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? $97ecbd121be4860b$export$2d1720544b23b823(parent, key) : undefined;\nfunction $97ecbd121be4860b$var$addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = $97ecbd121be4860b$var$getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = $97ecbd121be4860b$var$resolveFallback(scope._fallback, key, value);\n            if ($97ecbd121be4860b$export$35e795649ee09318(fallback) && fallback !== key && fallback !== parentFallback) return fallback;\n        } else if (scope === false && $97ecbd121be4860b$export$35e795649ee09318(parentFallback) && key !== parentFallback) return null;\n    }\n    return false;\n}\nfunction $97ecbd121be4860b$var$createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = $97ecbd121be4860b$var$resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = $97ecbd121be4860b$var$addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) return false;\n    if ($97ecbd121be4860b$export$35e795649ee09318(fallback) && fallback !== prop) {\n        key = $97ecbd121be4860b$var$addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) return false;\n    }\n    return $97ecbd121be4860b$export$7910e0436ed8d1de(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>$97ecbd121be4860b$var$subGetTarget(resolver, prop, value));\n}\nfunction $97ecbd121be4860b$var$addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key)key = $97ecbd121be4860b$var$addScopes(set, allScopes, key, fallback, item);\n    return key;\n}\nfunction $97ecbd121be4860b$var$subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) parent[prop] = {};\n    const target = parent[prop];\n    if ($97ecbd121be4860b$export$8b22cf2602fb60ce(target) && $97ecbd121be4860b$export$23f2a1d2818174ef(value)) return value;\n    return target;\n}\nfunction $97ecbd121be4860b$var$_resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = $97ecbd121be4860b$var$_resolve($97ecbd121be4860b$var$readKey(prefix, prop), scopes);\n        if ($97ecbd121be4860b$export$35e795649ee09318(value)) return $97ecbd121be4860b$var$needsSubResolver(prop, value) ? $97ecbd121be4860b$var$createSubResolver(scopes, proxy, prop, value) : value;\n    }\n}\nfunction $97ecbd121be4860b$var$_resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) continue;\n        const value = scope[key];\n        if ($97ecbd121be4860b$export$35e795649ee09318(value)) return value;\n    }\n}\nfunction $97ecbd121be4860b$var$getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) keys = target._keys = $97ecbd121be4860b$var$resolveKeysFromAllScopes(target._scopes);\n    return keys;\n}\nfunction $97ecbd121be4860b$var$resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes)for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_')))set.add(key);\n    return Array.from(set);\n}\nfunction $97ecbd121be4860b$export$4a5767248b18ef41(meta, data, start, count) {\n    const { iScale: iScale } = meta;\n    const { key: key = 'r' } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse($97ecbd121be4860b$export$2d1720544b23b823(item, key), index)\n        };\n    }\n    return parsed;\n}\nconst $97ecbd121be4860b$var$EPSILON = Number.EPSILON || 1e-14;\nconst $97ecbd121be4860b$var$getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst $97ecbd121be4860b$var$getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction $97ecbd121be4860b$export$1a8f5705751d8277(firstPoint, middlePoint, afterPoint, t) {\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = $97ecbd121be4860b$export$53a70dd1ebbae346(current, previous);\n    const d12 = $97ecbd121be4860b$export$53a70dd1ebbae346(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01;\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\nfunction $97ecbd121be4860b$var$monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = $97ecbd121be4860b$var$getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = $97ecbd121be4860b$var$getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) continue;\n        if ($97ecbd121be4860b$export$23ebac1979863676(deltaK[i], 0, $97ecbd121be4860b$var$EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) continue;\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction $97ecbd121be4860b$var$monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = $97ecbd121be4860b$var$getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = $97ecbd121be4860b$var$getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = $97ecbd121be4860b$var$getPoint(points, i + 1);\n        if (!pointCurrent) continue;\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\nfunction $97ecbd121be4860b$export$e171bab687b50e0(points, indexAxis = 'x') {\n    const valueAxis = $97ecbd121be4860b$var$getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    let i, pointBefore, pointCurrent;\n    let pointAfter = $97ecbd121be4860b$var$getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = $97ecbd121be4860b$var$getPoint(points, i + 1);\n        if (!pointCurrent) continue;\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : $97ecbd121be4860b$export$2408f22a0fab9ae5(deltaK[i - 1]) !== $97ecbd121be4860b$export$2408f22a0fab9ae5(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    $97ecbd121be4860b$var$monotoneAdjust(points, deltaK, mK);\n    $97ecbd121be4860b$var$monotoneCompute(points, mK, indexAxis);\n}\nfunction $97ecbd121be4860b$var$capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction $97ecbd121be4860b$var$capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = $97ecbd121be4860b$export$3d8c2f653ac9d0b9(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && $97ecbd121be4860b$export$3d8c2f653ac9d0b9(points[i + 1], area);\n        if (!inArea) continue;\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = $97ecbd121be4860b$var$capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = $97ecbd121be4860b$var$capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = $97ecbd121be4860b$var$capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = $97ecbd121be4860b$var$capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\nfunction $97ecbd121be4860b$export$1a82df3d29112e01(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    if (options.spanGaps) points = points.filter((pt)=>!pt.skip);\n    if (options.cubicInterpolationMode === 'monotone') $97ecbd121be4860b$export$e171bab687b50e0(points, indexAxis);\n    else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = $97ecbd121be4860b$export$1a8f5705751d8277(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) $97ecbd121be4860b$var$capBezierPoints(points, area);\n}\nfunction $97ecbd121be4860b$export$2e2af4578d910ddf() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction $97ecbd121be4860b$export$ce26c07117d59d6a(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') parent = parent.host;\n    return parent;\n}\nfunction $97ecbd121be4860b$var$parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n    } else valueInPixels = styleValue;\n    return valueInPixels;\n}\nconst $97ecbd121be4860b$var$getComputedStyle = (element)=>window.getComputedStyle(element, null);\nfunction $97ecbd121be4860b$export$527e9aa3390079e9(el, property) {\n    return $97ecbd121be4860b$var$getComputedStyle(el).getPropertyValue(property);\n}\nconst $97ecbd121be4860b$var$positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction $97ecbd121be4860b$var$getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = $97ecbd121be4860b$var$positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst $97ecbd121be4860b$var$useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\nfunction $97ecbd121be4860b$var$getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX: offsetX, offsetY: offsetY } = source;\n    let box = false;\n    let x, y;\n    if ($97ecbd121be4860b$var$useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x: x,\n        y: y,\n        box: box\n    };\n}\nfunction $97ecbd121be4860b$export$78acf4525d8a74c4(evt, chart) {\n    if ('native' in evt) return evt;\n    const { canvas: canvas, currentDevicePixelRatio: currentDevicePixelRatio } = chart;\n    const style = $97ecbd121be4860b$var$getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = $97ecbd121be4860b$var$getPositionedStyle(style, 'padding');\n    const borders = $97ecbd121be4860b$var$getPositionedStyle(style, 'border', 'width');\n    const { x: x, y: y, box: box } = $97ecbd121be4860b$var$getCanvasPosition(evt, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width: width, height: height } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction $97ecbd121be4860b$var$getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = $97ecbd121be4860b$export$ce26c07117d59d6a(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect();\n            const containerStyle = $97ecbd121be4860b$var$getComputedStyle(container);\n            const containerBorder = $97ecbd121be4860b$var$getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = $97ecbd121be4860b$var$getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = $97ecbd121be4860b$var$parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = $97ecbd121be4860b$var$parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width: width,\n        height: height,\n        maxWidth: maxWidth || $97ecbd121be4860b$export$d29e374196577086,\n        maxHeight: maxHeight || $97ecbd121be4860b$export$d29e374196577086\n    };\n}\nconst $97ecbd121be4860b$var$round1 = (v)=>Math.round(v * 10) / 10;\nfunction $97ecbd121be4860b$export$3c2fa207a37baaea(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = $97ecbd121be4860b$var$getComputedStyle(canvas);\n    const margins = $97ecbd121be4860b$var$getPositionedStyle(style, 'margin');\n    const maxWidth = $97ecbd121be4860b$var$parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || $97ecbd121be4860b$export$d29e374196577086;\n    const maxHeight = $97ecbd121be4860b$var$parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || $97ecbd121be4860b$export$d29e374196577086;\n    const containerSize = $97ecbd121be4860b$var$getContainerSize(canvas, bbWidth, bbHeight);\n    let { width: width, height: height } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = $97ecbd121be4860b$var$getPositionedStyle(style, 'border', 'width');\n        const paddings = $97ecbd121be4860b$var$getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n    width = $97ecbd121be4860b$var$round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = $97ecbd121be4860b$var$round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) height = $97ecbd121be4860b$var$round1(width / 2);\n    return {\n        width: width,\n        height: height\n    };\n}\nfunction $97ecbd121be4860b$export$c9170ad7d4cd7e57(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = deviceHeight / pixelRatio;\n    chart.width = deviceWidth / pixelRatio;\n    const canvas = chart.canvas;\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\nconst $97ecbd121be4860b$export$a8550f7dbe79f93a = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        window.addEventListener('test', null, options);\n        window.removeEventListener('test', null, options);\n    } catch (e) {}\n    return passiveSupported;\n}();\nfunction $97ecbd121be4860b$export$6559d589eb85fbb6(element, property) {\n    const value = $97ecbd121be4860b$export$527e9aa3390079e9(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\nfunction $97ecbd121be4860b$export$d24c54395ce0c509(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\nfunction $97ecbd121be4860b$export$2f6ca3d3b1f80bf5(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\nfunction $97ecbd121be4860b$export$8a5498727ef6be21(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = $97ecbd121be4860b$export$d24c54395ce0c509(p1, cp1, t);\n    const b = $97ecbd121be4860b$export$d24c54395ce0c509(cp1, cp2, t);\n    const c = $97ecbd121be4860b$export$d24c54395ce0c509(cp2, p2, t);\n    const d = $97ecbd121be4860b$export$d24c54395ce0c509(a, b, t);\n    const e = $97ecbd121be4860b$export$d24c54395ce0c509(b, c, t);\n    return $97ecbd121be4860b$export$d24c54395ce0c509(d, e, t);\n}\nconst $97ecbd121be4860b$var$intlCache = new Map();\nfunction $97ecbd121be4860b$var$getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = $97ecbd121be4860b$var$intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        $97ecbd121be4860b$var$intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction $97ecbd121be4860b$export$ae1af26003f05816(num, locale, options) {\n    return $97ecbd121be4860b$var$getNumberFormat(locale, options).format(num);\n}\nconst $97ecbd121be4860b$var$getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') return align;\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst $97ecbd121be4860b$var$getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction $97ecbd121be4860b$export$91c6e00c14e7e6fd(rtl, rectX, width) {\n    return rtl ? $97ecbd121be4860b$var$getRightToLeftAdapter(rectX, width) : $97ecbd121be4860b$var$getLeftToRightAdapter();\n}\nfunction $97ecbd121be4860b$export$9d398bebfec1c039(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction $97ecbd121be4860b$export$24baa2b76016ce0e(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\nfunction $97ecbd121be4860b$var$propertyFn(property) {\n    if (property === 'angle') return {\n        between: $97ecbd121be4860b$export$ffb5f4729a158638,\n        compare: $97ecbd121be4860b$export$7a0bdf7d4a91ea88,\n        normalize: $97ecbd121be4860b$export$3d12bd131bb975d1\n    };\n    return {\n        between: $97ecbd121be4860b$export$21579262ef46735b,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction $97ecbd121be4860b$var$normalizeSegment({ start: start, end: end, count: count, loop: loop, style: style }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style: style\n    };\n}\nfunction $97ecbd121be4860b$var$getSegment(segment, points, bounds) {\n    const { property: property, start: startBound, end: endBound } = bounds;\n    const { between: between, normalize: normalize } = $97ecbd121be4860b$var$propertyFn(property);\n    const count = points.length;\n    let { start: start, end: end, loop: loop } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) break;\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) end += count;\n    return {\n        start: start,\n        end: end,\n        loop: loop,\n        style: segment.style\n    };\n}\nfunction $97ecbd121be4860b$export$28f7fcd39efa255(segment, points, bounds) {\n    if (!bounds) return [\n        segment\n    ];\n    const { property: property, start: startBound, end: endBound } = bounds;\n    const count = points.length;\n    const { compare: compare, between: between, normalize: normalize } = $97ecbd121be4860b$var$propertyFn(property);\n    const { start: start, end: end, loop: loop, style: style } = $97ecbd121be4860b$var$getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) continue;\n        value = normalize(point[property]);\n        if (value === prevValue) continue;\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) subStart = compare(value, startBound) === 0 ? i : prev;\n        if (subStart !== null && shouldStop()) {\n            result.push($97ecbd121be4860b$var$normalizeSegment({\n                start: subStart,\n                end: i,\n                loop: loop,\n                count: count,\n                style: style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) result.push($97ecbd121be4860b$var$normalizeSegment({\n        start: subStart,\n        end: end,\n        loop: loop,\n        count: count,\n        style: style\n    }));\n    return result;\n}\nfunction $97ecbd121be4860b$export$7a38258bbe170828(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = $97ecbd121be4860b$export$28f7fcd39efa255(segments[i], line.points, bounds);\n        if (sub.length) result.push(...sub);\n    }\n    return result;\n}\nfunction $97ecbd121be4860b$var$findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) while(start < count && !points[start].skip)start++;\n    while(start < count && points[start].skip)start++;\n    start %= count;\n    if (loop) end += start;\n    while(end > start && points[end % count].skip)end--;\n    end %= count;\n    return {\n        start: start,\n        end: end\n    };\n}\nfunction $97ecbd121be4860b$var$solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop: loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) start = end;\n        }\n        prev = cur;\n    }\n    if (last !== null) result.push({\n        start: start % count,\n        end: last % count,\n        loop: loop\n    });\n    return result;\n}\nfunction $97ecbd121be4860b$export$306ddfe3a8403e2(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) return [];\n    const loop = !!line._loop;\n    const { start: start, end: end } = $97ecbd121be4860b$var$findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) return $97ecbd121be4860b$var$splitByStyles(line, [\n        {\n            start: start,\n            end: end,\n            loop: loop\n        }\n    ], points, segmentOptions);\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return $97ecbd121be4860b$var$splitByStyles(line, $97ecbd121be4860b$var$solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\nfunction $97ecbd121be4860b$var$splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) return segments;\n    return $97ecbd121be4860b$var$doSplitByStyles(line, segments, points, segmentOptions);\n}\nfunction $97ecbd121be4860b$var$doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = $97ecbd121be4860b$var$readStyle(line.options);\n    const { _datasetIndex: datasetIndex, options: { spanGaps: spanGaps } } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) return;\n        s += count;\n        while(points[s % count].skip)s -= dir;\n        while(points[e % count].skip)e += dir;\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = $97ecbd121be4860b$var$readStyle(segmentOptions.setContext($97ecbd121be4860b$export$dda1d9f60106f0e9(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex: datasetIndex\n            })));\n            if ($97ecbd121be4860b$var$styleChanged(style, prevStyle)) addStyle(start, i - 1, segment.loop, prevStyle);\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n    return result;\n}\nfunction $97ecbd121be4860b$var$readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction $97ecbd121be4860b$var$styleChanged(style, prevStyle) {\n    return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\n\nclass $1af551c56cb88ebf$var$Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n    _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart: chart,\n                initial: anims.initial,\n                numSteps: numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n    _refresh() {\n        if (this._request) return;\n        this._running = true;\n        this._request = (0, $97ecbd121be4860b$export$43caf9889c228507).call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) this._refresh();\n        });\n    }\n    _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) return;\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) anims.duration = item._total;\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) this._running = false;\n    }\n    _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n    listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n    add(chart, items) {\n        if (!items || !items.length) return;\n        this._getAnims(chart).items.push(...items);\n    }\n    has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n    start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) return;\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) return false;\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) return false;\n        return true;\n    }\n    stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) return;\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i)items[i].cancel();\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n    remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar $1af551c56cb88ebf$export$a424a0aa8f687495 = new $1af551c56cb88ebf$var$Animator();\nconst $1af551c56cb88ebf$var$transparent = 'transparent';\nconst $1af551c56cb88ebf$var$interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n    color (from, to, factor) {\n        const c0 = (0, $97ecbd121be4860b$export$db3b6bfb95261072)(from || $1af551c56cb88ebf$var$transparent);\n        const c1 = c0.valid && (0, $97ecbd121be4860b$export$db3b6bfb95261072)(to || $1af551c56cb88ebf$var$transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass $1af551c56cb88ebf$export$c35d437ae5945fcd {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = (0, $97ecbd121be4860b$export$407448d2b89b1813)([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = (0, $97ecbd121be4860b$export$407448d2b89b1813)([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || $1af551c56cb88ebf$var$interpolators[cfg.type || typeof from];\n        this._easing = (0, $97ecbd121be4860b$export$f1e1789686576879)[cfg.easing] || (0, $97ecbd121be4860b$export$f1e1789686576879).linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = (0, $97ecbd121be4860b$export$407448d2b89b1813)([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = (0, $97ecbd121be4860b$export$407448d2b89b1813)([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res: res,\n                rej: rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++)promises[i][method]();\n    }\n}\nconst $1af551c56cb88ebf$var$numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst $1af551c56cb88ebf$var$colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\n(0, $97ecbd121be4860b$export$4368d992c4eafac0).set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined\n});\nconst $1af551c56cb88ebf$var$animationOptions = Object.keys((0, $97ecbd121be4860b$export$4368d992c4eafac0).animation);\n(0, $97ecbd121be4860b$export$4368d992c4eafac0).describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n});\n(0, $97ecbd121be4860b$export$4368d992c4eafac0).set('animations', {\n    colors: {\n        type: 'color',\n        properties: $1af551c56cb88ebf$var$colors\n    },\n    numbers: {\n        type: 'number',\n        properties: $1af551c56cb88ebf$var$numbers\n    }\n});\n(0, $97ecbd121be4860b$export$4368d992c4eafac0).describe('animations', {\n    _fallback: 'animation'\n});\n(0, $97ecbd121be4860b$export$4368d992c4eafac0).set('transitions', {\n    active: {\n        animation: {\n            duration: 400\n        }\n    },\n    resize: {\n        animation: {\n            duration: 0\n        }\n    },\n    show: {\n        animations: {\n            colors: {\n                from: 'transparent'\n            },\n            visible: {\n                type: 'boolean',\n                duration: 0\n            }\n        }\n    },\n    hide: {\n        animations: {\n            colors: {\n                to: 'transparent'\n            },\n            visible: {\n                type: 'boolean',\n                easing: 'linear',\n                fn: (v)=>v | 0\n            }\n        }\n    }\n});\nclass $1af551c56cb88ebf$export$8ab227dac26677d {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!(0, $97ecbd121be4860b$export$23f2a1d2818174ef)(config)) return;\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!(0, $97ecbd121be4860b$export$23f2a1d2818174ef)(cfg)) return;\n            const resolved = {};\n            for (const option of $1af551c56cb88ebf$var$animationOptions)resolved[option] = cfg[option];\n            ((0, $97ecbd121be4860b$export$8b22cf2602fb60ce)(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) animatedProps.set(prop, resolved);\n            });\n        });\n    }\n    _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = $1af551c56cb88ebf$var$resolveTargetOptions(target, newOptions);\n        if (!options) return [];\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) $1af551c56cb88ebf$var$awaitAll(target.options.$animations, newOptions).then(()=>{\n            target.options = newOptions;\n        }, ()=>{});\n        return animations;\n    }\n    _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') continue;\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else animation.cancel();\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new $1af551c56cb88ebf$export$c35d437ae5945fcd(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n    update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            $1af551c56cb88ebf$export$a424a0aa8f687495.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction $1af551c56cb88ebf$var$awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) running.push(anim.wait());\n    }\n    return Promise.all(running);\n}\nfunction $1af551c56cb88ebf$var$resolveTargetOptions(target, newOptions) {\n    if (!newOptions) return;\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) target.options = options = Object.assign({}, options, {\n        $shared: false,\n        $animations: {}\n    });\n    return options;\n}\nfunction $1af551c56cb88ebf$var$scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction $1af551c56cb88ebf$var$defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) return false;\n    const x = $1af551c56cb88ebf$var$scaleClip(xScale, allowedOverflow);\n    const y = $1af551c56cb88ebf$var$scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction $1af551c56cb88ebf$var$toClip(value) {\n    let t, r, b, l;\n    if ((0, $97ecbd121be4860b$export$23f2a1d2818174ef)(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else t = r = b = l = value;\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction $1af551c56cb88ebf$var$getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i)keys.push(metasets[i].index);\n    return keys;\n}\nfunction $1af551c56cb88ebf$var$applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) return;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            if (options.all) continue;\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if ((0, $97ecbd121be4860b$export$39b482c5e57630a8)(otherValue) && (singleMode || value === 0 || (0, $97ecbd121be4860b$export$2408f22a0fab9ae5)(value) === (0, $97ecbd121be4860b$export$2408f22a0fab9ae5)(otherValue))) value += otherValue;\n    }\n    return value;\n}\nfunction $1af551c56cb88ebf$var$convertObjectDataToArray(data) {\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            x: key,\n            y: data[key]\n        };\n    }\n    return adata;\n}\nfunction $1af551c56cb88ebf$var$isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction $1af551c56cb88ebf$var$getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction $1af551c56cb88ebf$var$getUserBounds(scale) {\n    const { min: min, max: max, minDefined: minDefined, maxDefined: maxDefined } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction $1af551c56cb88ebf$var$getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction $1af551c56cb88ebf$var$getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) return meta.index;\n    }\n    return null;\n}\nfunction $1af551c56cb88ebf$var$updateStacks(controller, parsed) {\n    const { chart: chart, _cachedMeta: meta } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale: iScale, vScale: vScale, index: datasetIndex } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = $1af551c56cb88ebf$var$getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index, [vAxis]: value } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = $1af551c56cb88ebf$var$getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = $1af551c56cb88ebf$var$getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = $1af551c56cb88ebf$var$getLastIndexInStack(stack, vScale, false, meta.type);\n    }\n}\nfunction $1af551c56cb88ebf$var$getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction $1af551c56cb88ebf$var$createDatasetContext(parent, index) {\n    return (0, $97ecbd121be4860b$export$dda1d9f60106f0e9)(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index: index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction $1af551c56cb88ebf$var$createDataContext(parent, index, element) {\n    return (0, $97ecbd121be4860b$export$dda1d9f60106f0e9)(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element: element,\n        index: index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction $1af551c56cb88ebf$var$clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) return;\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) return;\n        delete stacks[axis][datasetIndex];\n    }\n}\nconst $1af551c56cb88ebf$var$isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst $1af551c56cb88ebf$var$cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst $1af551c56cb88ebf$var$createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: $1af551c56cb88ebf$var$getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass $1af551c56cb88ebf$export$75572ec5c55b4048 {\n    constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n        this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = $1af551c56cb88ebf$var$isStacked(meta.vScale, meta);\n        this.addElements();\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) $1af551c56cb88ebf$var$clearStacks(this._cachedMeta);\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = (0, $97ecbd121be4860b$export$90a7f3efeed30595)(dataset.xAxisID, $1af551c56cb88ebf$var$getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = (0, $97ecbd121be4860b$export$90a7f3efeed30595)(dataset.yAxisID, $1af551c56cb88ebf$var$getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = (0, $97ecbd121be4860b$export$90a7f3efeed30595)(dataset.rAxisID, $1af551c56cb88ebf$var$getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n    getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n    _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n    _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) (0, $97ecbd121be4860b$export$3b14a55fb2447963)(this._data, this);\n        if (meta._stacked) $1af551c56cb88ebf$var$clearStacks(meta);\n    }\n    _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if ((0, $97ecbd121be4860b$export$23f2a1d2818174ef)(data)) this._data = $1af551c56cb88ebf$var$convertObjectDataToArray(data);\n        else if (_data !== data) {\n            if (_data) {\n                (0, $97ecbd121be4860b$export$3b14a55fb2447963)(_data, this);\n                const meta = this._cachedMeta;\n                $1af551c56cb88ebf$var$clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) (0, $97ecbd121be4860b$export$882b5998b3b9117c)(data, this);\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) meta.dataset = new this.datasetElementType();\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = $1af551c56cb88ebf$var$isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            $1af551c56cb88ebf$var$clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) $1af551c56cb88ebf$var$updateStacks(this, meta._parsed);\n    }\n    configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n    parse(start, count) {\n        const { _cachedMeta: meta, _data: data } = this;\n        const { iScale: iScale, _stacked: _stacked } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if ((0, $97ecbd121be4860b$export$8b22cf2602fb60ce)(data[start])) parsed = this.parseArrayData(meta, data, start, count);\n            else if ((0, $97ecbd121be4860b$export$23f2a1d2818174ef)(data[start])) parsed = this.parseObjectData(meta, data, start, count);\n            else parsed = this.parsePrimitiveData(meta, data, start, count);\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) sorted = false;\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) $1af551c56cb88ebf$var$updateStacks(this, parsed);\n    }\n    parsePrimitiveData(meta, data, start, count) {\n        const { iScale: iScale, vScale: vScale } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n    parseArrayData(meta, data, start, count) {\n        const { xScale: xScale, yScale: yScale } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n    parseObjectData(meta, data, start, count) {\n        const { xScale: xScale, yScale: yScale } = meta;\n        const { xAxisKey: xAxisKey = 'x', yAxisKey: yAxisKey = 'y' } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse((0, $97ecbd121be4860b$export$2d1720544b23b823)(item, xAxisKey), index),\n                y: yScale.parse((0, $97ecbd121be4860b$export$2d1720544b23b823)(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n    getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n    getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n    applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: $1af551c56cb88ebf$var$getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]\n        };\n        return $1af551c56cb88ebf$var$applyStack(stack, value, meta.index, {\n            mode: mode\n        });\n    }\n    updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = $1af551c56cb88ebf$var$applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n    getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = $1af551c56cb88ebf$var$createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin, max: otherMax } = $1af551c56cb88ebf$var$getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !(0, $97ecbd121be4860b$export$39b482c5e57630a8)(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) continue;\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) break;\n        }\n        if (sorted) for(i = ilen - 1; i >= 0; --i){\n            if (_skip()) continue;\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            break;\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if ((0, $97ecbd121be4860b$export$39b482c5e57630a8)(value)) values.push(value);\n        }\n        return values;\n    }\n    getMaxOverflow() {\n        return false;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n    _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = $1af551c56cb88ebf$var$toClip((0, $97ecbd121be4860b$export$90a7f3efeed30595)(this.options.clip, $1af551c56cb88ebf$var$defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n    update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) meta.dataset.draw(ctx, area, start, count);\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) continue;\n            if (element.active && drawActiveElementsOnTop) active.push(element);\n            else element.draw(ctx, area);\n        }\n        for(i = 0; i < active.length; ++i)active[i].draw(ctx, area);\n    }\n    getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n    getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = $1af551c56cb88ebf$var$createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = $1af551c56cb88ebf$var$createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n    resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n    resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n    _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && (0, $97ecbd121be4860b$export$35e795649ee09318)(index);\n        if (cached) return $1af551c56cb88ebf$var$cloneIfNotShared(cached, sharing);\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys((0, $97ecbd121be4860b$export$4368d992c4eafac0).elements[elementType]);\n        const context = ()=>this.getContext(index, active);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze($1af551c56cb88ebf$var$cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n    _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) return cached;\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new $1af551c56cb88ebf$export$8ab227dac26677d(chart, options && options.animations);\n        if (options && options._cacheable) cache[cacheKey] = Object.freeze(animations);\n        return animations;\n    }\n    getSharedOptions(options) {\n        if (!options.$shared) return;\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n    includeOptions(mode, sharedOptions) {\n        return !sharedOptions || $1af551c56cb88ebf$var$isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n    _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions: sharedOptions,\n            includeOptions: includeOptions\n        };\n    }\n    updateElement(element, index, properties, mode) {\n        if ($1af551c56cb88ebf$var$isDirectUpdateMode(mode)) Object.assign(element, properties);\n        else this._resolveAnimations(index, mode).update(element, properties);\n    }\n    updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !$1af551c56cb88ebf$var$isDirectUpdateMode(mode)) this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n    _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n    _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) this._setStyle(element, undefined, 'active', false);\n    }\n    _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) this._setStyle(element, undefined, 'active', true);\n    }\n    _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList)this[method](arg1, arg2);\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) this.parse(0, count);\n        if (numData > numMeta) this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        else if (numData < numMeta) this._removeElements(numData, numMeta - numData);\n    }\n    _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--)arr[i] = arr[i - count];\n        };\n        move(data);\n        for(i = start; i < end; ++i)data[i] = new this.dataElementType();\n        if (this._parsing) move(meta._parsed);\n        this.parse(start, count);\n        if (resetNewElements) this.updateElements(data, start, count, 'reset');\n    }\n    updateElements(element, start, count, mode) {}\n    _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) $1af551c56cb88ebf$var$clearStacks(meta, removed);\n        }\n        meta.data.splice(start, count);\n    }\n    _sync(args) {\n        if (this._parsing) this._syncList.push(args);\n        else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) this._sync([\n            '_removeElements',\n            start,\n            count\n        ]);\n        const newCount = arguments.length - 2;\n        if (newCount) this._sync([\n            '_insertElements',\n            start,\n            newCount\n        ]);\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n$1af551c56cb88ebf$export$75572ec5c55b4048.defaults = {};\n$1af551c56cb88ebf$export$75572ec5c55b4048.prototype.datasetElementType = null;\n$1af551c56cb88ebf$export$75572ec5c55b4048.prototype.dataElementType = null;\nfunction $1af551c56cb88ebf$var$getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++)values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        scale._cache.$bar = (0, $97ecbd121be4860b$export$71511d61b312f219)(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\nfunction $1af551c56cb88ebf$var$computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = $1af551c56cb88ebf$var$getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) return;\n        if ((0, $97ecbd121be4860b$export$35e795649ee09318)(prev)) min = Math.min(min, Math.abs(curr - prev) || min);\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\nfunction $1af551c56cb88ebf$var$computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if ((0, $97ecbd121be4860b$export$342063e11d6c3cad)(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio: ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\nfunction $1af551c56cb88ebf$var$computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    if (next === null) next = curr + curr - prev;\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start: start\n    };\n}\nfunction $1af551c56cb88ebf$var$parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart: barStart,\n        barEnd: barEnd,\n        start: startValue,\n        end: endValue,\n        min: min,\n        max: max\n    };\n}\nfunction $1af551c56cb88ebf$var$parseValue(entry, item, vScale, i) {\n    if ((0, $97ecbd121be4860b$export$8b22cf2602fb60ce)(entry)) $1af551c56cb88ebf$var$parseFloatBar(entry, item, vScale, i);\n    else item[vScale.axis] = vScale.parse(entry, i);\n    return item;\n}\nfunction $1af551c56cb88ebf$var$parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push($1af551c56cb88ebf$var$parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction $1af551c56cb88ebf$var$isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction $1af551c56cb88ebf$var$barSign(size, vScale, actualBase) {\n    if (size !== 0) return (0, $97ecbd121be4860b$export$2408f22a0fab9ae5)(size);\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction $1af551c56cb88ebf$var$borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start: start,\n        end: end,\n        reverse: reverse,\n        top: top,\n        bottom: bottom\n    };\n}\nfunction $1af551c56cb88ebf$var$setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start: start, end: end, reverse: reverse, top: top, bottom: bottom } = $1af551c56cb88ebf$var$borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) edge = top;\n        else if ((stack._bottom || 0) === index) edge = bottom;\n        else {\n            res[$1af551c56cb88ebf$var$parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[$1af551c56cb88ebf$var$parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction $1af551c56cb88ebf$var$parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = $1af551c56cb88ebf$var$swap(edge, a, b);\n        edge = $1af551c56cb88ebf$var$startEnd(edge, b, a);\n    } else edge = $1af551c56cb88ebf$var$startEnd(edge, a, b);\n    return edge;\n}\nfunction $1af551c56cb88ebf$var$swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction $1af551c56cb88ebf$var$startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction $1af551c56cb88ebf$var$setInflateAmount(properties, { inflateAmount: inflateAmount }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass $1af551c56cb88ebf$export$e97d5dc64e999004 extends $1af551c56cb88ebf$export$75572ec5c55b4048 {\n    parsePrimitiveData(meta, data, start, count) {\n        return $1af551c56cb88ebf$var$parseArrayOrPrimitive(meta, data, start, count);\n    }\n    parseArrayData(meta, data, start, count) {\n        return $1af551c56cb88ebf$var$parseArrayOrPrimitive(meta, data, start, count);\n    }\n    parseObjectData(meta, data, start, count) {\n        const { iScale: iScale, vScale: vScale } = meta;\n        const { xAxisKey: xAxisKey = 'x', yAxisKey: yAxisKey = 'y' } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse((0, $97ecbd121be4860b$export$2d1720544b23b823)(obj, iAxisKey), i);\n            parsed.push($1af551c56cb88ebf$var$parseValue((0, $97ecbd121be4860b$export$2d1720544b23b823)(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n    updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n    getMaxOverflow() {\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale: iScale, vScale: vScale } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = $1af551c56cb88ebf$var$isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value: value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index: index, _cachedMeta: { vScale: vScale } } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions: sharedOptions, includeOptions: includeOptions } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || (0, $97ecbd121be4860b$export$342063e11d6c3cad)(parsed[vScale.axis]) ? {\n                base: base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal: horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || $1af551c56cb88ebf$var$isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            const options = properties.options || bars[i].options;\n            $1af551c56cb88ebf$var$setBorderSkipped(properties, options, stack, index);\n            $1af551c56cb88ebf$var$setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n    _getStacks(last, dataIndex) {\n        const { iScale: iScale } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const skipNull = (meta)=>{\n            const parsed = meta.controller.getParsed(dataIndex);\n            const val = parsed && parsed[meta.vScale.axis];\n            if ((0, $97ecbd121be4860b$export$342063e11d6c3cad)(val) || isNaN(val)) return true;\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) continue;\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) stacks.push(meta.stack);\n            if (meta.index === last) break;\n        }\n        if (!stacks.length) stacks.push(undefined);\n        return stacks;\n    }\n    _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n    _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n    _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i)pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        const barThickness = opts.barThickness;\n        const min = barThickness || $1af551c56cb88ebf$var$computeMinSampleSize(meta);\n        return {\n            min: min,\n            pixels: pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n    _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale: vScale, _stacked: _stacked }, options: { base: baseValue, minBarLength: minBarLength } } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = $1af551c56cb88ebf$var$isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && (0, $97ecbd121be4860b$export$2408f22a0fab9ae5)(value) !== (0, $97ecbd121be4860b$export$2408f22a0fab9ae5)(custom.barEnd)) start = 0;\n            start += value;\n        }\n        const startValue = !(0, $97ecbd121be4860b$export$342063e11d6c3cad)(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) head = vScale.getPixelForValue(start + length);\n        else head = base;\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = $1af551c56cb88ebf$var$barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) base -= size / 2;\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = (0, $97ecbd121be4860b$export$2408f22a0fab9ae5)(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size: size,\n            base: base,\n            head: head,\n            center: head + size / 2\n        };\n    }\n    _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = (0, $97ecbd121be4860b$export$90a7f3efeed30595)(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? $1af551c56cb88ebf$var$computeFlexCategoryTraits(index, ruler, options, stackCount) : $1af551c56cb88ebf$var$computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center: center,\n            size: size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i)if (this.getParsed(i)[vScale.axis] !== null) rects[i].draw(this._ctx);\n    }\n}\n$1af551c56cb88ebf$export$e97d5dc64e999004.id = 'bar';\n$1af551c56cb88ebf$export$e97d5dc64e999004.defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n    animations: {\n        numbers: {\n            type: 'number',\n            properties: [\n                'x',\n                'y',\n                'base',\n                'width',\n                'height'\n            ]\n        }\n    }\n};\n$1af551c56cb88ebf$export$e97d5dc64e999004.overrides = {\n    scales: {\n        _index_: {\n            type: 'category',\n            offset: true,\n            grid: {\n                offset: true\n            }\n        },\n        _value_: {\n            type: 'linear',\n            beginAtZero: true\n        }\n    }\n};\nclass $1af551c56cb88ebf$export$19b5c4773f17abe extends $1af551c56cb88ebf$export$75572ec5c55b4048 {\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n    parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++)parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        return parsed;\n    }\n    parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = (0, $97ecbd121be4860b$export$90a7f3efeed30595)(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n    parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = (0, $97ecbd121be4860b$export$90a7f3efeed30595)(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n    getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i)max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        return max > 0 && max;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { xScale: xScale, yScale: yScale } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: meta.label,\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale: iScale, vScale: vScale } = this._cachedMeta;\n        const { sharedOptions: sharedOptions, includeOptions: includeOptions } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) properties.options.radius = 0;\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n    resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) values = Object.assign({}, values, {\n            $shared: false\n        });\n        const radius = values.radius;\n        if (mode !== 'active') values.radius = 0;\n        values.radius += (0, $97ecbd121be4860b$export$90a7f3efeed30595)(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n$1af551c56cb88ebf$export$19b5c4773f17abe.id = 'bubble';\n$1af551c56cb88ebf$export$19b5c4773f17abe.defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    animations: {\n        numbers: {\n            type: 'number',\n            properties: [\n                'x',\n                'y',\n                'borderWidth',\n                'radius'\n            ]\n        }\n    }\n};\n$1af551c56cb88ebf$export$19b5c4773f17abe.overrides = {\n    scales: {\n        x: {\n            type: 'linear'\n        },\n        y: {\n            type: 'linear'\n        }\n    },\n    plugins: {\n        tooltip: {\n            callbacks: {\n                title () {\n                    return '';\n                }\n            }\n        }\n    }\n};\nfunction $1af551c56cb88ebf$var$getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < (0, $97ecbd121be4860b$export$971d5caa766a69d7)) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>(0, $97ecbd121be4860b$export$ffb5f4729a158638)(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>(0, $97ecbd121be4860b$export$ffb5f4729a158638)(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax((0, $97ecbd121be4860b$export$7f8ddf7c7c20b3cd), startY, endY);\n        const minX = calcMin((0, $97ecbd121be4860b$export$56c0d5a1e737357d), startX, endX);\n        const minY = calcMin((0, $97ecbd121be4860b$export$56c0d5a1e737357d) + (0, $97ecbd121be4860b$export$7f8ddf7c7c20b3cd), startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX: ratioX,\n        ratioY: ratioY,\n        offsetX: offsetX,\n        offsetY: offsetY\n    };\n}\nclass $1af551c56cb88ebf$export$e04603e7d8b77172 extends $1af551c56cb88ebf$export$75572ec5c55b4048 {\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n    parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) meta._parsed = data;\n        else {\n            let getter = (i)=>+data[i];\n            if ((0, $97ecbd121be4860b$export$23f2a1d2818174ef)(data[start])) {\n                const { key: key = 'value' } = this._parsing;\n                getter = (i)=>+(0, $97ecbd121be4860b$export$2d1720544b23b823)(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i)meta._parsed[i] = getter(i);\n        }\n    }\n    _getRotation() {\n        return (0, $97ecbd121be4860b$export$625550452a3fa3ec)(this.options.rotation - 90);\n    }\n    _getCircumference() {\n        return (0, $97ecbd121be4860b$export$625550452a3fa3ec)(this.options.circumference);\n    }\n    _getRotationExtents() {\n        let min = (0, $97ecbd121be4860b$export$971d5caa766a69d7);\n        let max = -(0, $97ecbd121be4860b$export$971d5caa766a69d7);\n        for(let i = 0; i < this.chart.data.datasets.length; ++i)if (this.chart.isDatasetVisible(i)) {\n            const controller = this.chart.getDatasetMeta(i).controller;\n            const rotation = controller._getRotation();\n            const circumference = controller._getCircumference();\n            min = Math.min(min, rotation);\n            max = Math.max(max, rotation + circumference);\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n    update(mode) {\n        const chart = this.chart;\n        const { chartArea: chartArea } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min((0, $97ecbd121be4860b$export$953cecd6e717a553)(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference: circumference, rotation: rotation } = this._getRotationExtents();\n        const { ratioX: ratioX, ratioY: ratioY, offsetX: offsetX, offsetY: offsetY } = $1af551c56cb88ebf$var$getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = (0, $97ecbd121be4860b$export$7ccc53e8f1e7dfc5)(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n    _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) return 0;\n        return this.calculateCircumference(meta._parsed[i] * circumference / (0, $97ecbd121be4860b$export$971d5caa766a69d7));\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions: sharedOptions, includeOptions: includeOptions } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i)startAngle += this._circumference(i, reset);\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle: startAngle,\n                endAngle: startAngle + circumference,\n                circumference: circumference,\n                outerRadius: outerRadius,\n                innerRadius: innerRadius\n            };\n            if (includeOptions) properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) total += Math.abs(value);\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) return (0, $97ecbd121be4860b$export$971d5caa766a69d7) * (Math.abs(value) / total);\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = (0, $97ecbd121be4860b$export$ae1af26003f05816)(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value: value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i)if (chart.isDatasetVisible(i)) {\n                meta = chart.getDatasetMeta(i);\n                arcs = meta.data;\n                controller = meta.controller;\n                break;\n            }\n        }\n        if (!arcs) return 0;\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n    _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i)if (this.chart.isDatasetVisible(i)) ringWeightOffset += this._getRingWeight(i);\n        return ringWeightOffset;\n    }\n    _getRingWeight(datasetIndex) {\n        return Math.max((0, $97ecbd121be4860b$export$90a7f3efeed30595)(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n    _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n$1af551c56cb88ebf$export$e04603e7d8b77172.id = 'doughnut';\n$1af551c56cb88ebf$export$e04603e7d8b77172.defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n        animateRotate: true,\n        animateScale: false\n    },\n    animations: {\n        numbers: {\n            type: 'number',\n            properties: [\n                'circumference',\n                'endAngle',\n                'innerRadius',\n                'outerRadius',\n                'startAngle',\n                'x',\n                'y',\n                'offset',\n                'borderWidth',\n                'spacing'\n            ]\n        }\n    },\n    cutout: '50%',\n    rotation: 0,\n    circumference: 360,\n    radius: '100%',\n    spacing: 0,\n    indexAxis: 'r'\n};\n$1af551c56cb88ebf$export$e04603e7d8b77172.descriptors = {\n    _scriptable: (name)=>name !== 'spacing',\n    _indexable: (name)=>name !== 'spacing'\n};\n$1af551c56cb88ebf$export$e04603e7d8b77172.overrides = {\n    aspectRatio: 1,\n    plugins: {\n        legend: {\n            labels: {\n                generateLabels (chart) {\n                    const data = chart.data;\n                    if (data.labels.length && data.datasets.length) {\n                        const { labels: { pointStyle: pointStyle } } = chart.legend.options;\n                        return data.labels.map((label, i)=>{\n                            const meta = chart.getDatasetMeta(0);\n                            const style = meta.controller.getStyle(i);\n                            return {\n                                text: label,\n                                fillStyle: style.backgroundColor,\n                                strokeStyle: style.borderColor,\n                                lineWidth: style.borderWidth,\n                                pointStyle: pointStyle,\n                                hidden: !chart.getDataVisibility(i),\n                                index: i\n                            };\n                        });\n                    }\n                    return [];\n                }\n            },\n            onClick (e, legendItem, legend) {\n                legend.chart.toggleDataVisibility(legendItem.index);\n                legend.chart.update();\n            }\n        },\n        tooltip: {\n            callbacks: {\n                title () {\n                    return '';\n                },\n                label (tooltipItem) {\n                    let dataLabel = tooltipItem.label;\n                    const value = ': ' + tooltipItem.formattedValue;\n                    if ((0, $97ecbd121be4860b$export$8b22cf2602fb60ce)(dataLabel)) {\n                        dataLabel = dataLabel.slice();\n                        dataLabel[0] += value;\n                    } else dataLabel += value;\n                    return dataLabel;\n                }\n            }\n        }\n    }\n};\nclass $1af551c56cb88ebf$export$3c9b5d28c11cbfd0 extends $1af551c56cb88ebf$export$75572ec5c55b4048 {\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line, data: points = [], _dataset: _dataset } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start: start, count: count } = (0, $97ecbd121be4860b$export$9e5f44173e64f162)(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if ((0, $97ecbd121be4860b$export$efccba1c4a2ef57b)(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) options.borderWidth = 0;\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options: options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale: iScale, vScale: vScale, _stacked: _stacked, _dataset: _dataset } = this._cachedMeta;\n        const { sharedOptions: sharedOptions, includeOptions: includeOptions } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps: spanGaps, segment: segment } = this.options;\n        const maxGapLength = (0, $97ecbd121be4860b$export$d141bba7fdc215a3)(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = (0, $97ecbd121be4860b$export$342063e11d6c3cad)(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            if (!directUpdate) this.updateElement(point, i, properties, mode);\n            prevParsed = parsed;\n        }\n    }\n    getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) return border;\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n$1af551c56cb88ebf$export$3c9b5d28c11cbfd0.id = 'line';\n$1af551c56cb88ebf$export$3c9b5d28c11cbfd0.defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    showLine: true,\n    spanGaps: false\n};\n$1af551c56cb88ebf$export$3c9b5d28c11cbfd0.overrides = {\n    scales: {\n        _index_: {\n            type: 'category'\n        },\n        _value_: {\n            type: 'linear'\n        }\n    }\n};\nclass $1af551c56cb88ebf$export$2a270b3a0d973c85 extends $1af551c56cb88ebf$export$75572ec5c55b4048 {\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = (0, $97ecbd121be4860b$export$ae1af26003f05816)(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value: value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return (0, $97ecbd121be4860b$export$4a5767248b18ef41).bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n    getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) range.min = parsed;\n                if (parsed > range.max) range.max = parsed;\n            }\n        });\n        return range;\n    }\n    _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * (0, $97ecbd121be4860b$export$56c0d5a1e737357d);\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i)angle += this._computeAngle(i, mode, defaultAngle);\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) outerRadius = 0;\n                if (animationOpts.animateRotate) startAngle = endAngle = datasetStartAngle;\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius: outerRadius,\n                startAngle: startAngle,\n                endAngle: endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) count++;\n        });\n        return count;\n    }\n    _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? (0, $97ecbd121be4860b$export$625550452a3fa3ec)(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n$1af551c56cb88ebf$export$2a270b3a0d973c85.id = 'polarArea';\n$1af551c56cb88ebf$export$2a270b3a0d973c85.defaults = {\n    dataElementType: 'arc',\n    animation: {\n        animateRotate: true,\n        animateScale: true\n    },\n    animations: {\n        numbers: {\n            type: 'number',\n            properties: [\n                'x',\n                'y',\n                'startAngle',\n                'endAngle',\n                'innerRadius',\n                'outerRadius'\n            ]\n        }\n    },\n    indexAxis: 'r',\n    startAngle: 0\n};\n$1af551c56cb88ebf$export$2a270b3a0d973c85.overrides = {\n    aspectRatio: 1,\n    plugins: {\n        legend: {\n            labels: {\n                generateLabels (chart) {\n                    const data = chart.data;\n                    if (data.labels.length && data.datasets.length) {\n                        const { labels: { pointStyle: pointStyle } } = chart.legend.options;\n                        return data.labels.map((label, i)=>{\n                            const meta = chart.getDatasetMeta(0);\n                            const style = meta.controller.getStyle(i);\n                            return {\n                                text: label,\n                                fillStyle: style.backgroundColor,\n                                strokeStyle: style.borderColor,\n                                lineWidth: style.borderWidth,\n                                pointStyle: pointStyle,\n                                hidden: !chart.getDataVisibility(i),\n                                index: i\n                            };\n                        });\n                    }\n                    return [];\n                }\n            },\n            onClick (e, legendItem, legend) {\n                legend.chart.toggleDataVisibility(legendItem.index);\n                legend.chart.update();\n            }\n        },\n        tooltip: {\n            callbacks: {\n                title () {\n                    return '';\n                },\n                label (context) {\n                    return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n                }\n            }\n        }\n    },\n    scales: {\n        r: {\n            type: 'radialLinear',\n            angleLines: {\n                display: false\n            },\n            beginAtZero: true,\n            grid: {\n                circular: true\n            },\n            pointLabels: {\n                display: false\n            },\n            startAngle: 0\n        }\n    }\n};\nclass $1af551c56cb88ebf$export$b21a3f1286706191 extends $1af551c56cb88ebf$export$e04603e7d8b77172 {\n}\n$1af551c56cb88ebf$export$b21a3f1286706191.id = 'pie';\n$1af551c56cb88ebf$export$b21a3f1286706191.defaults = {\n    cutout: 0,\n    rotation: 0,\n    circumference: 360,\n    radius: '100%'\n};\nclass $1af551c56cb88ebf$export$48dbc6ac651bf8be extends $1af551c56cb88ebf$export$75572ec5c55b4048 {\n    getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return (0, $97ecbd121be4860b$export$4a5767248b18ef41).bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) options.borderWidth = 0;\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options: options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x: x,\n                y: y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options: options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n$1af551c56cb88ebf$export$48dbc6ac651bf8be.id = 'radar';\n$1af551c56cb88ebf$export$48dbc6ac651bf8be.defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n        line: {\n            fill: 'start'\n        }\n    }\n};\n$1af551c56cb88ebf$export$48dbc6ac651bf8be.overrides = {\n    aspectRatio: 1,\n    scales: {\n        r: {\n            type: 'radialLinear'\n        }\n    }\n};\nclass $1af551c56cb88ebf$export$db77ccec0bb4ccac {\n    constructor(){\n        this.x = undefined;\n        this.y = undefined;\n        this.active = false;\n        this.options = undefined;\n        this.$animations = undefined;\n    }\n    tooltipPosition(useFinalPosition) {\n        const { x: x, y: y } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x: x,\n            y: y\n        };\n    }\n    hasValue() {\n        return (0, $97ecbd121be4860b$export$d141bba7fdc215a3)(this.x) && (0, $97ecbd121be4860b$export$d141bba7fdc215a3)(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) return this;\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n$1af551c56cb88ebf$export$db77ccec0bb4ccac.defaults = {};\n$1af551c56cb88ebf$export$db77ccec0bb4ccac.defaultRoutes = undefined;\nconst $1af551c56cb88ebf$var$formatters = {\n    values (value) {\n        return (0, $97ecbd121be4860b$export$8b22cf2602fb60ce)(value) ? value : '' + value;\n    },\n    numeric (tickValue, index, ticks) {\n        if (tickValue === 0) return '0';\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) notation = 'scientific';\n            delta = $1af551c56cb88ebf$var$calculateDelta(tickValue, ticks);\n        }\n        const logDelta = (0, $97ecbd121be4860b$export$df995fae86a55f06)(Math.abs(delta));\n        const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation: notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return (0, $97ecbd121be4860b$export$ae1af26003f05816)(tickValue, locale, options);\n    },\n    logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) return '0';\n        const remain = tickValue / Math.pow(10, Math.floor((0, $97ecbd121be4860b$export$df995fae86a55f06)(tickValue)));\n        if (remain === 1 || remain === 2 || remain === 5) return $1af551c56cb88ebf$var$formatters.numeric.call(this, tickValue, index, ticks);\n        return '';\n    }\n};\nfunction $1af551c56cb88ebf$var$calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) delta = tickValue - Math.floor(tickValue);\n    return delta;\n}\nvar $1af551c56cb88ebf$export$27c7467594ef87bd = {\n    formatters: $1af551c56cb88ebf$var$formatters\n};\n(0, $97ecbd121be4860b$export$4368d992c4eafac0).set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n    bounds: 'ticks',\n    grace: 0,\n    grid: {\n        display: true,\n        lineWidth: 1,\n        drawBorder: true,\n        drawOnChartArea: true,\n        drawTicks: true,\n        tickLength: 8,\n        tickWidth: (_ctx, options)=>options.lineWidth,\n        tickColor: (_ctx, options)=>options.color,\n        offset: false,\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderWidth: 1\n    },\n    title: {\n        display: false,\n        text: '',\n        padding: {\n            top: 4,\n            bottom: 4\n        }\n    },\n    ticks: {\n        minRotation: 0,\n        maxRotation: 50,\n        mirror: false,\n        textStrokeWidth: 0,\n        textStrokeColor: '',\n        padding: 3,\n        display: true,\n        autoSkip: true,\n        autoSkipPadding: 3,\n        labelOffset: 0,\n        callback: $1af551c56cb88ebf$export$27c7467594ef87bd.formatters.values,\n        minor: {},\n        major: {},\n        align: 'center',\n        crossAlign: 'near',\n        showLabelBackdrop: false,\n        backdropColor: 'rgba(255, 255, 255, 0.75)',\n        backdropPadding: 2\n    }\n});\n(0, $97ecbd121be4860b$export$4368d992c4eafac0).route('scale.ticks', 'color', '', 'color');\n(0, $97ecbd121be4860b$export$4368d992c4eafac0).route('scale.grid', 'color', '', 'borderColor');\n(0, $97ecbd121be4860b$export$4368d992c4eafac0).route('scale.grid', 'borderColor', '', 'borderColor');\n(0, $97ecbd121be4860b$export$4368d992c4eafac0).route('scale.title', 'color', '', 'color');\n(0, $97ecbd121be4860b$export$4368d992c4eafac0).describe('scale', {\n    _fallback: false,\n    _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash'\n});\n(0, $97ecbd121be4860b$export$4368d992c4eafac0).describe('scales', {\n    _fallback: 'scale'\n});\n(0, $97ecbd121be4860b$export$4368d992c4eafac0).describe('scale.ticks', {\n    _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name)=>name !== 'backdropPadding'\n});\nfunction $1af551c56cb88ebf$var$autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const ticksLimit = tickOpts.maxTicksLimit || $1af551c56cb88ebf$var$determineMaxTicks(scale);\n    const majorIndices = tickOpts.major.enabled ? $1af551c56cb88ebf$var$getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        $1af551c56cb88ebf$var$skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = $1af551c56cb88ebf$var$calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        $1af551c56cb88ebf$var$skip(ticks, newTicks, spacing, (0, $97ecbd121be4860b$export$342063e11d6c3cad)(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++)$1af551c56cb88ebf$var$skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        $1af551c56cb88ebf$var$skip(ticks, newTicks, spacing, last, (0, $97ecbd121be4860b$export$342063e11d6c3cad)(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    $1af551c56cb88ebf$var$skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction $1af551c56cb88ebf$var$determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction $1af551c56cb88ebf$var$calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = $1af551c56cb88ebf$var$getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) return Math.max(spacing, 1);\n    const factors = (0, $97ecbd121be4860b$export$ebd11618f299a286)(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) return factor;\n    }\n    return Math.max(spacing, 1);\n}\nfunction $1af551c56cb88ebf$var$getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++)if (ticks[i].major) result.push(i);\n    return result;\n}\nfunction $1af551c56cb88ebf$var$skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++)if (i === next) {\n        newTicks.push(ticks[i]);\n        count++;\n        next = majorIndices[count * spacing];\n    }\n}\nfunction $1af551c56cb88ebf$var$skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = (0, $97ecbd121be4860b$export$90a7f3efeed30595)(majorStart, 0);\n    const end = Math.min((0, $97ecbd121be4860b$export$90a7f3efeed30595)(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++)if (i === next) {\n        newTicks.push(ticks[i]);\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n}\nfunction $1af551c56cb88ebf$var$getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) return false;\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) return false;\n    }\n    return diff;\n}\nconst $1af551c56cb88ebf$var$reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst $1af551c56cb88ebf$var$offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction $1af551c56cb88ebf$var$sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment)result.push(arr[Math.floor(i)]);\n    return result;\n}\nfunction $1af551c56cb88ebf$var$getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) offset = Math.max(lineValue - start, end - lineValue);\n        else if (index === 0) offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        else offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) return;\n    }\n    return lineValue;\n}\nfunction $1af551c56cb88ebf$var$garbageCollect(caches, length) {\n    (0, $97ecbd121be4860b$export$3722cfe417b6ed86)(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i)delete cache.data[gc[i]];\n            gc.splice(0, gcLen);\n        }\n    });\n}\nfunction $1af551c56cb88ebf$var$getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\nfunction $1af551c56cb88ebf$var$getTitleHeight(options, fallback) {\n    if (!options.display) return 0;\n    const font = (0, $97ecbd121be4860b$export$c4ce752e73470fba)(options.font, fallback);\n    const padding = (0, $97ecbd121be4860b$export$3466f893ebf79586)(options.padding);\n    const lines = (0, $97ecbd121be4860b$export$8b22cf2602fb60ce)(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction $1af551c56cb88ebf$var$createScaleContext(parent, scale) {\n    return (0, $97ecbd121be4860b$export$dda1d9f60106f0e9)(parent, {\n        scale: scale,\n        type: 'scale'\n    });\n}\nfunction $1af551c56cb88ebf$var$createTickContext(parent, index, tick) {\n    return (0, $97ecbd121be4860b$export$dda1d9f60106f0e9)(parent, {\n        tick: tick,\n        index: index,\n        type: 'tick'\n    });\n}\nfunction $1af551c56cb88ebf$var$titleAlign(align, position, reverse) {\n    let ret = (0, $97ecbd121be4860b$export$db202ddc8be9136)(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') ret = $1af551c56cb88ebf$var$reverseAlign(ret);\n    return ret;\n}\nfunction $1af551c56cb88ebf$var$titleArgs(scale, offset, position, align) {\n    const { top: top, left: left, bottom: bottom, right: right, chart: chart } = scale;\n    const { chartArea: chartArea, scales: scales } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = (0, $97ecbd121be4860b$export$25ce5a424b770e84)(align, left, right);\n        if ((0, $97ecbd121be4860b$export$23f2a1d2818174ef)(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        else titleY = $1af551c56cb88ebf$var$offsetFromEdge(scale, position, offset);\n        maxWidth = right - left;\n    } else {\n        if ((0, $97ecbd121be4860b$export$23f2a1d2818174ef)(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        else titleX = $1af551c56cb88ebf$var$offsetFromEdge(scale, position, offset);\n        titleY = (0, $97ecbd121be4860b$export$25ce5a424b770e84)(align, bottom, top);\n        rotation = position === 'left' ? -(0, $97ecbd121be4860b$export$7f8ddf7c7c20b3cd) : (0, $97ecbd121be4860b$export$7f8ddf7c7c20b3cd);\n    }\n    return {\n        titleX: titleX,\n        titleY: titleY,\n        maxWidth: maxWidth,\n        rotation: rotation\n    };\n}\nclass $1af551c56cb88ebf$export$d60cfc58d3c358b6 extends $1af551c56cb88ebf$export$db77ccec0bb4ccac {\n    constructor(cfg){\n        super();\n        this.id = cfg.id;\n        this.type = cfg.type;\n        this.options = undefined;\n        this.ctx = cfg.ctx;\n        this.chart = cfg.chart;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n        this.maxWidth = undefined;\n        this.maxHeight = undefined;\n        this.paddingTop = undefined;\n        this.paddingBottom = undefined;\n        this.paddingLeft = undefined;\n        this.paddingRight = undefined;\n        this.axis = undefined;\n        this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n        this.ticks = [];\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n        this._startPixel = undefined;\n        this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n    init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n    parse(raw, index) {\n        return raw;\n    }\n    getUserBounds() {\n        let { _userMin: _userMin, _userMax: _userMax, _suggestedMin: _suggestedMin, _suggestedMax: _suggestedMax } = this;\n        _userMin = (0, $97ecbd121be4860b$export$ef35774e6d314e91)(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = (0, $97ecbd121be4860b$export$ef35774e6d314e91)(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = (0, $97ecbd121be4860b$export$ef35774e6d314e91)(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = (0, $97ecbd121be4860b$export$ef35774e6d314e91)(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: (0, $97ecbd121be4860b$export$ef35774e6d314e91)(_userMin, _suggestedMin),\n            max: (0, $97ecbd121be4860b$export$ef35774e6d314e91)(_userMax, _suggestedMax),\n            minDefined: (0, $97ecbd121be4860b$export$39b482c5e57630a8)(_userMin),\n            maxDefined: (0, $97ecbd121be4860b$export$39b482c5e57630a8)(_userMax)\n        };\n    }\n    getMinMax(canStack) {\n        let { min: min, max: max, minDefined: minDefined, maxDefined: maxDefined } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) return {\n            min: min,\n            max: max\n        };\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) min = Math.min(min, range.min);\n            if (!maxDefined) max = Math.max(max, range.max);\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: (0, $97ecbd121be4860b$export$ef35774e6d314e91)(min, (0, $97ecbd121be4860b$export$ef35774e6d314e91)(max, min)),\n            max: (0, $97ecbd121be4860b$export$ef35774e6d314e91)(max, (0, $97ecbd121be4860b$export$ef35774e6d314e91)(min, max))\n        };\n    }\n    getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n    getTicks() {\n        return this.ticks;\n    }\n    getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        (0, $97ecbd121be4860b$export$e7094788287c5e9b)(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n    update(maxWidth, maxHeight, margins) {\n        const { beginAtZero: beginAtZero, grace: grace, ticks: tickOpts } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = (0, $97ecbd121be4860b$export$96f57966bedc81b4)(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? $1af551c56cb88ebf$var$sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = $1af551c56cb88ebf$var$autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) this._convertTicksToLabels(this.ticks);\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n    configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        (0, $97ecbd121be4860b$export$e7094788287c5e9b)(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        (0, $97ecbd121be4860b$export$e7094788287c5e9b)(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        (0, $97ecbd121be4860b$export$e7094788287c5e9b)(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        (0, $97ecbd121be4860b$export$e7094788287c5e9b)(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n    buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        (0, $97ecbd121be4860b$export$e7094788287c5e9b)(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n    generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = (0, $97ecbd121be4860b$export$e7094788287c5e9b)(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        (0, $97ecbd121be4860b$export$e7094788287c5e9b)(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        (0, $97ecbd121be4860b$export$e7094788287c5e9b)(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = this.ticks.length;\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = (0, $97ecbd121be4860b$export$a9c23c6ac3fc3eca)(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - $1af551c56cb88ebf$var$getTickMarkLength(options.grid) - tickOpts.padding - $1af551c56cb88ebf$var$getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = (0, $97ecbd121be4860b$export$d66501df72047452)(Math.min(Math.asin((0, $97ecbd121be4860b$export$a9c23c6ac3fc3eca)((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin((0, $97ecbd121be4860b$export$a9c23c6ac3fc3eca)(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin((0, $97ecbd121be4860b$export$a9c23c6ac3fc3eca)(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        (0, $97ecbd121be4860b$export$e7094788287c5e9b)(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        (0, $97ecbd121be4860b$export$e7094788287c5e9b)(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart: chart, options: { ticks: tickOpts, title: titleOpts, grid: gridOpts } } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = $1af551c56cb88ebf$var$getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = $1af551c56cb88ebf$var$getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = $1af551c56cb88ebf$var$getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first: first, last: last, widest: widest, highest: highest } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = (0, $97ecbd121be4860b$export$625550452a3fa3ec)(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align: align, padding: padding }, position: position } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') paddingRight = last.width;\n            else if (align === 'end') paddingLeft = first.width;\n            else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n    _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        (0, $97ecbd121be4860b$export$e7094788287c5e9b)(this.options.afterFit, [\n            this\n        ]);\n    }\n    isHorizontal() {\n        const { axis: axis, position: position } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n    isFullSize() {\n        return this.options.fullSize;\n    }\n    _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++)if ((0, $97ecbd121be4860b$export$342063e11d6c3cad)(ticks[i].label)) {\n            ticks.splice(i, 1);\n            ilen--;\n            i--;\n        }\n        this.afterTickToLabelConversion();\n    }\n    _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) ticks = $1af551c56cb88ebf$var$sample(ticks, sampleSize);\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n        }\n        return labelSizes;\n    }\n    _computeLabelSizes(ticks, length) {\n        const { ctx: ctx, _longestTextCache: caches } = this;\n        const widths = [];\n        const heights = [];\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; ++i){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!(0, $97ecbd121be4860b$export$342063e11d6c3cad)(label) && !(0, $97ecbd121be4860b$export$8b22cf2602fb60ce)(label)) {\n                width = (0, $97ecbd121be4860b$export$2329c99376c9d0a4)(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if ((0, $97ecbd121be4860b$export$8b22cf2602fb60ce)(label)) for(j = 0, jlen = label.length; j < jlen; ++j){\n                nestedLabel = label[j];\n                if (!(0, $97ecbd121be4860b$export$342063e11d6c3cad)(nestedLabel) && !(0, $97ecbd121be4860b$export$8b22cf2602fb60ce)(nestedLabel)) {\n                    width = (0, $97ecbd121be4860b$export$2329c99376c9d0a4)(ctx, cache.data, cache.gc, width, nestedLabel);\n                    height += lineHeight;\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        $1af551c56cb88ebf$var$garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths: widths,\n            heights: heights\n        };\n    }\n    getLabelForValue(value) {\n        return value;\n    }\n    getPixelForValue(value, index) {\n        return NaN;\n    }\n    getValueForPixel(pixel) {}\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) return null;\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getPixelForDecimal(decimal) {\n        if (this._reversePixels) decimal = 1 - decimal;\n        const pixel = this._startPixel + decimal * this._length;\n        return (0, $97ecbd121be4860b$export$9bb611d729802a56)(this._alignToPixels ? (0, $97ecbd121be4860b$export$b4171a6734a65d42)(this.chart, pixel, 0) : pixel);\n    }\n    getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n    getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n    getBaseValue() {\n        const { min: min, max: max } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n    getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = $1af551c56cb88ebf$var$createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = $1af551c56cb88ebf$var$createScaleContext(this.chart.getContext(), this));\n    }\n    _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = (0, $97ecbd121be4860b$export$625550452a3fa3ec)(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n    _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') return !!display;\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n    _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid: grid, position: position } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = $1af551c56cb88ebf$var$getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = grid.setContext(this.getContext());\n        const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return (0, $97ecbd121be4860b$export$b4171a6734a65d42)(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            else if ((0, $97ecbd121be4860b$export$23f2a1d2818174ef)(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            else if ((0, $97ecbd121be4860b$export$23f2a1d2818174ef)(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = (0, $97ecbd121be4860b$export$90a7f3efeed30595)(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const optsAtIndex = grid.setContext(this.getContext(i));\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndex.borderDash || [];\n            const borderDashOffset = optsAtIndex.borderDashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = $1af551c56cb88ebf$var$getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) continue;\n            alignedLineValue = (0, $97ecbd121be4860b$export$b4171a6734a65d42)(chart, lineValue, lineWidth);\n            if (isHorizontal) tx1 = tx2 = x1 = x2 = alignedLineValue;\n            else ty1 = ty2 = y1 = y2 = alignedLineValue;\n            items.push({\n                tx1: tx1,\n                ty1: ty1,\n                tx2: tx2,\n                ty2: ty2,\n                x1: x1,\n                y1: y1,\n                x2: x2,\n                y2: y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash: borderDash,\n                borderDashOffset: borderDashOffset,\n                tickWidth: tickWidth,\n                tickColor: tickColor,\n                tickBorderDash: tickBorderDash,\n                tickBorderDashOffset: tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n    _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position: position, ticks: optionTicks } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align: align, crossAlign: crossAlign, padding: padding, mirror: mirror } = optionTicks;\n        const tl = $1af551c56cb88ebf$var$getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -(0, $97ecbd121be4860b$export$625550452a3fa3ec)(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            else if ((0, $97ecbd121be4860b$export$23f2a1d2818174ef)(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            else if ((0, $97ecbd121be4860b$export$23f2a1d2818174ef)(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') textBaseline = 'top';\n            else if (align === 'end') textBaseline = 'bottom';\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = (0, $97ecbd121be4860b$export$8b22cf2602fb60ce)(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    else if (i === 0) tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    else tickTextAlign = 'center';\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    else if (crossAlign === 'center') textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    else textOffset = -labelSizes.highest.height + lineHeight / 2;\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) textOffset = lineHeight / 2;\n                    else if (crossAlign === 'center') textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    else textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                }\n                if (mirror) textOffset *= -1;\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = (0, $97ecbd121be4860b$export$3466f893ebf79586)(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = y + textOffset - labelPadding.top;\n                let left = x - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                }\n                backdrop = {\n                    left: left,\n                    top: top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                rotation: rotation,\n                label: label,\n                font: font,\n                color: color,\n                strokeColor: strokeColor,\n                strokeWidth: strokeWidth,\n                textOffset: textOffset,\n                textAlign: tickTextAlign,\n                textBaseline: textBaseline,\n                translation: [\n                    x,\n                    y\n                ],\n                backdrop: backdrop\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position: position, ticks: ticks } = this.options;\n        const rotation = -(0, $97ecbd121be4860b$export$625550452a3fa3ec)(this.labelRotation);\n        if (rotation) return position === 'top' ? 'left' : 'right';\n        let align = 'center';\n        if (ticks.align === 'start') align = 'left';\n        else if (ticks.align === 'end') align = 'right';\n        else if (ticks.align === 'inner') align = 'inner';\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position: position, ticks: { crossAlign: crossAlign, mirror: mirror, padding: padding } } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') textAlign = 'left';\n                else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') textAlign = 'right';\n                else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') textAlign = 'right';\n                else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') textAlign = 'left';\n                else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else textAlign = 'right';\n        return {\n            textAlign: textAlign,\n            x: x\n        };\n    }\n    _computeLabelArea() {\n        if (this.options.ticks.mirror) return;\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') return {\n            top: 0,\n            left: this.left,\n            bottom: chart.height,\n            right: this.right\n        };\n        if (position === 'top' || position === 'bottom') return {\n            top: this.top,\n            left: 0,\n            bottom: this.bottom,\n            right: chart.width\n        };\n    }\n    drawBackground() {\n        const { ctx: ctx, options: { backgroundColor: backgroundColor }, left: left, top: top, width: width, height: height } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) return 0;\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n    drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) return;\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) for(i = 0, ilen = items.length; i < ilen; ++i){\n            const item = items[i];\n            if (grid.drawOnChartArea) drawLine({\n                x: item.x1,\n                y: item.y1\n            }, {\n                x: item.x2,\n                y: item.y2\n            }, item);\n            if (grid.drawTicks) drawLine({\n                x: item.tx1,\n                y: item.ty1\n            }, {\n                x: item.tx2,\n                y: item.ty2\n            }, {\n                color: item.tickColor,\n                width: item.tickWidth,\n                borderDash: item.tickBorderDash,\n                borderDashOffset: item.tickBorderDashOffset\n            });\n        }\n    }\n    drawBorder() {\n        const { chart: chart, ctx: ctx, options: { grid: grid } } = this;\n        const borderOpts = grid.setContext(this.getContext());\n        const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n        if (!axisWidth) return;\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = (0, $97ecbd121be4860b$export$b4171a6734a65d42)(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = (0, $97ecbd121be4860b$export$b4171a6734a65d42)(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = (0, $97ecbd121be4860b$export$b4171a6734a65d42)(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = (0, $97ecbd121be4860b$export$b4171a6734a65d42)(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.borderWidth;\n        ctx.strokeStyle = borderOpts.borderColor;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n    drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) return;\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) (0, $97ecbd121be4860b$export$61196ced6d74a310)(ctx, area);\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        let i, ilen;\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            const item = items[i];\n            const tickFont = item.font;\n            const label = item.label;\n            if (item.backdrop) {\n                ctx.fillStyle = item.backdrop.color;\n                ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n            }\n            let y = item.textOffset;\n            (0, $97ecbd121be4860b$export$3a1a48c8f6ef640e)(ctx, label, 0, y, tickFont, item);\n        }\n        if (area) (0, $97ecbd121be4860b$export$a07804094c3ecf2d)(ctx);\n    }\n    drawTitle() {\n        const { ctx: ctx, options: { position: position, title: title, reverse: reverse } } = this;\n        if (!title.display) return;\n        const font = (0, $97ecbd121be4860b$export$c4ce752e73470fba)(title.font);\n        const padding = (0, $97ecbd121be4860b$export$3466f893ebf79586)(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || (0, $97ecbd121be4860b$export$23f2a1d2818174ef)(position)) {\n            offset += padding.bottom;\n            if ((0, $97ecbd121be4860b$export$8b22cf2602fb60ce)(title.text)) offset += font.lineHeight * (title.text.length - 1);\n        } else offset += padding.top;\n        const { titleX: titleX, titleY: titleY, maxWidth: maxWidth, rotation: rotation } = $1af551c56cb88ebf$var$titleArgs(this, offset, position, align);\n        (0, $97ecbd121be4860b$export$3a1a48c8f6ef640e)(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth: maxWidth,\n            rotation: rotation,\n            textAlign: $1af551c56cb88ebf$var$titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) return;\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n    _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = (0, $97ecbd121be4860b$export$90a7f3efeed30595)(opts.grid && opts.grid.z, -1);\n        if (!this._isVisible() || this.draw !== $1af551c56cb88ebf$export$d60cfc58d3c358b6.prototype.draw) return [\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.draw(chartArea);\n                }\n            }\n        ];\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: gz + 1,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n    getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) result.push(meta);\n        }\n        return result;\n    }\n    _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return (0, $97ecbd121be4860b$export$c4ce752e73470fba)(opts.font);\n    }\n    _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\nclass $1af551c56cb88ebf$var$TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n    register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if ($1af551c56cb88ebf$var$isIChartComponent(proto)) parentScope = this.register(proto);\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) throw new Error('class does not have id: ' + item);\n        if (id in items) return scope;\n        items[id] = item;\n        $1af551c56cb88ebf$var$registerDefaults(item, scope, parentScope);\n        if (this.override) (0, $97ecbd121be4860b$export$4368d992c4eafac0).override(item.id, item.overrides);\n        return scope;\n    }\n    get(id) {\n        return this.items[id];\n    }\n    unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) delete items[id];\n        if (scope && id in (0, $97ecbd121be4860b$export$4368d992c4eafac0)[scope]) {\n            delete (0, $97ecbd121be4860b$export$4368d992c4eafac0)[scope][id];\n            if (this.override) delete (0, $97ecbd121be4860b$export$3a6d5c9ae78a2c08)[id];\n        }\n    }\n}\nfunction $1af551c56cb88ebf$var$registerDefaults(item, scope, parentScope) {\n    const itemDefaults = (0, $97ecbd121be4860b$export$e7c866399fa523f5)(Object.create(null), [\n        parentScope ? (0, $97ecbd121be4860b$export$4368d992c4eafac0).get(parentScope) : {},\n        (0, $97ecbd121be4860b$export$4368d992c4eafac0).get(scope),\n        item.defaults\n    ]);\n    (0, $97ecbd121be4860b$export$4368d992c4eafac0).set(scope, itemDefaults);\n    if (item.defaultRoutes) $1af551c56cb88ebf$var$routeDefaults(scope, item.defaultRoutes);\n    if (item.descriptors) (0, $97ecbd121be4860b$export$4368d992c4eafac0).describe(scope, item.descriptors);\n}\nfunction $1af551c56cb88ebf$var$routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        (0, $97ecbd121be4860b$export$4368d992c4eafac0).route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction $1af551c56cb88ebf$var$isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\nclass $1af551c56cb88ebf$var$Registry {\n    constructor(){\n        this.controllers = new $1af551c56cb88ebf$var$TypedRegistry($1af551c56cb88ebf$export$75572ec5c55b4048, 'datasets', true);\n        this.elements = new $1af551c56cb88ebf$var$TypedRegistry($1af551c56cb88ebf$export$db77ccec0bb4ccac, 'elements');\n        this.plugins = new $1af551c56cb88ebf$var$TypedRegistry(Object, 'plugins');\n        this.scales = new $1af551c56cb88ebf$var$TypedRegistry($1af551c56cb88ebf$export$d60cfc58d3c358b6, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n    add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n    addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n    addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n    addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n    addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n    getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n    getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n    getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n    getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n    removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n    removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n    removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n    removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n    _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) this._exec(method, reg, arg);\n            else (0, $97ecbd121be4860b$export$3722cfe417b6ed86)(arg, (item)=>{\n                const itemReg = typedRegistry || this._getRegistryForType(item);\n                this._exec(method, itemReg, item);\n            });\n        });\n    }\n    _exec(method, registry, component) {\n        const camelMethod = (0, $97ecbd121be4860b$export$71cec2538cb2c617)(method);\n        (0, $97ecbd121be4860b$export$e7094788287c5e9b)(component['before' + camelMethod], [], component);\n        registry[method](component);\n        (0, $97ecbd121be4860b$export$e7094788287c5e9b)(component['after' + camelMethod], [], component);\n    }\n    _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) return reg;\n        }\n        return this.plugins;\n    }\n    _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        return item;\n    }\n}\nvar $1af551c56cb88ebf$export$4bb7493d241fd8a5 = new $1af551c56cb88ebf$var$Registry();\nclass $1af551c56cb88ebf$export$b2f2bae6713db87 extends $1af551c56cb88ebf$export$75572ec5c55b4048 {\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = [] } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start: start, count: count } = (0, $97ecbd121be4860b$export$9e5f44173e64f162)(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if ((0, $97ecbd121be4860b$export$efccba1c4a2ef57b)(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            const { dataset: line, _dataset: _dataset } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options: options\n            }, mode);\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine: showLine } = this.options;\n        if (!this.datasetElementType && showLine) this.datasetElementType = $1af551c56cb88ebf$export$4bb7493d241fd8a5.getElement('line');\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale: iScale, vScale: vScale, _stacked: _stacked, _dataset: _dataset } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps: spanGaps, segment: segment } = this.options;\n        const maxGapLength = (0, $97ecbd121be4860b$export$d141bba7fdc215a3)(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = (0, $97ecbd121be4860b$export$342063e11d6c3cad)(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            if (!directUpdate) this.updateElement(point, i, properties, mode);\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n    getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i)max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) return border;\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n$1af551c56cb88ebf$export$b2f2bae6713db87.id = 'scatter';\n$1af551c56cb88ebf$export$b2f2bae6713db87.defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n};\n$1af551c56cb88ebf$export$b2f2bae6713db87.overrides = {\n    interaction: {\n        mode: 'point'\n    },\n    plugins: {\n        tooltip: {\n            callbacks: {\n                title () {\n                    return '';\n                },\n                label (item) {\n                    return '(' + item.label + ', ' + item.formattedValue + ')';\n                }\n            }\n        }\n    },\n    scales: {\n        x: {\n            type: 'linear'\n        },\n        y: {\n            type: 'linear'\n        }\n    }\n};\nvar $1af551c56cb88ebf$export$a6506504f799c5d5 = /*#__PURE__*/ Object.freeze({\n    __proto__: null,\n    BarController: $1af551c56cb88ebf$export$e97d5dc64e999004,\n    BubbleController: $1af551c56cb88ebf$export$19b5c4773f17abe,\n    DoughnutController: $1af551c56cb88ebf$export$e04603e7d8b77172,\n    LineController: $1af551c56cb88ebf$export$3c9b5d28c11cbfd0,\n    PolarAreaController: $1af551c56cb88ebf$export$2a270b3a0d973c85,\n    PieController: $1af551c56cb88ebf$export$b21a3f1286706191,\n    RadarController: $1af551c56cb88ebf$export$48dbc6ac651bf8be,\n    ScatterController: $1af551c56cb88ebf$export$b2f2bae6713db87\n});\nfunction $1af551c56cb88ebf$var$abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass $1af551c56cb88ebf$var$DateAdapter {\n    constructor(options){\n        this.options = options || {};\n    }\n    init(chartOptions) {}\n    formats() {\n        return $1af551c56cb88ebf$var$abstract();\n    }\n    parse(value, format) {\n        return $1af551c56cb88ebf$var$abstract();\n    }\n    format(timestamp, format) {\n        return $1af551c56cb88ebf$var$abstract();\n    }\n    add(timestamp, amount, unit) {\n        return $1af551c56cb88ebf$var$abstract();\n    }\n    diff(a, b, unit) {\n        return $1af551c56cb88ebf$var$abstract();\n    }\n    startOf(timestamp, unit, weekday) {\n        return $1af551c56cb88ebf$var$abstract();\n    }\n    endOf(timestamp, unit) {\n        return $1af551c56cb88ebf$var$abstract();\n    }\n}\n$1af551c56cb88ebf$var$DateAdapter.override = function(members) {\n    Object.assign($1af551c56cb88ebf$var$DateAdapter.prototype, members);\n};\nvar $1af551c56cb88ebf$export$f32766ea09ec8bc4 = {\n    _date: $1af551c56cb88ebf$var$DateAdapter\n};\nfunction $1af551c56cb88ebf$var$binarySearch(metaset, axis, value, intersect) {\n    const { controller: controller, data: data, _sorted: _sorted } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? (0, $97ecbd121be4860b$export$8743009a87fcb00f) : (0, $97ecbd121be4860b$export$dc98b0b04f4c7758);\n        if (!intersect) return lookupMethod(data, axis, value);\n        else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\nfunction $1af551c56cb88ebf$var$evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index: index, data: data } = metasets[i];\n        const { lo: lo, hi: hi } = $1af551c56cb88ebf$var$binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) handler(element, index, j);\n        }\n    }\n}\nfunction $1af551c56cb88ebf$var$getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\nfunction $1af551c56cb88ebf$var$getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) return items;\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !(0, $97ecbd121be4860b$export$3d8c2f653ac9d0b9)(element, chart.chartArea, 0)) return;\n        if (element.inRange(position.x, position.y, useFinalPosition)) items.push({\n            element: element,\n            datasetIndex: datasetIndex,\n            index: index\n        });\n    };\n    $1af551c56cb88ebf$var$evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\nfunction $1af551c56cb88ebf$var$getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle: startAngle, endAngle: endAngle } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle: angle } = (0, $97ecbd121be4860b$export$34aec0b863436764)(element, {\n            x: position.x,\n            y: position.y\n        });\n        if ((0, $97ecbd121be4860b$export$ffb5f4729a158638)(angle, startAngle, endAngle)) items.push({\n            element: element,\n            datasetIndex: datasetIndex,\n            index: index\n        });\n    }\n    $1af551c56cb88ebf$var$evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\nfunction $1af551c56cb88ebf$var$getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = $1af551c56cb88ebf$var$getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) return;\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) return;\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element: element,\n                    datasetIndex: datasetIndex,\n                    index: index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) items.push({\n            element: element,\n            datasetIndex: datasetIndex,\n            index: index\n        });\n    }\n    $1af551c56cb88ebf$var$evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\nfunction $1af551c56cb88ebf$var$getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) return [];\n    return axis === 'r' && !intersect ? $1af551c56cb88ebf$var$getNearestRadialItems(chart, position, axis, useFinalPosition) : $1af551c56cb88ebf$var$getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\nfunction $1af551c56cb88ebf$var$getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    $1af551c56cb88ebf$var$evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element: element,\n                datasetIndex: datasetIndex,\n                index: index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) return [];\n    return items;\n}\nvar $1af551c56cb88ebf$export$a13296960cae0384 = {\n    evaluateInteractionItems: $1af551c56cb88ebf$var$evaluateInteractionItems,\n    modes: {\n        index (chart, e, options, useFinalPosition) {\n            const position = (0, $97ecbd121be4860b$export$78acf4525d8a74c4)(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? $1af551c56cb88ebf$var$getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : $1af551c56cb88ebf$var$getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) return [];\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) elements.push({\n                    element: element,\n                    datasetIndex: meta.index,\n                    index: index\n                });\n            });\n            return elements;\n        },\n        dataset (chart, e, options, useFinalPosition) {\n            const position = (0, $97ecbd121be4860b$export$78acf4525d8a74c4)(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? $1af551c56cb88ebf$var$getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : $1af551c56cb88ebf$var$getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i)items.push({\n                    element: data[i],\n                    datasetIndex: datasetIndex,\n                    index: i\n                });\n            }\n            return items;\n        },\n        point (chart, e, options, useFinalPosition) {\n            const position = (0, $97ecbd121be4860b$export$78acf4525d8a74c4)(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return $1af551c56cb88ebf$var$getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n        nearest (chart, e, options, useFinalPosition) {\n            const position = (0, $97ecbd121be4860b$export$78acf4525d8a74c4)(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return $1af551c56cb88ebf$var$getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n        x (chart, e, options, useFinalPosition) {\n            const position = (0, $97ecbd121be4860b$export$78acf4525d8a74c4)(e, chart);\n            return $1af551c56cb88ebf$var$getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n        y (chart, e, options, useFinalPosition) {\n            const position = (0, $97ecbd121be4860b$export$78acf4525d8a74c4)(e, chart);\n            return $1af551c56cb88ebf$var$getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\nconst $1af551c56cb88ebf$var$STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction $1af551c56cb88ebf$var$filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction $1af551c56cb88ebf$var$filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>$1af551c56cb88ebf$var$STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction $1af551c56cb88ebf$var$sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction $1af551c56cb88ebf$var$wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos, options: { stack: stack, stackWeight: stackWeight = 1 } } = box);\n        layoutBoxes.push({\n            index: i,\n            box: box,\n            pos: pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight: stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction $1af551c56cb88ebf$var$buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack: stack, pos: pos, stackWeight: stackWeight } = wrap;\n        if (!stack || !$1af551c56cb88ebf$var$STATIC_POSITIONS.includes(pos)) continue;\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\nfunction $1af551c56cb88ebf$var$setLayoutDims(layouts, params) {\n    const stacks = $1af551c56cb88ebf$var$buildStacks(layouts);\n    const { vBoxMaxWidth: vBoxMaxWidth, hBoxMaxHeight: hBoxMaxHeight } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize: fullSize } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction $1af551c56cb88ebf$var$buildLayoutBoxes(boxes) {\n    const layoutBoxes = $1af551c56cb88ebf$var$wrapBoxes(boxes);\n    const fullSize = $1af551c56cb88ebf$var$sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = $1af551c56cb88ebf$var$sortByWeight($1af551c56cb88ebf$var$filterByPosition(layoutBoxes, 'left'), true);\n    const right = $1af551c56cb88ebf$var$sortByWeight($1af551c56cb88ebf$var$filterByPosition(layoutBoxes, 'right'));\n    const top = $1af551c56cb88ebf$var$sortByWeight($1af551c56cb88ebf$var$filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = $1af551c56cb88ebf$var$sortByWeight($1af551c56cb88ebf$var$filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = $1af551c56cb88ebf$var$filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = $1af551c56cb88ebf$var$filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize: fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: $1af551c56cb88ebf$var$filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction $1af551c56cb88ebf$var$getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction $1af551c56cb88ebf$var$updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction $1af551c56cb88ebf$var$updateDims(chartArea, params, layout, stacks) {\n    const { pos: pos, box: box } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!(0, $97ecbd121be4860b$export$23f2a1d2818174ef)(pos)) {\n        if (layout.size) chartArea[pos] -= layout.size;\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) $1af551c56cb88ebf$var$updateMaxPadding(maxPadding, box.getPadding());\n    const newWidth = Math.max(0, params.outerWidth - $1af551c56cb88ebf$var$getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - $1af551c56cb88ebf$var$getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction $1af551c56cb88ebf$var$handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction $1af551c56cb88ebf$var$getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction $1af551c56cb88ebf$var$fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, $1af551c56cb88ebf$var$getMargins(layout.horizontal, chartArea));\n        const { same: same, other: other } = $1af551c56cb88ebf$var$updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) refitBoxes.push(layout);\n    }\n    return refit && $1af551c56cb88ebf$var$fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction $1af551c56cb88ebf$var$setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction $1af551c56cb88ebf$var$placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x: x, y: y } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if ((0, $97ecbd121be4860b$export$35e795649ee09318)(stack.start)) y = stack.start;\n            if (box.fullSize) $1af551c56cb88ebf$var$setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            else $1af551c56cb88ebf$var$setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if ((0, $97ecbd121be4860b$export$35e795649ee09318)(stack.start)) x = stack.start;\n            if (box.fullSize) $1af551c56cb88ebf$var$setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            else $1af551c56cb88ebf$var$setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\n(0, $97ecbd121be4860b$export$4368d992c4eafac0).set('layout', {\n    autoPadding: true,\n    padding: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n    }\n});\nvar $1af551c56cb88ebf$export$1ecca0613f5e56d2 = {\n    addBox (chart, item) {\n        if (!chart.boxes) chart.boxes = [];\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n    removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) chart.boxes.splice(index, 1);\n    },\n    configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n    update (chart, width, height, minPadding) {\n        if (!chart) return;\n        const padding = (0, $97ecbd121be4860b$export$3466f893ebf79586)(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = $1af551c56cb88ebf$var$buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        (0, $97ecbd121be4860b$export$3722cfe417b6ed86)(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') box.beforeLayout();\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding: padding,\n            availableWidth: availableWidth,\n            availableHeight: availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        $1af551c56cb88ebf$var$updateMaxPadding(maxPadding, (0, $97ecbd121be4860b$export$3466f893ebf79586)(minPadding));\n        const chartArea = Object.assign({\n            maxPadding: maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = $1af551c56cb88ebf$var$setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        $1af551c56cb88ebf$var$fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        $1af551c56cb88ebf$var$fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if ($1af551c56cb88ebf$var$fitBoxes(horizontalBoxes, chartArea, params, stacks)) $1af551c56cb88ebf$var$fitBoxes(verticalBoxes, chartArea, params, stacks);\n        $1af551c56cb88ebf$var$handleMaxPadding(chartArea);\n        $1af551c56cb88ebf$var$placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        $1af551c56cb88ebf$var$placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        (0, $97ecbd121be4860b$export$3722cfe417b6ed86)(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\nclass $1af551c56cb88ebf$export$7b1aeb87f31f7da8 {\n    acquireContext(canvas, aspectRatio) {}\n    releaseContext(context) {\n        return false;\n    }\n    addEventListener(chart, type, listener) {}\n    removeEventListener(chart, type, listener) {}\n    getDevicePixelRatio() {\n        return 1;\n    }\n    getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width: width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n    isAttached(canvas) {\n        return true;\n    }\n    updateConfig(config) {}\n}\nclass $1af551c56cb88ebf$export$a40a96b24b46cf35 extends $1af551c56cb88ebf$export$7b1aeb87f31f7da8 {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\nconst $1af551c56cb88ebf$var$EXPANDO_KEY = '$chartjs';\nconst $1af551c56cb88ebf$var$EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst $1af551c56cb88ebf$var$isNullOrEmpty = (value)=>value === null || value === '';\nfunction $1af551c56cb88ebf$var$initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[$1af551c56cb88ebf$var$EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if ($1af551c56cb88ebf$var$isNullOrEmpty(renderWidth)) {\n        const displayWidth = (0, $97ecbd121be4860b$export$6559d589eb85fbb6)(canvas, 'width');\n        if (displayWidth !== undefined) canvas.width = displayWidth;\n    }\n    if ($1af551c56cb88ebf$var$isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') canvas.height = canvas.width / (aspectRatio || 2);\n        else {\n            const displayHeight = (0, $97ecbd121be4860b$export$6559d589eb85fbb6)(canvas, 'height');\n            if (displayHeight !== undefined) canvas.height = displayHeight;\n        }\n    }\n    return canvas;\n}\nconst $1af551c56cb88ebf$var$eventListenerOptions = (0, $97ecbd121be4860b$export$a8550f7dbe79f93a) ? {\n    passive: true\n} : false;\nfunction $1af551c56cb88ebf$var$addListener(node, type, listener) {\n    node.addEventListener(type, listener, $1af551c56cb88ebf$var$eventListenerOptions);\n}\nfunction $1af551c56cb88ebf$var$removeListener(chart, type, listener) {\n    chart.canvas.removeEventListener(type, listener, $1af551c56cb88ebf$var$eventListenerOptions);\n}\nfunction $1af551c56cb88ebf$var$fromNativeEvent(event, chart) {\n    const type = $1af551c56cb88ebf$var$EVENT_TYPES[event.type] || event.type;\n    const { x: x, y: y } = (0, $97ecbd121be4860b$export$78acf4525d8a74c4)(event, chart);\n    return {\n        type: type,\n        chart: chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction $1af551c56cb88ebf$var$nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) return true;\n    }\n}\nfunction $1af551c56cb88ebf$var$createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || $1af551c56cb88ebf$var$nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !$1af551c56cb88ebf$var$nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) listener();\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction $1af551c56cb88ebf$var$createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || $1af551c56cb88ebf$var$nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !$1af551c56cb88ebf$var$nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) listener();\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst $1af551c56cb88ebf$var$drpListeningCharts = new Map();\nlet $1af551c56cb88ebf$var$oldDevicePixelRatio = 0;\nfunction $1af551c56cb88ebf$var$onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === $1af551c56cb88ebf$var$oldDevicePixelRatio) return;\n    $1af551c56cb88ebf$var$oldDevicePixelRatio = dpr;\n    $1af551c56cb88ebf$var$drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) resize();\n    });\n}\nfunction $1af551c56cb88ebf$var$listenDevicePixelRatioChanges(chart, resize) {\n    if (!$1af551c56cb88ebf$var$drpListeningCharts.size) window.addEventListener('resize', $1af551c56cb88ebf$var$onWindowResize);\n    $1af551c56cb88ebf$var$drpListeningCharts.set(chart, resize);\n}\nfunction $1af551c56cb88ebf$var$unlistenDevicePixelRatioChanges(chart) {\n    $1af551c56cb88ebf$var$drpListeningCharts.delete(chart);\n    if (!$1af551c56cb88ebf$var$drpListeningCharts.size) window.removeEventListener('resize', $1af551c56cb88ebf$var$onWindowResize);\n}\nfunction $1af551c56cb88ebf$var$createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && (0, $97ecbd121be4860b$export$ce26c07117d59d6a)(canvas);\n    if (!container) return;\n    const resize = (0, $97ecbd121be4860b$export$efca4cbe5dd06740)((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) listener();\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) return;\n        resize(width, height);\n    });\n    observer.observe(container);\n    $1af551c56cb88ebf$var$listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction $1af551c56cb88ebf$var$releaseObserver(chart, type, observer) {\n    if (observer) observer.disconnect();\n    if (type === 'resize') $1af551c56cb88ebf$var$unlistenDevicePixelRatioChanges(chart);\n}\nfunction $1af551c56cb88ebf$var$createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = (0, $97ecbd121be4860b$export$efca4cbe5dd06740)((event)=>{\n        if (chart.ctx !== null) listener($1af551c56cb88ebf$var$fromNativeEvent(event, chart));\n    }, chart, (args)=>{\n        const event = args[0];\n        return [\n            event,\n            event.offsetX,\n            event.offsetY\n        ];\n    });\n    $1af551c56cb88ebf$var$addListener(canvas, type, proxy);\n    return proxy;\n}\nclass $1af551c56cb88ebf$export$f02da7f882cf6b2e extends $1af551c56cb88ebf$export$7b1aeb87f31f7da8 {\n    acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            $1af551c56cb88ebf$var$initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n    releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[$1af551c56cb88ebf$var$EXPANDO_KEY]) return false;\n        const initial = canvas[$1af551c56cb88ebf$var$EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if ((0, $97ecbd121be4860b$export$342063e11d6c3cad)(value)) canvas.removeAttribute(prop);\n            else canvas.setAttribute(prop, value);\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[$1af551c56cb88ebf$var$EXPANDO_KEY];\n        return true;\n    }\n    addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: $1af551c56cb88ebf$var$createAttachObserver,\n            detach: $1af551c56cb88ebf$var$createDetachObserver,\n            resize: $1af551c56cb88ebf$var$createResizeObserver\n        };\n        const handler = handlers[type] || $1af551c56cb88ebf$var$createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n    removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) return;\n        const handlers = {\n            attach: $1af551c56cb88ebf$var$releaseObserver,\n            detach: $1af551c56cb88ebf$var$releaseObserver,\n            resize: $1af551c56cb88ebf$var$releaseObserver\n        };\n        const handler = handlers[type] || $1af551c56cb88ebf$var$removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n    getMaximumSize(canvas, width, height, aspectRatio) {\n        return (0, $97ecbd121be4860b$export$3c2fa207a37baaea)(canvas, width, height, aspectRatio);\n    }\n    isAttached(canvas) {\n        const container = (0, $97ecbd121be4860b$export$ce26c07117d59d6a)(canvas);\n        return !!(container && container.isConnected);\n    }\n}\nfunction $1af551c56cb88ebf$export$72cd9e67b1b784f9(canvas) {\n    if (!(0, $97ecbd121be4860b$export$2e2af4578d910ddf)() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) return $1af551c56cb88ebf$export$a40a96b24b46cf35;\n    return $1af551c56cb88ebf$export$f02da7f882cf6b2e;\n}\nclass $1af551c56cb88ebf$var$PluginService {\n    constructor(){\n        this._init = [];\n    }\n    notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n    _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if ((0, $97ecbd121be4860b$export$e7094788287c5e9b)(method, params, plugin) === false && args.cancelable) return false;\n        }\n        return true;\n    }\n    invalidate() {\n        if (!(0, $97ecbd121be4860b$export$342063e11d6c3cad)(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n    _descriptors(chart) {\n        if (this._cache) return this._cache;\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = (0, $97ecbd121be4860b$export$90a7f3efeed30595)(config.options && config.options.plugins, {});\n        const plugins = $1af551c56cb88ebf$var$allPlugins(config);\n        return options === false && !all ? [] : $1af551c56cb88ebf$var$createDescriptors(chart, plugins, options, all);\n    }\n    _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\nfunction $1af551c56cb88ebf$var$allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys($1af551c56cb88ebf$export$4bb7493d241fd8a5.plugins.items);\n    for(let i = 0; i < keys.length; i++)plugins.push($1af551c56cb88ebf$export$4bb7493d241fd8a5.getPlugin(keys[i]));\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins: plugins,\n        localIds: localIds\n    };\n}\nfunction $1af551c56cb88ebf$var$getOpts(options, all) {\n    if (!all && options === false) return null;\n    if (options === true) return {};\n    return options;\n}\nfunction $1af551c56cb88ebf$var$createDescriptors(chart, { plugins: plugins, localIds: localIds }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = $1af551c56cb88ebf$var$getOpts(options[id], all);\n        if (opts === null) continue;\n        result.push({\n            plugin: plugin,\n            options: $1af551c56cb88ebf$var$pluginOpts(chart.config, {\n                plugin: plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction $1af551c56cb88ebf$var$pluginOpts(config, { plugin: plugin, local: local }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) scopes.push(plugin.defaults);\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\nfunction $1af551c56cb88ebf$var$getIndexAxis(type, options) {\n    const datasetDefaults = (0, $97ecbd121be4860b$export$4368d992c4eafac0).datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction $1af551c56cb88ebf$var$getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') axis = indexAxis;\n    else if (id === '_value_') axis = indexAxis === 'x' ? 'y' : 'x';\n    return axis;\n}\nfunction $1af551c56cb88ebf$var$getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction $1af551c56cb88ebf$var$axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') return 'x';\n    if (position === 'left' || position === 'right') return 'y';\n}\nfunction $1af551c56cb88ebf$var$determineAxis(id, scaleOptions) {\n    if (id === 'x' || id === 'y') return id;\n    return scaleOptions.axis || $1af551c56cb88ebf$var$axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction $1af551c56cb88ebf$var$mergeScaleConfig(config, options) {\n    const chartDefaults = (0, $97ecbd121be4860b$export$3a6d5c9ae78a2c08)[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = $1af551c56cb88ebf$var$getIndexAxis(config.type, options);\n    const firstIDs = Object.create(null);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!(0, $97ecbd121be4860b$export$23f2a1d2818174ef)(scaleConf)) return console.error(`Invalid scale configuration for scale: ${id}`);\n        if (scaleConf._proxy) return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        const axis = $1af551c56cb88ebf$var$determineAxis(id, scaleConf);\n        const defaultId = $1af551c56cb88ebf$var$getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        firstIDs[axis] = firstIDs[axis] || id;\n        scales[id] = (0, $97ecbd121be4860b$export$2219238a014317b0)(Object.create(null), [\n            {\n                axis: axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || $1af551c56cb88ebf$var$getIndexAxis(type, options);\n        const datasetDefaults = (0, $97ecbd121be4860b$export$3a6d5c9ae78a2c08)[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = $1af551c56cb88ebf$var$getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            (0, $97ecbd121be4860b$export$2219238a014317b0)(scales[id], [\n                {\n                    axis: axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        (0, $97ecbd121be4860b$export$2219238a014317b0)(scale, [\n            (0, $97ecbd121be4860b$export$4368d992c4eafac0).scales[scale.type],\n            (0, $97ecbd121be4860b$export$4368d992c4eafac0).scale\n        ]);\n    });\n    return scales;\n}\nfunction $1af551c56cb88ebf$var$initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = (0, $97ecbd121be4860b$export$90a7f3efeed30595)(options.plugins, {});\n    options.scales = $1af551c56cb88ebf$var$mergeScaleConfig(config, options);\n}\nfunction $1af551c56cb88ebf$var$initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction $1af551c56cb88ebf$var$initConfig(config) {\n    config = config || {};\n    config.data = $1af551c56cb88ebf$var$initData(config.data);\n    $1af551c56cb88ebf$var$initOptions(config);\n    return config;\n}\nconst $1af551c56cb88ebf$var$keyCache = new Map();\nconst $1af551c56cb88ebf$var$keysCached = new Set();\nfunction $1af551c56cb88ebf$var$cachedKeys(cacheKey, generate) {\n    let keys = $1af551c56cb88ebf$var$keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        $1af551c56cb88ebf$var$keyCache.set(cacheKey, keys);\n        $1af551c56cb88ebf$var$keysCached.add(keys);\n    }\n    return keys;\n}\nconst $1af551c56cb88ebf$var$addIfFound = (set, obj, key)=>{\n    const opts = (0, $97ecbd121be4860b$export$2d1720544b23b823)(obj, key);\n    if (opts !== undefined) set.add(opts);\n};\nclass $1af551c56cb88ebf$var$Config {\n    constructor(config){\n        this._config = $1af551c56cb88ebf$var$initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = $1af551c56cb88ebf$var$initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        $1af551c56cb88ebf$var$initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n    datasetScopeKeys(datasetType) {\n        return $1af551c56cb88ebf$var$cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n    datasetAnimationScopeKeys(datasetType, transition) {\n        return $1af551c56cb88ebf$var$cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n    datasetElementScopeKeys(datasetType, elementType) {\n        return $1af551c56cb88ebf$var$cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n    pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return $1af551c56cb88ebf$var$cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n    _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n    getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options: options, type: type } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) return cached;\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>$1af551c56cb88ebf$var$addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>$1af551c56cb88ebf$var$addIfFound(scopes, options, key));\n            keys.forEach((key)=>$1af551c56cb88ebf$var$addIfFound(scopes, (0, $97ecbd121be4860b$export$3a6d5c9ae78a2c08)[type] || {}, key));\n            keys.forEach((key)=>$1af551c56cb88ebf$var$addIfFound(scopes, (0, $97ecbd121be4860b$export$4368d992c4eafac0), key));\n            keys.forEach((key)=>$1af551c56cb88ebf$var$addIfFound(scopes, (0, $97ecbd121be4860b$export$a93c5207d687da10), key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) array.push(Object.create(null));\n        if ($1af551c56cb88ebf$var$keysCached.has(keyLists)) cache.set(keyLists, array);\n        return array;\n    }\n    chartOptionScopes() {\n        const { options: options, type: type } = this;\n        return [\n            options,\n            (0, $97ecbd121be4860b$export$3a6d5c9ae78a2c08)[type] || {},\n            (0, $97ecbd121be4860b$export$4368d992c4eafac0).datasets[type] || {},\n            {\n                type: type\n            },\n            (0, $97ecbd121be4860b$export$4368d992c4eafac0),\n            (0, $97ecbd121be4860b$export$a93c5207d687da10)\n        ];\n    }\n    resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver: resolver, subPrefixes: subPrefixes } = $1af551c56cb88ebf$var$getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if ($1af551c56cb88ebf$var$needContext(resolver, names)) {\n            result.$shared = false;\n            context = (0, $97ecbd121be4860b$export$c3950d9923825c02)(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = (0, $97ecbd121be4860b$export$a9c996f45e5784d0)(resolver, context, subResolver);\n        }\n        for (const prop of names)result[prop] = options[prop];\n        return result;\n    }\n    createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver: resolver } = $1af551c56cb88ebf$var$getResolver(this._resolverCache, scopes, prefixes);\n        return (0, $97ecbd121be4860b$export$23f2a1d2818174ef)(context) ? (0, $97ecbd121be4860b$export$a9c996f45e5784d0)(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction $1af551c56cb88ebf$var$getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = (0, $97ecbd121be4860b$export$7910e0436ed8d1de)(scopes, prefixes);\n        cached = {\n            resolver: resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst $1af551c56cb88ebf$var$hasFunction = (value)=>(0, $97ecbd121be4860b$export$23f2a1d2818174ef)(value) && Object.getOwnPropertyNames(value).reduce((acc, key)=>acc || (0, $97ecbd121be4860b$export$c3950d9923825c02)(value[key]), false);\nfunction $1af551c56cb88ebf$var$needContext(proxy, names) {\n    const { isScriptable: isScriptable, isIndexable: isIndexable } = (0, $97ecbd121be4860b$export$555508cbc6add439)(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && ((0, $97ecbd121be4860b$export$c3950d9923825c02)(value) || $1af551c56cb88ebf$var$hasFunction(value)) || indexable && (0, $97ecbd121be4860b$export$8b22cf2602fb60ce)(value)) return true;\n    }\n    return false;\n}\nvar $1af551c56cb88ebf$var$version = \"3.9.1\";\nconst $1af551c56cb88ebf$var$KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction $1af551c56cb88ebf$var$positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || $1af551c56cb88ebf$var$KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction $1af551c56cb88ebf$var$compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction $1af551c56cb88ebf$var$onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    (0, $97ecbd121be4860b$export$e7094788287c5e9b)(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction $1af551c56cb88ebf$var$onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    (0, $97ecbd121be4860b$export$e7094788287c5e9b)(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\nfunction $1af551c56cb88ebf$var$getCanvas(item) {\n    if ((0, $97ecbd121be4860b$export$2e2af4578d910ddf)() && typeof item === 'string') item = document.getElementById(item);\n    else if (item && item.length) item = item[0];\n    if (item && item.canvas) item = item.canvas;\n    return item;\n}\nconst $1af551c56cb88ebf$var$instances = {};\nconst $1af551c56cb88ebf$var$getChart = (key)=>{\n    const canvas = $1af551c56cb88ebf$var$getCanvas(key);\n    return Object.values($1af551c56cb88ebf$var$instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction $1af551c56cb88ebf$var$moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) obj[intKey + move] = value;\n        }\n    }\n}\nfunction $1af551c56cb88ebf$var$determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') return null;\n    if (isClick) return lastEvent;\n    return e;\n}\nclass $1af551c56cb88ebf$export$acaa6426d77a227e {\n    constructor(item, userConfig){\n        const config = this.config = new $1af551c56cb88ebf$var$Config(userConfig);\n        const initialCanvas = $1af551c56cb88ebf$var$getCanvas(item);\n        const existingChart = $1af551c56cb88ebf$var$getChart(initialCanvas);\n        if (existingChart) throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || $1af551c56cb88ebf$export$72cd9e67b1b784f9(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = (0, $97ecbd121be4860b$export$4c3d22f3d993c33f)();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n        this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new $1af551c56cb88ebf$var$PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = (0, $97ecbd121be4860b$export$f787f51d84a910ad)((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        $1af551c56cb88ebf$var$instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        $1af551c56cb88ebf$export$a424a0aa8f687495.listen(this, 'complete', $1af551c56cb88ebf$var$onAnimationsComplete);\n        $1af551c56cb88ebf$export$a424a0aa8f687495.listen(this, 'progress', $1af551c56cb88ebf$var$onAnimationProgress);\n        this._initialize();\n        if (this.attached) this.update();\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio: aspectRatio, maintainAspectRatio: maintainAspectRatio }, width: width, height: height, _aspectRatio: _aspectRatio } = this;\n        if (!(0, $97ecbd121be4860b$export$342063e11d6c3cad)(aspectRatio)) return aspectRatio;\n        if (maintainAspectRatio && _aspectRatio) return _aspectRatio;\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) this.resize();\n        else (0, $97ecbd121be4860b$export$c9170ad7d4cd7e57)(this, this.options.devicePixelRatio);\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        (0, $97ecbd121be4860b$export$ee7c8ad385a60b7b)(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        $1af551c56cb88ebf$export$a424a0aa8f687495.stop(this);\n        return this;\n    }\n    resize(width, height) {\n        if (!$1af551c56cb88ebf$export$a424a0aa8f687495.running(this)) this._resize(width, height);\n        else this._resizeBeforeDraw = {\n            width: width,\n            height: height\n        };\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!(0, $97ecbd121be4860b$export$c9170ad7d4cd7e57)(this, newRatio, true)) return;\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        (0, $97ecbd121be4860b$export$e7094788287c5e9b)(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) this.render();\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        (0, $97ecbd121be4860b$export$3722cfe417b6ed86)(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n    buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) items = items.concat(Object.keys(scaleOpts).map((id)=>{\n            const scaleOptions = scaleOpts[id];\n            const axis = $1af551c56cb88ebf$var$determineAxis(id, scaleOptions);\n            const isRadial = axis === 'r';\n            const isHorizontal = axis === 'x';\n            return {\n                options: scaleOptions,\n                dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n            };\n        }));\n        (0, $97ecbd121be4860b$export$3722cfe417b6ed86)(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = $1af551c56cb88ebf$var$determineAxis(id, scaleOptions);\n            const scaleType = (0, $97ecbd121be4860b$export$90a7f3efeed30595)(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || $1af551c56cb88ebf$var$positionIsHorizontal(scaleOptions.position, axis) !== $1af551c56cb88ebf$var$positionIsHorizontal(item.dposition)) scaleOptions.position = item.dposition;\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) scale = scales[id];\n            else {\n                const scaleClass = $1af551c56cb88ebf$export$4bb7493d241fd8a5.getScale(scaleType);\n                scale = new scaleClass({\n                    id: id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        (0, $97ecbd121be4860b$export$3722cfe417b6ed86)(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) delete scales[id];\n        });\n        (0, $97ecbd121be4860b$export$3722cfe417b6ed86)(scales, (scale)=>{\n            $1af551c56cb88ebf$export$1ecca0613f5e56d2.configure(this, scale, scale.options);\n            $1af551c56cb88ebf$export$1ecca0613f5e56d2.addBox(this, scale);\n        });\n    }\n    _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i)this._destroyDatasetMeta(i);\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort($1af551c56cb88ebf$var$compare2Level('order', 'index'));\n    }\n    _removeUnreferencedMetasets() {\n        const { _metasets: metasets, data: { datasets: datasets } } = this;\n        if (metasets.length > datasets.length) delete this._stacks;\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) this._destroyDatasetMeta(index);\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || $1af551c56cb88ebf$var$getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = $1af551c56cb88ebf$export$4bb7493d241fd8a5.getController(type);\n                const { datasetElementType: datasetElementType, dataElementType: dataElementType } = (0, $97ecbd121be4860b$export$4368d992c4eafac0).datasets[type];\n                Object.assign(ControllerClass.prototype, {\n                    dataElementType: $1af551c56cb88ebf$export$4bb7493d241fd8a5.getElement(dataElementType),\n                    datasetElementType: datasetElementType && $1af551c56cb88ebf$export$4bb7493d241fd8a5.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n    _resetElements() {\n        (0, $97ecbd121be4860b$export$3722cfe417b6ed86)(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n    reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode: mode,\n            cancelable: true\n        }) === false) return;\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller: controller } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) (0, $97ecbd121be4860b$export$3722cfe417b6ed86)(newControllers, (controller)=>{\n            controller.reset();\n        });\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode: mode\n        });\n        this._layers.sort($1af551c56cb88ebf$var$compare2Level('z', '_idx'));\n        const { _active: _active, _lastEvent: _lastEvent } = this;\n        if (_lastEvent) this._eventHandler(_lastEvent, true);\n        else if (_active.length) this._updateHoverStyles(_active, _active, true);\n        this.render();\n    }\n    _updateScales() {\n        (0, $97ecbd121be4860b$export$3722cfe417b6ed86)(this.scales, (scale)=>{\n            $1af551c56cb88ebf$export$1ecca0613f5e56d2.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n    _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!(0, $97ecbd121be4860b$export$995eb9fca571757)(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n    _updateHiddenIndices() {\n        const { _hiddenIndices: _hiddenIndices } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method: method, start: start, count: count } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            $1af551c56cb88ebf$var$moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n    _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) return;\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!(0, $97ecbd121be4860b$export$995eb9fca571757)(changeSet, makeSet(i))) return;\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n    _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) return;\n        $1af551c56cb88ebf$export$1ecca0613f5e56d2.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        (0, $97ecbd121be4860b$export$3722cfe417b6ed86)(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') return;\n            if (box.configure) box.configure();\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n    _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode: mode,\n            cancelable: true\n        }) === false) return;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i)this.getDatasetMeta(i).controller.configure();\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i)this._updateDataset(i, (0, $97ecbd121be4860b$export$c3950d9923825c02)(mode) ? mode({\n            datasetIndex: i\n        }) : mode);\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode: mode\n        });\n    }\n    _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta: meta,\n            index: index,\n            mode: mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) return;\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) return;\n        if ($1af551c56cb88ebf$export$a424a0aa8f687495.has(this)) {\n            if (this.attached && !$1af551c56cb88ebf$export$a424a0aa8f687495.running(this)) $1af551c56cb88ebf$export$a424a0aa8f687495.start(this);\n        } else {\n            this.draw();\n            $1af551c56cb88ebf$var$onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width: width, height: height } = this._resizeBeforeDraw;\n            this._resize(width, height);\n            this._resizeBeforeDraw = null;\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) return;\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) return;\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i)layers[i].draw(this.chartArea);\n        this._drawDatasets();\n        for(; i < layers.length; ++i)layers[i].draw(this.chartArea);\n        this.notifyPlugins('afterDraw');\n    }\n    _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) result.push(meta);\n        }\n        return result;\n    }\n    getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n    _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) return;\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i)this._drawDataset(metasets[i]);\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n    _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = this.chartArea;\n        const args = {\n            meta: meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) return;\n        if (useClip) (0, $97ecbd121be4860b$export$61196ced6d74a310)(ctx, {\n            left: clip.left === false ? 0 : area.left - clip.left,\n            right: clip.right === false ? this.width : area.right + clip.right,\n            top: clip.top === false ? 0 : area.top - clip.top,\n            bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n        });\n        meta.controller.draw();\n        if (useClip) (0, $97ecbd121be4860b$export$a07804094c3ecf2d)(ctx);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n    isPointInArea(point) {\n        return (0, $97ecbd121be4860b$export$3d8c2f653ac9d0b9)(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = $1af551c56cb88ebf$export$a13296960cae0384.modes[mode];\n        if (typeof method === 'function') return method(this, e, options, useFinalPosition);\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = (0, $97ecbd121be4860b$export$dda1d9f60106f0e9)(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) return false;\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n    _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if ((0, $97ecbd121be4860b$export$35e795649ee09318)(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible: visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n    _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) meta.controller._destroy();\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        $1af551c56cb88ebf$export$a424a0aa8f687495.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i)this._destroyDatasetMeta(i);\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas: canvas, ctx: ctx } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            (0, $97ecbd121be4860b$export$ee7c8ad385a60b7b)(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        this.notifyPlugins('destroy');\n        delete $1af551c56cb88ebf$var$instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n    bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) this.bindResponsiveEvents();\n        else this.attached = true;\n    }\n    bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        (0, $97ecbd121be4860b$export$3722cfe417b6ed86)(this.options.events, (type)=>_add(type, listener));\n    }\n    bindResponsiveEvents() {\n        if (!this._responsiveListeners) this._responsiveListeners = {};\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) this.resize(width, height);\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) attached();\n        else detached();\n    }\n    unbindEvents() {\n        (0, $97ecbd121be4860b$export$3722cfe417b6ed86)(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        (0, $97ecbd121be4860b$export$3722cfe417b6ed86)(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n        }\n    }\n    getActiveElements() {\n        return this._active || [];\n    }\n    setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex: datasetIndex, index: index })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) throw new Error('No dataset found at index ' + datasetIndex);\n            return {\n                datasetIndex: datasetIndex,\n                element: meta.data[index],\n                index: index\n            };\n        });\n        const changed = !(0, $97ecbd121be4860b$export$f38c853ae54ed474)(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n    notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n    _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        if (activated.length && hoverOptions.mode) this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n    _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay: replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) return;\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) this.render();\n        return this;\n    }\n    _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [], options: options } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = (0, $97ecbd121be4860b$export$3b513254972cfc9c)(e);\n        const lastEvent = $1af551c56cb88ebf$var$determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            (0, $97ecbd121be4860b$export$e7094788287c5e9b)(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) (0, $97ecbd121be4860b$export$e7094788287c5e9b)(options.onClick, [\n                e,\n                active,\n                this\n            ], this);\n        }\n        const changed = !(0, $97ecbd121be4860b$export$f38c853ae54ed474)(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n    _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') return [];\n        if (!inChartArea) return lastActive;\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nconst $1af551c56cb88ebf$var$invalidatePlugins = ()=>(0, $97ecbd121be4860b$export$3722cfe417b6ed86)($1af551c56cb88ebf$export$acaa6426d77a227e.instances, (chart)=>chart._plugins.invalidate());\nconst $1af551c56cb88ebf$var$enumerable = true;\nObject.defineProperties($1af551c56cb88ebf$export$acaa6426d77a227e, {\n    defaults: {\n        enumerable: $1af551c56cb88ebf$var$enumerable,\n        value: (0, $97ecbd121be4860b$export$4368d992c4eafac0)\n    },\n    instances: {\n        enumerable: $1af551c56cb88ebf$var$enumerable,\n        value: $1af551c56cb88ebf$var$instances\n    },\n    overrides: {\n        enumerable: $1af551c56cb88ebf$var$enumerable,\n        value: (0, $97ecbd121be4860b$export$3a6d5c9ae78a2c08)\n    },\n    registry: {\n        enumerable: $1af551c56cb88ebf$var$enumerable,\n        value: $1af551c56cb88ebf$export$4bb7493d241fd8a5\n    },\n    version: {\n        enumerable: $1af551c56cb88ebf$var$enumerable,\n        value: $1af551c56cb88ebf$var$version\n    },\n    getChart: {\n        enumerable: $1af551c56cb88ebf$var$enumerable,\n        value: $1af551c56cb88ebf$var$getChart\n    },\n    register: {\n        enumerable: $1af551c56cb88ebf$var$enumerable,\n        value: (...items)=>{\n            $1af551c56cb88ebf$export$4bb7493d241fd8a5.add(...items);\n            $1af551c56cb88ebf$var$invalidatePlugins();\n        }\n    },\n    unregister: {\n        enumerable: $1af551c56cb88ebf$var$enumerable,\n        value: (...items)=>{\n            $1af551c56cb88ebf$export$4bb7493d241fd8a5.remove(...items);\n            $1af551c56cb88ebf$var$invalidatePlugins();\n        }\n    }\n});\nfunction $1af551c56cb88ebf$var$clipArc(ctx, element, endAngle) {\n    const { startAngle: startAngle, pixelMargin: pixelMargin, x: x, y: y, outerRadius: outerRadius, innerRadius: innerRadius } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else ctx.arc(x, y, pixelMargin, endAngle + (0, $97ecbd121be4860b$export$7f8ddf7c7c20b3cd), startAngle - (0, $97ecbd121be4860b$export$7f8ddf7c7c20b3cd));\n    ctx.closePath();\n    ctx.clip();\n}\nfunction $1af551c56cb88ebf$var$toRadiusCorners(value) {\n    return (0, $97ecbd121be4860b$export$ab83b03e4111b1d0)(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\nfunction $1af551c56cb88ebf$var$parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = $1af551c56cb88ebf$var$toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return (0, $97ecbd121be4860b$export$a9c23c6ac3fc3eca)(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: (0, $97ecbd121be4860b$export$a9c23c6ac3fc3eca)(o.innerStart, 0, innerLimit),\n        innerEnd: (0, $97ecbd121be4860b$export$a9c23c6ac3fc3eca)(o.innerEnd, 0, innerLimit)\n    };\n}\nfunction $1af551c56cb88ebf$var$rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\nfunction $1af551c56cb88ebf$var$pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x: x, y: y, startAngle: start, pixelMargin: pixelMargin, innerRadius: innerR } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / (0, $97ecbd121be4860b$export$56c0d5a1e737357d)) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart: outerStart, outerEnd: outerEnd, innerStart: innerStart, innerEnd: innerEnd } = $1af551c56cb88ebf$var$parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n        if (outerEnd > 0) {\n            const pCenter = $1af551c56cb88ebf$var$rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + (0, $97ecbd121be4860b$export$7f8ddf7c7c20b3cd));\n        }\n        const p4 = $1af551c56cb88ebf$var$rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        if (innerEnd > 0) {\n            const pCenter = $1af551c56cb88ebf$var$rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + (0, $97ecbd121be4860b$export$7f8ddf7c7c20b3cd), innerEndAdjustedAngle + Math.PI);\n        }\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, startAngle + innerStart / innerRadius, true);\n        if (innerStart > 0) {\n            const pCenter = $1af551c56cb88ebf$var$rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - (0, $97ecbd121be4860b$export$7f8ddf7c7c20b3cd));\n        }\n        const p8 = $1af551c56cb88ebf$var$rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        if (outerStart > 0) {\n            const pCenter = $1af551c56cb88ebf$var$rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - (0, $97ecbd121be4860b$export$7f8ddf7c7c20b3cd), outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction $1af551c56cb88ebf$var$drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles: fullCircles, startAngle: startAngle, circumference: circumference } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        $1af551c56cb88ebf$var$pathArc(ctx, element, offset, spacing, startAngle + (0, $97ecbd121be4860b$export$971d5caa766a69d7), circular);\n        for(let i = 0; i < fullCircles; ++i)ctx.fill();\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + circumference % (0, $97ecbd121be4860b$export$971d5caa766a69d7);\n            if (circumference % (0, $97ecbd121be4860b$export$971d5caa766a69d7) === 0) endAngle += (0, $97ecbd121be4860b$export$971d5caa766a69d7);\n        }\n    }\n    $1af551c56cb88ebf$var$pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction $1af551c56cb88ebf$var$drawFullCircleBorders(ctx, element, inner) {\n    const { x: x, y: y, startAngle: startAngle, pixelMargin: pixelMargin, fullCircles: fullCircles } = element;\n    const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n    const innerRadius = element.innerRadius + pixelMargin;\n    let i;\n    if (inner) $1af551c56cb88ebf$var$clipArc(ctx, element, startAngle + (0, $97ecbd121be4860b$export$971d5caa766a69d7));\n    ctx.beginPath();\n    ctx.arc(x, y, innerRadius, startAngle + (0, $97ecbd121be4860b$export$971d5caa766a69d7), startAngle, true);\n    for(i = 0; i < fullCircles; ++i)ctx.stroke();\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle, startAngle + (0, $97ecbd121be4860b$export$971d5caa766a69d7));\n    for(i = 0; i < fullCircles; ++i)ctx.stroke();\n}\nfunction $1af551c56cb88ebf$var$drawBorder(ctx, element, offset, spacing, endAngle, circular) {\n    const { options: options } = element;\n    const { borderWidth: borderWidth, borderJoinStyle: borderJoinStyle } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) return;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    if (element.fullCircles) $1af551c56cb88ebf$var$drawFullCircleBorders(ctx, element, inner);\n    if (inner) $1af551c56cb88ebf$var$clipArc(ctx, element, endAngle);\n    $1af551c56cb88ebf$var$pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n}\nclass $1af551c56cb88ebf$export$d48203c759d6a1fc extends $1af551c56cb88ebf$export$db77ccec0bb4ccac {\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) Object.assign(this, cfg);\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle: angle, distance: distance } = (0, $97ecbd121be4860b$export$34aec0b863436764)(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle: startAngle, endAngle: endAngle, innerRadius: innerRadius, outerRadius: outerRadius, circumference: circumference } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = this.options.spacing / 2;\n        const _circumference = (0, $97ecbd121be4860b$export$90a7f3efeed30595)(circumference, endAngle - startAngle);\n        const betweenAngles = _circumference >= (0, $97ecbd121be4860b$export$971d5caa766a69d7) || (0, $97ecbd121be4860b$export$ffb5f4729a158638)(angle, startAngle, endAngle);\n        const withinRadius = (0, $97ecbd121be4860b$export$21579262ef46735b)(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x: x, y: y, startAngle: startAngle, endAngle: endAngle, innerRadius: innerRadius, outerRadius: outerRadius } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const { offset: offset, spacing: spacing } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options: options, circumference: circumference } = this;\n        const offset = (options.offset || 0) / 2;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > (0, $97ecbd121be4860b$export$971d5caa766a69d7) ? Math.floor(circumference / (0, $97ecbd121be4860b$export$971d5caa766a69d7)) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) return;\n        ctx.save();\n        let radiusOffset = 0;\n        if (offset) {\n            radiusOffset = offset / 2;\n            const halfAngle = (this.startAngle + this.endAngle) / 2;\n            ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n            if (this.circumference >= (0, $97ecbd121be4860b$export$56c0d5a1e737357d)) radiusOffset = offset;\n        }\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        const endAngle = $1af551c56cb88ebf$var$drawArc(ctx, this, radiusOffset, spacing, circular);\n        $1af551c56cb88ebf$var$drawBorder(ctx, this, radiusOffset, spacing, endAngle, circular);\n        ctx.restore();\n    }\n}\n$1af551c56cb88ebf$export$d48203c759d6a1fc.id = 'arc';\n$1af551c56cb88ebf$export$d48203c759d6a1fc.defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true\n};\n$1af551c56cb88ebf$export$d48203c759d6a1fc.defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n};\nfunction $1af551c56cb88ebf$var$setStyle(ctx, options, style = options) {\n    ctx.lineCap = (0, $97ecbd121be4860b$export$90a7f3efeed30595)(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash((0, $97ecbd121be4860b$export$90a7f3efeed30595)(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = (0, $97ecbd121be4860b$export$90a7f3efeed30595)(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = (0, $97ecbd121be4860b$export$90a7f3efeed30595)(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = (0, $97ecbd121be4860b$export$90a7f3efeed30595)(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = (0, $97ecbd121be4860b$export$90a7f3efeed30595)(style.borderColor, options.borderColor);\n}\nfunction $1af551c56cb88ebf$var$lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\nfunction $1af551c56cb88ebf$var$getLineMethod(options) {\n    if (options.stepped) return 0, $97ecbd121be4860b$export$6554612db691658e;\n    if (options.tension || options.cubicInterpolationMode === 'monotone') return 0, $97ecbd121be4860b$export$493d36ec626b6698;\n    return $1af551c56cb88ebf$var$lineTo;\n}\nfunction $1af551c56cb88ebf$var$pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0, end: paramsEnd = count - 1 } = params;\n    const { start: segmentStart, end: segmentEnd } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count: count,\n        start: start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\nfunction $1af551c56cb88ebf$var$pathSegment(ctx, line, segment, params) {\n    const { points: points, options: options } = line;\n    const { count: count, start: start, loop: loop, ilen: ilen } = $1af551c56cb88ebf$var$pathVars(points, segment, params);\n    const lineMethod = $1af551c56cb88ebf$var$getLineMethod(options);\n    let { move: move = true, reverse: reverse } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) continue;\n        else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else lineMethod(ctx, prev, point, reverse, options.stepped);\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\nfunction $1af551c56cb88ebf$var$fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count: count, start: start, ilen: ilen } = $1af551c56cb88ebf$var$pathVars(points, segment, params);\n    const { move: move = true, reverse: reverse } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) continue;\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) minY = y;\n            else if (y > maxY) maxY = y;\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\nfunction $1af551c56cb88ebf$var$_getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? $1af551c56cb88ebf$var$fastPathSegment : $1af551c56cb88ebf$var$pathSegment;\n}\nfunction $1af551c56cb88ebf$var$_getInterpolationMethod(options) {\n    if (options.stepped) return 0, $97ecbd121be4860b$export$2f6ca3d3b1f80bf5;\n    if (options.tension || options.cubicInterpolationMode === 'monotone') return 0, $97ecbd121be4860b$export$8a5498727ef6be21;\n    return 0, $97ecbd121be4860b$export$d24c54395ce0c509;\n}\nfunction $1af551c56cb88ebf$var$strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) path.closePath();\n    }\n    $1af551c56cb88ebf$var$setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction $1af551c56cb88ebf$var$strokePathDirect(ctx, line, start, count) {\n    const { segments: segments, options: options } = line;\n    const segmentMethod = $1af551c56cb88ebf$var$_getSegmentMethod(line);\n    for (const segment of segments){\n        $1af551c56cb88ebf$var$setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start: start,\n            end: start + count - 1\n        })) ctx.closePath();\n        ctx.stroke();\n    }\n}\nconst $1af551c56cb88ebf$var$usePath2D = typeof Path2D === 'function';\nfunction $1af551c56cb88ebf$var$draw(ctx, line, start, count) {\n    if ($1af551c56cb88ebf$var$usePath2D && !line.options.segment) $1af551c56cb88ebf$var$strokePathWithCache(ctx, line, start, count);\n    else $1af551c56cb88ebf$var$strokePathDirect(ctx, line, start, count);\n}\nclass $1af551c56cb88ebf$export$55e463fa7bcd3469 extends $1af551c56cb88ebf$export$db77ccec0bb4ccac {\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) Object.assign(this, cfg);\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            (0, $97ecbd121be4860b$export$1a82df3d29112e01)(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = (0, $97ecbd121be4860b$export$306ddfe3a8403e2)(this, this.options.segment));\n    }\n    first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n    last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n    interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = (0, $97ecbd121be4860b$export$7a38258bbe170828)(this, {\n            property: property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) return;\n        const result = [];\n        const _interpolate = $1af551c56cb88ebf$var$_getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start: start, end: end } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n    pathSegment(ctx, segment, params) {\n        const segmentMethod = $1af551c56cb88ebf$var$_getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n    path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = $1af551c56cb88ebf$var$_getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments)loop &= segmentMethod(ctx, this, segment, {\n            start: start,\n            end: start + count - 1\n        });\n        return !!loop;\n    }\n    draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            $1af551c56cb88ebf$var$draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n$1af551c56cb88ebf$export$55e463fa7bcd3469.id = 'line';\n$1af551c56cb88ebf$export$55e463fa7bcd3469.defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0\n};\n$1af551c56cb88ebf$export$55e463fa7bcd3469.defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n};\n$1af551c56cb88ebf$export$55e463fa7bcd3469.descriptors = {\n    _scriptable: true,\n    _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n};\nfunction $1af551c56cb88ebf$var$inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass $1af551c56cb88ebf$export$bd159b522b230b7a extends $1af551c56cb88ebf$export$db77ccec0bb4ccac {\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) Object.assign(this, cfg);\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x: x, y: y } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return $1af551c56cb88ebf$var$inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return $1af551c56cb88ebf$var$inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x: x, y: y } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x: x,\n            y: y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !(0, $97ecbd121be4860b$export$3d8c2f653ac9d0b9)(this, area, this.size(options) / 2)) return;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        (0, $97ecbd121be4860b$export$1fbe638ecf81657e)(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        return options.radius + options.hitRadius;\n    }\n}\n$1af551c56cb88ebf$export$bd159b522b230b7a.id = 'point';\n$1af551c56cb88ebf$export$bd159b522b230b7a.defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n};\n$1af551c56cb88ebf$export$bd159b522b230b7a.defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n};\nfunction $1af551c56cb88ebf$var$getBarBounds(bar, useFinalPosition) {\n    const { x: x, y: y, base: base, width: width, height: height } = bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left: left,\n        top: top,\n        right: right,\n        bottom: bottom\n    };\n}\nfunction $1af551c56cb88ebf$var$skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : (0, $97ecbd121be4860b$export$a9c23c6ac3fc3eca)(value, min, max);\n}\nfunction $1af551c56cb88ebf$var$parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = (0, $97ecbd121be4860b$export$92108d983e8ee699)(value);\n    return {\n        t: $1af551c56cb88ebf$var$skipOrLimit(skip.top, o.top, 0, maxH),\n        r: $1af551c56cb88ebf$var$skipOrLimit(skip.right, o.right, 0, maxW),\n        b: $1af551c56cb88ebf$var$skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: $1af551c56cb88ebf$var$skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction $1af551c56cb88ebf$var$parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius: enableBorderRadius } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = (0, $97ecbd121be4860b$export$9fa96a7d116ea3ce)(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || (0, $97ecbd121be4860b$export$23f2a1d2818174ef)(value);\n    return {\n        topLeft: $1af551c56cb88ebf$var$skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: $1af551c56cb88ebf$var$skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: $1af551c56cb88ebf$var$skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: $1af551c56cb88ebf$var$skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction $1af551c56cb88ebf$var$boundingRects(bar) {\n    const bounds = $1af551c56cb88ebf$var$getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = $1af551c56cb88ebf$var$parseBorderWidth(bar, width / 2, height / 2);\n    const radius = $1af551c56cb88ebf$var$parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius: radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction $1af551c56cb88ebf$var$inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && $1af551c56cb88ebf$var$getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || (0, $97ecbd121be4860b$export$21579262ef46735b)(x, bounds.left, bounds.right)) && (skipY || (0, $97ecbd121be4860b$export$21579262ef46735b)(y, bounds.top, bounds.bottom));\n}\nfunction $1af551c56cb88ebf$var$hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction $1af551c56cb88ebf$var$addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction $1af551c56cb88ebf$var$inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass $1af551c56cb88ebf$export$a16ed71bf4b07672 extends $1af551c56cb88ebf$export$db77ccec0bb4ccac {\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) Object.assign(this, cfg);\n    }\n    draw(ctx) {\n        const { inflateAmount: inflateAmount, options: { borderColor: borderColor, backgroundColor: backgroundColor } } = this;\n        const { inner: inner, outer: outer } = $1af551c56cb88ebf$var$boundingRects(this);\n        const addRectPath = $1af551c56cb88ebf$var$hasRadius(outer.radius) ? (0, $97ecbd121be4860b$export$d66dc83d8cfc8dd) : $1af551c56cb88ebf$var$addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, $1af551c56cb88ebf$var$inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, $1af551c56cb88ebf$var$inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, $1af551c56cb88ebf$var$inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return $1af551c56cb88ebf$var$inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return $1af551c56cb88ebf$var$inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return $1af551c56cb88ebf$var$inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x: x, y: y, base: base, horizontal: horizontal } = this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n$1af551c56cb88ebf$export$a16ed71bf4b07672.id = 'bar';\n$1af551c56cb88ebf$export$a16ed71bf4b07672.defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n};\n$1af551c56cb88ebf$export$a16ed71bf4b07672.defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n};\nvar $1af551c56cb88ebf$export$7a5d735b2ab6389d = /*#__PURE__*/ Object.freeze({\n    __proto__: null,\n    ArcElement: $1af551c56cb88ebf$export$d48203c759d6a1fc,\n    LineElement: $1af551c56cb88ebf$export$55e463fa7bcd3469,\n    PointElement: $1af551c56cb88ebf$export$bd159b522b230b7a,\n    BarElement: $1af551c56cb88ebf$export$a16ed71bf4b07672\n});\nfunction $1af551c56cb88ebf$var$lttbDecimation(data, start, count, availableWidth, options) {\n    const samples = options.samples || availableWidth;\n    if (samples >= count) return data.slice(start, start + count);\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx, y: pointAy } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction $1af551c56cb88ebf$var$minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!(0, $97ecbd121be4860b$export$342063e11d6c3cad)(minIndex) && !(0, $97ecbd121be4860b$export$342063e11d6c3cad)(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) decimated.push({\n                    ...data[intermediateIndex1],\n                    x: avgX\n                });\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) decimated.push({\n                    ...data[intermediateIndex2],\n                    x: avgX\n                });\n            }\n            if (i > 0 && lastIndex !== startIndex) decimated.push(data[lastIndex]);\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction $1af551c56cb88ebf$var$cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            value: data\n        });\n    }\n}\nfunction $1af551c56cb88ebf$var$cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        $1af551c56cb88ebf$var$cleanDecimatedDataset(dataset);\n    });\n}\nfunction $1af551c56cb88ebf$var$getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale: iScale } = meta;\n    const { min: min, max: max, minDefined: minDefined, maxDefined: maxDefined } = iScale.getUserBounds();\n    if (minDefined) start = (0, $97ecbd121be4860b$export$a9c23c6ac3fc3eca)((0, $97ecbd121be4860b$export$dc98b0b04f4c7758)(points, iScale.axis, min).lo, 0, pointCount - 1);\n    if (maxDefined) count = (0, $97ecbd121be4860b$export$a9c23c6ac3fc3eca)((0, $97ecbd121be4860b$export$dc98b0b04f4c7758)(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    else count = pointCount - start;\n    return {\n        start: start,\n        count: count\n    };\n}\nvar $1af551c56cb88ebf$export$be17f937e9aa7533 = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            $1af551c56cb88ebf$var$cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data: _data, indexAxis: indexAxis } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if ((0, $97ecbd121be4860b$export$407448d2b89b1813)([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') return;\n            if (!meta.controller.supportsDecimation) return;\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') return;\n            if (chart.options.parsing) return;\n            let { start: start, count: count } = $1af551c56cb88ebf$var$getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                $1af551c56cb88ebf$var$cleanDecimatedDataset(dataset);\n                return;\n            }\n            if ((0, $97ecbd121be4860b$export$342063e11d6c3cad)(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = $1af551c56cb88ebf$var$lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = $1af551c56cb88ebf$var$minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        $1af551c56cb88ebf$var$cleanDecimatedData(chart);\n    }\n};\nfunction $1af551c56cb88ebf$var$_segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start: start, end: end } = segment;\n        end = $1af551c56cb88ebf$var$_findSegmentEnd(start, end, points);\n        const bounds = $1af551c56cb88ebf$var$_getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = (0, $97ecbd121be4860b$export$7a38258bbe170828)(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = $1af551c56cb88ebf$var$_getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = (0, $97ecbd121be4860b$export$28f7fcd39efa255)(segment, points, subBounds);\n            for (const fillSource of fillSources)parts.push({\n                source: fillSource,\n                target: tgt,\n                start: {\n                    [property]: $1af551c56cb88ebf$var$_getEdge(bounds, subBounds, 'start', Math.max)\n                },\n                end: {\n                    [property]: $1af551c56cb88ebf$var$_getEdge(bounds, subBounds, 'end', Math.min)\n                }\n            });\n        }\n    }\n    return parts;\n}\nfunction $1af551c56cb88ebf$var$_getBounds(property, first, last, loop) {\n    if (loop) return;\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = (0, $97ecbd121be4860b$export$3d12bd131bb975d1)(start);\n        end = (0, $97ecbd121be4860b$export$3d12bd131bb975d1)(end);\n    }\n    return {\n        property: property,\n        start: start,\n        end: end\n    };\n}\nfunction $1af551c56cb88ebf$var$_pointsFromSegments(boundary, line) {\n    const { x: x = null, y: y = null } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start: start, end: end })=>{\n        end = $1af551c56cb88ebf$var$_findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y: y\n            });\n            points.push({\n                x: last.x,\n                y: y\n            });\n        } else if (x !== null) {\n            points.push({\n                x: x,\n                y: first.y\n            });\n            points.push({\n                x: x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction $1af551c56cb88ebf$var$_findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) break;\n    }\n    return end;\n}\nfunction $1af551c56cb88ebf$var$_getEdge(a, b, prop, fn) {\n    if (a && b) return fn(a[prop], b[prop]);\n    return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction $1af551c56cb88ebf$var$_createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if ((0, $97ecbd121be4860b$export$8b22cf2602fb60ce)(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else points = $1af551c56cb88ebf$var$_pointsFromSegments(boundary, line);\n    return points.length ? new $1af551c56cb88ebf$export$55e463fa7bcd3469({\n        points: points,\n        options: {\n            tension: 0\n        },\n        _loop: _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction $1af551c56cb88ebf$var$_shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\nfunction $1af551c56cb88ebf$var$_resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) return fill;\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!(0, $97ecbd121be4860b$export$39b482c5e57630a8)(fill)) return fill;\n        target = sources[fill];\n        if (!target) return false;\n        if (target.visible) return fill;\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\nfunction $1af551c56cb88ebf$var$_decodeFill(line, index, count) {\n    const fill = $1af551c56cb88ebf$var$parseFillOption(line);\n    if ((0, $97ecbd121be4860b$export$23f2a1d2818174ef)(fill)) return isNaN(fill.value) ? false : fill;\n    let target = parseFloat(fill);\n    if ((0, $97ecbd121be4860b$export$39b482c5e57630a8)(target) && Math.floor(target) === target) return $1af551c56cb88ebf$var$decodeTargetIndex(fill[0], index, target, count);\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction $1af551c56cb88ebf$var$decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') target = index + target;\n    if (target === index || target < 0 || target >= count) return false;\n    return target;\n}\nfunction $1af551c56cb88ebf$var$_getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') pixel = scale.bottom;\n    else if (fill === 'end') pixel = scale.top;\n    else if ((0, $97ecbd121be4860b$export$23f2a1d2818174ef)(fill)) pixel = scale.getPixelForValue(fill.value);\n    else if (scale.getBasePixel) pixel = scale.getBasePixel();\n    return pixel;\n}\nfunction $1af551c56cb88ebf$var$_getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') value = startValue;\n    else if (fill === 'end') value = scale.options.reverse ? scale.min : scale.max;\n    else if ((0, $97ecbd121be4860b$export$23f2a1d2818174ef)(fill)) value = fill.value;\n    else value = scale.getBaseValue();\n    return value;\n}\nfunction $1af551c56cb88ebf$var$parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = (0, $97ecbd121be4860b$export$90a7f3efeed30595)(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) fill = !!options.backgroundColor;\n    if (fill === false || fill === null) return false;\n    if (fill === true) return 'origin';\n    return fill;\n}\nfunction $1af551c56cb88ebf$var$_buildStackLine(source) {\n    const { scale: scale, index: index, line: line } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = $1af551c56cb88ebf$var$getLinesBelow(scale, index);\n    linesBelow.push($1af551c56cb88ebf$var$_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++)$1af551c56cb88ebf$var$addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n    return new $1af551c56cb88ebf$export$55e463fa7bcd3469({\n        points: points,\n        options: {}\n    });\n}\nfunction $1af551c56cb88ebf$var$getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) break;\n        if (!meta.hidden) below.unshift(meta.dataset);\n    }\n    return below;\n}\nfunction $1af551c56cb88ebf$var$addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first: first, last: last, point: point } = $1af551c56cb88ebf$var$findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) continue;\n        if (first) postponed.unshift(point);\n        else {\n            points.push(point);\n            if (!last) break;\n        }\n    }\n    points.push(...postponed);\n}\nfunction $1af551c56cb88ebf$var$findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) return {};\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if ((0, $97ecbd121be4860b$export$21579262ef46735b)(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first: first,\n        last: last,\n        point: point\n    };\n}\nclass $1af551c56cb88ebf$var$simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x: x, y: y, radius: radius } = this;\n        bounds = bounds || {\n            start: 0,\n            end: (0, $97ecbd121be4860b$export$971d5caa766a69d7)\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x: x, y: y, radius: radius } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle: angle\n        };\n    }\n}\nfunction $1af551c56cb88ebf$var$_getTarget(source) {\n    const { chart: chart, fill: fill, line: line } = source;\n    if ((0, $97ecbd121be4860b$export$39b482c5e57630a8)(fill)) return $1af551c56cb88ebf$var$getLineByIndex(chart, fill);\n    if (fill === 'stack') return $1af551c56cb88ebf$var$_buildStackLine(source);\n    if (fill === 'shape') return true;\n    const boundary = $1af551c56cb88ebf$var$computeBoundary(source);\n    if (boundary instanceof $1af551c56cb88ebf$var$simpleArc) return boundary;\n    return $1af551c56cb88ebf$var$_createBoundaryLine(boundary, line);\n}\nfunction $1af551c56cb88ebf$var$getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction $1af551c56cb88ebf$var$computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) return $1af551c56cb88ebf$var$computeCircularBoundary(source);\n    return $1af551c56cb88ebf$var$computeLinearBoundary(source);\n}\nfunction $1af551c56cb88ebf$var$computeLinearBoundary(source) {\n    const { scale: scale = {}, fill: fill } = source;\n    const pixel = $1af551c56cb88ebf$var$_getTargetPixel(fill, scale);\n    if ((0, $97ecbd121be4860b$export$39b482c5e57630a8)(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction $1af551c56cb88ebf$var$computeCircularBoundary(source) {\n    const { scale: scale, fill: fill } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = $1af551c56cb88ebf$var$_getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new $1af551c56cb88ebf$var$simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i)target.push(scale.getPointPositionForValue(i, value));\n    return target;\n}\nfunction $1af551c56cb88ebf$var$_drawfill(ctx, source, area) {\n    const target = $1af551c56cb88ebf$var$_getTarget(source);\n    const { line: line, scale: scale, axis: axis } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above: above = color, below: below = color } = fillOption || {};\n    if (target && line.points.length) {\n        (0, $97ecbd121be4860b$export$61196ced6d74a310)(ctx, area);\n        $1af551c56cb88ebf$var$doFill(ctx, {\n            line: line,\n            target: target,\n            above: above,\n            below: below,\n            area: area,\n            scale: scale,\n            axis: axis\n        });\n        (0, $97ecbd121be4860b$export$a07804094c3ecf2d)(ctx);\n    }\n}\nfunction $1af551c56cb88ebf$var$doFill(ctx, cfg) {\n    const { line: line, target: target, above: above, below: below, area: area, scale: scale } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        $1af551c56cb88ebf$var$clipVertical(ctx, target, area.top);\n        $1af551c56cb88ebf$var$fill(ctx, {\n            line: line,\n            target: target,\n            color: above,\n            scale: scale,\n            property: property\n        });\n        ctx.restore();\n        ctx.save();\n        $1af551c56cb88ebf$var$clipVertical(ctx, target, area.bottom);\n    }\n    $1af551c56cb88ebf$var$fill(ctx, {\n        line: line,\n        target: target,\n        color: below,\n        scale: scale,\n        property: property\n    });\n    ctx.restore();\n}\nfunction $1af551c56cb88ebf$var$clipVertical(ctx, target, clipY) {\n    const { segments: segments, points: points } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start: start, end: end } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[$1af551c56cb88ebf$var$_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) ctx.closePath();\n        else ctx.lineTo(lastPoint.x, clipY);\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction $1af551c56cb88ebf$var$fill(ctx, cfg) {\n    const { line: line, target: target, property: property, color: color, scale: scale } = cfg;\n    const segments = $1af551c56cb88ebf$var$_segments(line, target, property);\n    for (const { source: src, target: tgt, start: start, end: end } of segments){\n        const { style: { backgroundColor: backgroundColor = color } = {} } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        $1af551c56cb88ebf$var$clipBounds(ctx, scale, notShape && $1af551c56cb88ebf$var$_getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) ctx.closePath();\n            else $1af551c56cb88ebf$var$interpolatedLineTo(ctx, target, end, property);\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) $1af551c56cb88ebf$var$interpolatedLineTo(ctx, target, start, property);\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction $1af551c56cb88ebf$var$clipBounds(ctx, scale, bounds) {\n    const { top: top, bottom: bottom } = scale.chart.chartArea;\n    const { property: property, start: start, end: end } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction $1af551c56cb88ebf$var$interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n}\nvar $1af551c56cb88ebf$export$d19ba4d812bed757 = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof $1af551c56cb88ebf$export$55e463fa7bcd3469) source = {\n                visible: chart.isDatasetVisible(i),\n                index: i,\n                fill: $1af551c56cb88ebf$var$_decodeFill(line, i, count),\n                chart: chart,\n                axis: meta.controller.options.indexAxis,\n                scale: meta.vScale,\n                line: line\n            };\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) continue;\n            source.fill = $1af551c56cb88ebf$var$_resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) continue;\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) $1af551c56cb88ebf$var$_drawfill(chart.ctx, source, area);\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') return;\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if ($1af551c56cb88ebf$var$_shouldApplyFill(source)) $1af551c56cb88ebf$var$_drawfill(chart.ctx, source, chart.chartArea);\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!$1af551c56cb88ebf$var$_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') return;\n        $1af551c56cb88ebf$var$_drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\nconst $1af551c56cb88ebf$var$getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight: boxHeight = fontSize, boxWidth: boxWidth = fontSize } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth: boxWidth,\n        boxHeight: boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst $1af551c56cb88ebf$var$itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass $1af551c56cb88ebf$var$Legend extends $1af551c56cb88ebf$export$db77ccec0bb4ccac {\n    constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n        this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = (0, $97ecbd121be4860b$export$e7094788287c5e9b)(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        if (labelOpts.sort) legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        if (this.options.reverse) legendItems.reverse();\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options: options, ctx: ctx } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = (0, $97ecbd121be4860b$export$c4ce752e73470fba)(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth: boxWidth, itemHeight: itemHeight } = $1af551c56cb88ebf$var$getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n    _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx: ctx, maxWidth: maxWidth, options: { labels: { padding: padding } } } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top: top,\n                row: row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx: ctx, maxHeight: maxHeight, options: { labels: { padding: padding } } } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left: left,\n                top: currentColHeight,\n                col: col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) return;\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes, options: { align: align, labels: { padding: padding }, rtl: rtl } } = this;\n        const rtlHelper = (0, $97ecbd121be4860b$export$91c6e00c14e7e6fd)(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = (0, $97ecbd121be4860b$export$25ce5a424b770e84)(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = (0, $97ecbd121be4860b$export$25ce5a424b770e84)(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = (0, $97ecbd121be4860b$export$25ce5a424b770e84)(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = (0, $97ecbd121be4860b$export$25ce5a424b770e84)(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            (0, $97ecbd121be4860b$export$61196ced6d74a310)(ctx, this);\n            this._draw();\n            (0, $97ecbd121be4860b$export$a07804094c3ecf2d)(ctx);\n        }\n    }\n    _draw() {\n        const { options: opts, columnSizes: columnSizes, lineWidths: lineWidths, ctx: ctx } = this;\n        const { align: align, labels: labelOpts } = opts;\n        const defaultColor = (0, $97ecbd121be4860b$export$4368d992c4eafac0).color;\n        const rtlHelper = (0, $97ecbd121be4860b$export$91c6e00c14e7e6fd)(opts.rtl, this.left, this.width);\n        const labelFont = (0, $97ecbd121be4860b$export$c4ce752e73470fba)(labelOpts.font);\n        const { color: fontColor, padding: padding } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth: boxWidth, boxHeight: boxHeight, itemHeight: itemHeight } = $1af551c56cb88ebf$var$getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) return;\n            ctx.save();\n            const lineWidth = (0, $97ecbd121be4860b$export$90a7f3efeed30595)(legendItem.lineWidth, 1);\n            ctx.fillStyle = (0, $97ecbd121be4860b$export$90a7f3efeed30595)(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = (0, $97ecbd121be4860b$export$90a7f3efeed30595)(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = (0, $97ecbd121be4860b$export$90a7f3efeed30595)(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = (0, $97ecbd121be4860b$export$90a7f3efeed30595)(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = (0, $97ecbd121be4860b$export$90a7f3efeed30595)(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash((0, $97ecbd121be4860b$export$90a7f3efeed30595)(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                (0, $97ecbd121be4860b$export$158acd800e1ef08b)(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = (0, $97ecbd121be4860b$export$9fa96a7d116ea3ce)(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) (0, $97ecbd121be4860b$export$d66dc83d8cfc8dd)(ctx, {\n                    x: xBoxLeft,\n                    y: yBoxTop,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                else ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                ctx.fill();\n                if (lineWidth !== 0) ctx.stroke();\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            (0, $97ecbd121be4860b$export$3a1a48c8f6ef640e)(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) cursor = {\n            x: (0, $97ecbd121be4860b$export$25ce5a424b770e84)(align, this.left + padding, this.right - lineWidths[0]),\n            y: this.top + padding + titleHeight,\n            line: 0\n        };\n        else cursor = {\n            x: this.left + padding,\n            y: (0, $97ecbd121be4860b$export$25ce5a424b770e84)(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n            line: 0\n        };\n        (0, $97ecbd121be4860b$export$9d398bebfec1c039)(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor || fontColor;\n            ctx.fillStyle = legendItem.fontColor || fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = (0, $97ecbd121be4860b$export$25ce5a424b770e84)(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = (0, $97ecbd121be4860b$export$25ce5a424b770e84)(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = (0, $97ecbd121be4860b$export$890c4ad488842ce7)(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) cursor.x += width + padding;\n            else cursor.y += lineHeight;\n        });\n        (0, $97ecbd121be4860b$export$24baa2b76016ce0e)(this.ctx, opts.textDirection);\n    }\n    drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = (0, $97ecbd121be4860b$export$c4ce752e73470fba)(titleOpts.font);\n        const titlePadding = (0, $97ecbd121be4860b$export$3466f893ebf79586)(titleOpts.padding);\n        if (!titleOpts.display) return;\n        const rtlHelper = (0, $97ecbd121be4860b$export$91c6e00c14e7e6fd)(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = (0, $97ecbd121be4860b$export$25ce5a424b770e84)(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + (0, $97ecbd121be4860b$export$25ce5a424b770e84)(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = (0, $97ecbd121be4860b$export$25ce5a424b770e84)(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign((0, $97ecbd121be4860b$export$db202ddc8be9136)(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        (0, $97ecbd121be4860b$export$3a1a48c8f6ef640e)(ctx, titleOpts.text, x, y, titleFont);\n    }\n    _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = (0, $97ecbd121be4860b$export$c4ce752e73470fba)(titleOpts.font);\n        const titlePadding = (0, $97ecbd121be4860b$export$3466f893ebf79586)(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n    _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if ((0, $97ecbd121be4860b$export$21579262ef46735b)(x, this.left, this.right) && (0, $97ecbd121be4860b$export$21579262ef46735b)(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if ((0, $97ecbd121be4860b$export$21579262ef46735b)(x, hitBox.left, hitBox.left + hitBox.width) && (0, $97ecbd121be4860b$export$21579262ef46735b)(y, hitBox.top, hitBox.top + hitBox.height)) return this.legendItems[i];\n            }\n        }\n        return null;\n    }\n    handleEvent(e) {\n        const opts = this.options;\n        if (!$1af551c56cb88ebf$var$isListened(e.type, opts)) return;\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = $1af551c56cb88ebf$var$itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) (0, $97ecbd121be4860b$export$e7094788287c5e9b)(opts.onLeave, [\n                e,\n                previous,\n                this\n            ], this);\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) (0, $97ecbd121be4860b$export$e7094788287c5e9b)(opts.onHover, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        } else if (hoveredItem) (0, $97ecbd121be4860b$export$e7094788287c5e9b)(opts.onClick, [\n            e,\n            hoveredItem,\n            this\n        ], this);\n    }\n}\nfunction $1af551c56cb88ebf$var$isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) return true;\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) return true;\n    return false;\n}\nvar $1af551c56cb88ebf$export$ed247974535929c7 = {\n    id: 'legend',\n    _element: $1af551c56cb88ebf$var$Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new $1af551c56cb88ebf$var$Legend({\n            ctx: chart.ctx,\n            options: options,\n            chart: chart\n        });\n        $1af551c56cb88ebf$export$1ecca0613f5e56d2.configure(chart, legend, options);\n        $1af551c56cb88ebf$export$1ecca0613f5e56d2.addBox(chart, legend);\n    },\n    stop (chart) {\n        $1af551c56cb88ebf$export$1ecca0613f5e56d2.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        $1af551c56cb88ebf$export$1ecca0613f5e56d2.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) chart.legend.handleEvent(args.event);\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle: usePointStyle, pointStyle: pointStyle, textAlign: textAlign, color: color } } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = (0, $97ecbd121be4860b$export$3466f893ebf79586)(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: 0,\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\nclass $1af551c56cb88ebf$var$Title extends $1af551c56cb88ebf$export$db77ccec0bb4ccac {\n    constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = (0, $97ecbd121be4860b$export$8b22cf2602fb60ce)(opts.text) ? opts.text.length : 1;\n        this._padding = (0, $97ecbd121be4860b$export$3466f893ebf79586)(opts.padding);\n        const textSize = lineCount * (0, $97ecbd121be4860b$export$c4ce752e73470fba)(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) this.height = textSize;\n        else this.width = textSize;\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top: top, left: left, bottom: bottom, right: right, options: options } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = (0, $97ecbd121be4860b$export$25ce5a424b770e84)(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = (0, $97ecbd121be4860b$export$25ce5a424b770e84)(align, bottom, top);\n                rotation = (0, $97ecbd121be4860b$export$56c0d5a1e737357d) * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = (0, $97ecbd121be4860b$export$25ce5a424b770e84)(align, top, bottom);\n                rotation = (0, $97ecbd121be4860b$export$56c0d5a1e737357d) * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX: titleX,\n            titleY: titleY,\n            maxWidth: maxWidth,\n            rotation: rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) return;\n        const fontOpts = (0, $97ecbd121be4860b$export$c4ce752e73470fba)(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX: titleX, titleY: titleY, maxWidth: maxWidth, rotation: rotation } = this._drawArgs(offset);\n        (0, $97ecbd121be4860b$export$3a1a48c8f6ef640e)(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth: maxWidth,\n            rotation: rotation,\n            textAlign: (0, $97ecbd121be4860b$export$db202ddc8be9136)(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction $1af551c56cb88ebf$var$createTitle(chart, titleOpts) {\n    const title = new $1af551c56cb88ebf$var$Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart: chart\n    });\n    $1af551c56cb88ebf$export$1ecca0613f5e56d2.configure(chart, title, titleOpts);\n    $1af551c56cb88ebf$export$1ecca0613f5e56d2.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar $1af551c56cb88ebf$export$f99233281efd08a0 = {\n    id: 'title',\n    _element: $1af551c56cb88ebf$var$Title,\n    start (chart, _args, options) {\n        $1af551c56cb88ebf$var$createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        $1af551c56cb88ebf$export$1ecca0613f5e56d2.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        $1af551c56cb88ebf$export$1ecca0613f5e56d2.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\nconst $1af551c56cb88ebf$var$map = new WeakMap();\nvar $1af551c56cb88ebf$export$d5c56664638992a4 = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new $1af551c56cb88ebf$var$Title({\n            ctx: chart.ctx,\n            options: options,\n            chart: chart\n        });\n        $1af551c56cb88ebf$export$1ecca0613f5e56d2.configure(chart, title, options);\n        $1af551c56cb88ebf$export$1ecca0613f5e56d2.addBox(chart, title);\n        $1af551c56cb88ebf$var$map.set(chart, title);\n    },\n    stop (chart) {\n        $1af551c56cb88ebf$export$1ecca0613f5e56d2.removeBox(chart, $1af551c56cb88ebf$var$map.get(chart));\n        $1af551c56cb88ebf$var$map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = $1af551c56cb88ebf$var$map.get(chart);\n        $1af551c56cb88ebf$export$1ecca0613f5e56d2.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\nconst $1af551c56cb88ebf$var$positioners = {\n    average (items) {\n        if (!items.length) return false;\n        let i, len;\n        let x = 0;\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                x += pos.x;\n                y += pos.y;\n                ++count;\n            }\n        }\n        return {\n            x: x / count,\n            y: y / count\n        };\n    },\n    nearest (items, eventPosition) {\n        if (!items.length) return false;\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = (0, $97ecbd121be4860b$export$53a70dd1ebbae346)(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x: x,\n            y: y\n        };\n    }\n};\nfunction $1af551c56cb88ebf$var$pushOrConcat(base, toPush) {\n    if (toPush) {\n        if ((0, $97ecbd121be4860b$export$8b22cf2602fb60ce)(toPush)) Array.prototype.push.apply(base, toPush);\n        else base.push(toPush);\n    }\n    return base;\n}\nfunction $1af551c56cb88ebf$var$splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) return str.split('\\n');\n    return str;\n}\nfunction $1af551c56cb88ebf$var$createTooltipItem(chart, item) {\n    const { element: element, datasetIndex: datasetIndex, index: index } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label: label, value: value } = controller.getLabelAndValue(index);\n    return {\n        chart: chart,\n        label: label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex: datasetIndex,\n        element: element\n    };\n}\nfunction $1af551c56cb88ebf$var$getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body: body, footer: footer, title: title } = tooltip;\n    const { boxWidth: boxWidth, boxHeight: boxHeight } = options;\n    const bodyFont = (0, $97ecbd121be4860b$export$c4ce752e73470fba)(options.bodyFont);\n    const titleFont = (0, $97ecbd121be4860b$export$c4ce752e73470fba)(options.titleFont);\n    const footerFont = (0, $97ecbd121be4860b$export$c4ce752e73470fba)(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = (0, $97ecbd121be4860b$export$3466f893ebf79586)(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    (0, $97ecbd121be4860b$export$3722cfe417b6ed86)(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    (0, $97ecbd121be4860b$export$3722cfe417b6ed86)(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    (0, $97ecbd121be4860b$export$3722cfe417b6ed86)(body, (bodyItem)=>{\n        (0, $97ecbd121be4860b$export$3722cfe417b6ed86)(bodyItem.before, maxLineWidth);\n        (0, $97ecbd121be4860b$export$3722cfe417b6ed86)(bodyItem.lines, maxLineWidth);\n        (0, $97ecbd121be4860b$export$3722cfe417b6ed86)(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    (0, $97ecbd121be4860b$export$3722cfe417b6ed86)(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width: width,\n        height: height\n    };\n}\nfunction $1af551c56cb88ebf$var$determineYAlign(chart, size) {\n    const { y: y, height: height } = size;\n    if (y < height / 2) return 'top';\n    else if (y > chart.height - height / 2) return 'bottom';\n    return 'center';\n}\nfunction $1af551c56cb88ebf$var$doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x: x, width: width } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) return true;\n    if (xAlign === 'right' && x - width - caret < 0) return true;\n}\nfunction $1af551c56cb88ebf$var$determineXAlign(chart, options, size, yAlign) {\n    const { x: x, width: width } = size;\n    const { width: chartWidth, chartArea: { left: left, right: right } } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    else if (x <= width / 2) xAlign = 'left';\n    else if (x >= chartWidth - width / 2) xAlign = 'right';\n    if ($1af551c56cb88ebf$var$doesNotFitWithAlign(xAlign, chart, options, size)) xAlign = 'center';\n    return xAlign;\n}\nfunction $1af551c56cb88ebf$var$determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || $1af551c56cb88ebf$var$determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || $1af551c56cb88ebf$var$determineXAlign(chart, options, size, yAlign),\n        yAlign: yAlign\n    };\n}\nfunction $1af551c56cb88ebf$var$alignX(size, xAlign) {\n    let { x: x, width: width } = size;\n    if (xAlign === 'right') x -= width;\n    else if (xAlign === 'center') x -= width / 2;\n    return x;\n}\nfunction $1af551c56cb88ebf$var$alignY(size, yAlign, paddingAndSize) {\n    let { y: y, height: height } = size;\n    if (yAlign === 'top') y += paddingAndSize;\n    else if (yAlign === 'bottom') y -= height + paddingAndSize;\n    else y -= height / 2;\n    return y;\n}\nfunction $1af551c56cb88ebf$var$getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize: caretSize, caretPadding: caretPadding, cornerRadius: cornerRadius } = options;\n    const { xAlign: xAlign, yAlign: yAlign } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft: topLeft, topRight: topRight, bottomLeft: bottomLeft, bottomRight: bottomRight } = (0, $97ecbd121be4860b$export$9fa96a7d116ea3ce)(cornerRadius);\n    let x = $1af551c56cb88ebf$var$alignX(size, xAlign);\n    const y = $1af551c56cb88ebf$var$alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') x += paddingAndSize;\n        else if (xAlign === 'right') x -= paddingAndSize;\n    } else if (xAlign === 'left') x -= Math.max(topLeft, bottomLeft) + caretSize;\n    else if (xAlign === 'right') x += Math.max(topRight, bottomRight) + caretSize;\n    return {\n        x: (0, $97ecbd121be4860b$export$a9c23c6ac3fc3eca)(x, 0, chart.width - size.width),\n        y: (0, $97ecbd121be4860b$export$a9c23c6ac3fc3eca)(y, 0, chart.height - size.height)\n    };\n}\nfunction $1af551c56cb88ebf$var$getAlignedX(tooltip, align, options) {\n    const padding = (0, $97ecbd121be4860b$export$3466f893ebf79586)(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\nfunction $1af551c56cb88ebf$var$getBeforeAfterBodyLines(callback) {\n    return $1af551c56cb88ebf$var$pushOrConcat([], $1af551c56cb88ebf$var$splitNewlines(callback));\n}\nfunction $1af551c56cb88ebf$var$createTooltipContext(parent, tooltip, tooltipItems) {\n    return (0, $97ecbd121be4860b$export$dda1d9f60106f0e9)(parent, {\n        tooltip: tooltip,\n        tooltipItems: tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction $1af551c56cb88ebf$var$overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nclass $1af551c56cb88ebf$var$Tooltip extends $1af551c56cb88ebf$export$db77ccec0bb4ccac {\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart || config._chart;\n        this._chart = this.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n    _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) return cached;\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new $1af551c56cb88ebf$export$8ab227dac26677d(this.chart, opts);\n        if (opts._cacheable) this._cachedAnimations = Object.freeze(animations);\n        return animations;\n    }\n    getContext() {\n        return this.$context || (this.$context = $1af551c56cb88ebf$var$createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks: callbacks } = options;\n        const beforeTitle = callbacks.beforeTitle.apply(this, [\n            context\n        ]);\n        const title = callbacks.title.apply(this, [\n            context\n        ]);\n        const afterTitle = callbacks.afterTitle.apply(this, [\n            context\n        ]);\n        let lines = [];\n        lines = $1af551c56cb88ebf$var$pushOrConcat(lines, $1af551c56cb88ebf$var$splitNewlines(beforeTitle));\n        lines = $1af551c56cb88ebf$var$pushOrConcat(lines, $1af551c56cb88ebf$var$splitNewlines(title));\n        lines = $1af551c56cb88ebf$var$pushOrConcat(lines, $1af551c56cb88ebf$var$splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return $1af551c56cb88ebf$var$getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [\n            tooltipItems\n        ]));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks: callbacks } = options;\n        const bodyItems = [];\n        (0, $97ecbd121be4860b$export$3722cfe417b6ed86)(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = $1af551c56cb88ebf$var$overrideCallbacks(callbacks, context);\n            $1af551c56cb88ebf$var$pushOrConcat(bodyItem.before, $1af551c56cb88ebf$var$splitNewlines(scoped.beforeLabel.call(this, context)));\n            $1af551c56cb88ebf$var$pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n            $1af551c56cb88ebf$var$pushOrConcat(bodyItem.after, $1af551c56cb88ebf$var$splitNewlines(scoped.afterLabel.call(this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return $1af551c56cb88ebf$var$getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [\n            tooltipItems\n        ]));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks: callbacks } = options;\n        const beforeFooter = callbacks.beforeFooter.apply(this, [\n            tooltipItems\n        ]);\n        const footer = callbacks.footer.apply(this, [\n            tooltipItems\n        ]);\n        const afterFooter = callbacks.afterFooter.apply(this, [\n            tooltipItems\n        ]);\n        let lines = [];\n        lines = $1af551c56cb88ebf$var$pushOrConcat(lines, $1af551c56cb88ebf$var$splitNewlines(beforeFooter));\n        lines = $1af551c56cb88ebf$var$pushOrConcat(lines, $1af551c56cb88ebf$var$splitNewlines(footer));\n        lines = $1af551c56cb88ebf$var$pushOrConcat(lines, $1af551c56cb88ebf$var$splitNewlines(afterFooter));\n        return lines;\n    }\n    _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i)tooltipItems.push($1af551c56cb88ebf$var$createTooltipItem(this.chart, active[i]));\n        if (options.filter) tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        if (options.itemSort) tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        (0, $97ecbd121be4860b$export$3722cfe417b6ed86)(tooltipItems, (context)=>{\n            const scoped = $1af551c56cb88ebf$var$overrideCallbacks(options.callbacks, context);\n            labelColors.push(scoped.labelColor.call(this, context));\n            labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n            labelTextColors.push(scoped.labelTextColor.call(this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) properties = {\n                opacity: 0\n            };\n        } else {\n            const position = $1af551c56cb88ebf$var$positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = $1af551c56cb88ebf$var$getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = $1af551c56cb88ebf$var$determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = $1af551c56cb88ebf$var$getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) this._resolveAnimations().update(this, properties);\n        if (changed && options.external) options.external.call(this, {\n            chart: this.chart,\n            tooltip: this,\n            replay: replay\n        });\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign: xAlign, yAlign: yAlign } = this;\n        const { caretSize: caretSize, cornerRadius: cornerRadius } = options;\n        const { topLeft: topLeft, topRight: topRight, bottomLeft: bottomLeft, bottomRight: bottomRight } = (0, $97ecbd121be4860b$export$9fa96a7d116ea3ce)(cornerRadius);\n        const { x: ptX, y: ptY } = tooltipPoint;\n        const { width: width, height: height } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            else if (xAlign === 'right') x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            else x2 = this.caretX;\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1: x1,\n            x2: x2,\n            x3: x3,\n            y1: y1,\n            y2: y2,\n            y3: y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = (0, $97ecbd121be4860b$export$91c6e00c14e7e6fd)(options.rtl, this.x, this.width);\n            pt.x = $1af551c56cb88ebf$var$getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = (0, $97ecbd121be4860b$export$c4ce752e73470fba)(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) pt.y += options.titleMarginBottom - titleSpacing;\n            }\n        }\n    }\n    _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColors = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight: boxHeight, boxWidth: boxWidth, boxPadding: boxPadding } = options;\n        const bodyFont = (0, $97ecbd121be4860b$export$c4ce752e73470fba)(options.bodyFont);\n        const colorX = $1af551c56cb88ebf$var$getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            (0, $97ecbd121be4860b$export$1fbe638ecf81657e)(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColors.borderColor;\n            ctx.fillStyle = labelColors.backgroundColor;\n            (0, $97ecbd121be4860b$export$1fbe638ecf81657e)(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = (0, $97ecbd121be4860b$export$23f2a1d2818174ef)(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : labelColors.borderWidth || 1;\n            ctx.strokeStyle = labelColors.borderColor;\n            ctx.setLineDash(labelColors.borderDash || []);\n            ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n            const borderRadius = (0, $97ecbd121be4860b$export$9fa96a7d116ea3ce)(labelColors.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                (0, $97ecbd121be4860b$export$d66dc83d8cfc8dd)(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColors.backgroundColor;\n                ctx.beginPath();\n                (0, $97ecbd121be4860b$export$d66dc83d8cfc8dd)(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColors.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body: body } = this;\n        const { bodySpacing: bodySpacing, bodyAlign: bodyAlign, displayColors: displayColors, boxHeight: boxHeight, boxWidth: boxWidth, boxPadding: boxPadding } = options;\n        const bodyFont = (0, $97ecbd121be4860b$export$c4ce752e73470fba)(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = (0, $97ecbd121be4860b$export$91c6e00c14e7e6fd)(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = $1af551c56cb88ebf$var$getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        (0, $97ecbd121be4860b$export$3722cfe417b6ed86)(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            (0, $97ecbd121be4860b$export$3722cfe417b6ed86)(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            (0, $97ecbd121be4860b$export$3722cfe417b6ed86)(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        (0, $97ecbd121be4860b$export$3722cfe417b6ed86)(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = (0, $97ecbd121be4860b$export$91c6e00c14e7e6fd)(options.rtl, this.x, this.width);\n            pt.x = $1af551c56cb88ebf$var$getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = (0, $97ecbd121be4860b$export$c4ce752e73470fba)(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign: xAlign, yAlign: yAlign } = this;\n        const { x: x, y: y } = pt;\n        const { width: width, height: height } = tooltipSize;\n        const { topLeft: topLeft, topRight: topRight, bottomLeft: bottomLeft, bottomRight: bottomRight } = (0, $97ecbd121be4860b$export$9fa96a7d116ea3ce)(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') this.drawCaret(pt, ctx, tooltipSize, options);\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') this.drawCaret(pt, ctx, tooltipSize, options);\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') this.drawCaret(pt, ctx, tooltipSize, options);\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') this.drawCaret(pt, ctx, tooltipSize, options);\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) ctx.stroke();\n    }\n    _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = $1af551c56cb88ebf$var$positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) return;\n            const size = this._size = $1af551c56cb88ebf$var$getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = $1af551c56cb88ebf$var$determineAlignment(chart, options, positionAndSize);\n            const point = $1af551c56cb88ebf$var$getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n    _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) return;\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = (0, $97ecbd121be4860b$export$3466f893ebf79586)(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            (0, $97ecbd121be4860b$export$9d398bebfec1c039)(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            (0, $97ecbd121be4860b$export$24baa2b76016ce0e)(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n    getActiveElements() {\n        return this._active || [];\n    }\n    setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex: datasetIndex, index: index })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            return {\n                datasetIndex: datasetIndex,\n                element: meta.data[index],\n                index: index\n            };\n        });\n        const changed = !(0, $97ecbd121be4860b$export$f38c853ae54ed474)(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n    handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) return false;\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !(0, $97ecbd121be4860b$export$f38c853ae54ed474)(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n    _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') return [];\n        if (!inChartArea) return lastActive;\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) active.reverse();\n        return active;\n    }\n    _positionChanged(active, e) {\n        const { caretX: caretX, caretY: caretY, options: options } = this;\n        const position = $1af551c56cb88ebf$var$positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\n$1af551c56cb88ebf$var$Tooltip.positioners = $1af551c56cb88ebf$var$positioners;\nvar $1af551c56cb88ebf$export$28c660c63b792dea = {\n    id: 'tooltip',\n    _element: $1af551c56cb88ebf$var$Tooltip,\n    positioners: $1af551c56cb88ebf$var$positioners,\n    afterInit (chart, _args, options) {\n        if (options) chart.tooltip = new $1af551c56cb88ebf$var$Tooltip({\n            chart: chart,\n            options: options\n        });\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) chart.tooltip.initialize(options);\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) chart.tooltip.initialize(options);\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip: tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', args) === false) return;\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) args.changed = true;\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: {\n            beforeTitle: (0, $97ecbd121be4860b$export$cf2f7c5792f80b46),\n            title (tooltipItems) {\n                if (tooltipItems.length > 0) {\n                    const item = tooltipItems[0];\n                    const labels = item.chart.data.labels;\n                    const labelCount = labels ? labels.length : 0;\n                    if (this && this.options && this.options.mode === 'dataset') return item.dataset.label || '';\n                    else if (item.label) return item.label;\n                    else if (labelCount > 0 && item.dataIndex < labelCount) return labels[item.dataIndex];\n                }\n                return '';\n            },\n            afterTitle: (0, $97ecbd121be4860b$export$cf2f7c5792f80b46),\n            beforeBody: (0, $97ecbd121be4860b$export$cf2f7c5792f80b46),\n            beforeLabel: (0, $97ecbd121be4860b$export$cf2f7c5792f80b46),\n            label (tooltipItem) {\n                if (this && this.options && this.options.mode === 'dataset') return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n                let label = tooltipItem.dataset.label || '';\n                if (label) label += ': ';\n                const value = tooltipItem.formattedValue;\n                if (!(0, $97ecbd121be4860b$export$342063e11d6c3cad)(value)) label += value;\n                return label;\n            },\n            labelColor (tooltipItem) {\n                const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n                const options = meta.controller.getStyle(tooltipItem.dataIndex);\n                return {\n                    borderColor: options.borderColor,\n                    backgroundColor: options.backgroundColor,\n                    borderWidth: options.borderWidth,\n                    borderDash: options.borderDash,\n                    borderDashOffset: options.borderDashOffset,\n                    borderRadius: 0\n                };\n            },\n            labelTextColor () {\n                return this.options.bodyColor;\n            },\n            labelPointStyle (tooltipItem) {\n                const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n                const options = meta.controller.getStyle(tooltipItem.dataIndex);\n                return {\n                    pointStyle: options.pointStyle,\n                    rotation: options.rotation\n                };\n            },\n            afterLabel: (0, $97ecbd121be4860b$export$cf2f7c5792f80b46),\n            afterBody: (0, $97ecbd121be4860b$export$cf2f7c5792f80b46),\n            beforeFooter: (0, $97ecbd121be4860b$export$cf2f7c5792f80b46),\n            footer: (0, $97ecbd121be4860b$export$cf2f7c5792f80b46),\n            afterFooter: (0, $97ecbd121be4860b$export$cf2f7c5792f80b46)\n        }\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\nvar $1af551c56cb88ebf$export$8b3ca321c77fdea6 = /*#__PURE__*/ Object.freeze({\n    __proto__: null,\n    Decimation: $1af551c56cb88ebf$export$be17f937e9aa7533,\n    Filler: $1af551c56cb88ebf$export$d19ba4d812bed757,\n    Legend: $1af551c56cb88ebf$export$ed247974535929c7,\n    SubTitle: $1af551c56cb88ebf$export$d5c56664638992a4,\n    Title: $1af551c56cb88ebf$export$f99233281efd08a0,\n    Tooltip: $1af551c56cb88ebf$export$28c660c63b792dea\n});\nconst $1af551c56cb88ebf$var$addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index: index,\n            label: raw\n        });\n    } else if (isNaN(raw)) index = null;\n    return index;\n};\nfunction $1af551c56cb88ebf$var$findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) return $1af551c56cb88ebf$var$addIfString(labels, raw, index, addedLabels);\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst $1af551c56cb88ebf$var$validIndex = (index, max)=>index === null ? null : (0, $97ecbd121be4860b$export$a9c23c6ac3fc3eca)(Math.round(index), 0, max);\nclass $1af551c56cb88ebf$export$29e663ba4d09fe7 extends $1af551c56cb88ebf$export$d60cfc58d3c358b6 {\n    constructor(cfg){\n        super(cfg);\n        this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index: index, label: label } of added)if (labels[index] === label) labels.splice(index, 1);\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if ((0, $97ecbd121be4860b$export$342063e11d6c3cad)(raw)) return null;\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : $1af551c56cb88ebf$var$findOrAddLabel(labels, raw, (0, $97ecbd121be4860b$export$90a7f3efeed30595)(index, raw), this._addedLabels);\n        return $1af551c56cb88ebf$var$validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined: minDefined, maxDefined: maxDefined } = this.getUserBounds();\n        let { min: min, max: max } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) min = 0;\n            if (!maxDefined) max = this.getLabels().length - 1;\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++)ticks.push({\n            value: value\n        });\n        return ticks;\n    }\n    getLabelForValue(value) {\n        const labels = this.getLabels();\n        if (value >= 0 && value < labels.length) return labels[value];\n        return value;\n    }\n    configure() {\n        super.configure();\n        if (!this.isHorizontal()) this._reversePixels = !this._reversePixels;\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') value = this.parse(value);\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) return null;\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n$1af551c56cb88ebf$export$29e663ba4d09fe7.id = 'category';\n$1af551c56cb88ebf$export$29e663ba4d09fe7.defaults = {\n    ticks: {\n        callback: $1af551c56cb88ebf$export$29e663ba4d09fe7.prototype.getLabelForValue\n    }\n};\nfunction $1af551c56cb88ebf$var$generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds: bounds, step: step, min: min, max: max, precision: precision, count: count, maxTicks: maxTicks, maxDigits: maxDigits, includeBounds: includeBounds } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin, max: rmax } = dataRange;\n    const minDefined = !(0, $97ecbd121be4860b$export$342063e11d6c3cad)(min);\n    const maxDefined = !(0, $97ecbd121be4860b$export$342063e11d6c3cad)(max);\n    const countDefined = !(0, $97ecbd121be4860b$export$342063e11d6c3cad)(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = (0, $97ecbd121be4860b$export$b9a6b53f9be3734)((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) return [\n        {\n            value: rmin\n        },\n        {\n            value: rmax\n        }\n    ];\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) spacing = (0, $97ecbd121be4860b$export$b9a6b53f9be3734)(numSpaces * spacing / maxSpaces / unit) * unit;\n    if (!(0, $97ecbd121be4860b$export$342063e11d6c3cad)(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && (0, $97ecbd121be4860b$export$a05254e7c3aeba6e)((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if ((0, $97ecbd121be4860b$export$23ebac1979863676)(numSpaces, Math.round(numSpaces), spacing / 1000)) numSpaces = Math.round(numSpaces);\n        else numSpaces = Math.ceil(numSpaces);\n    }\n    const decimalPlaces = Math.max((0, $97ecbd121be4860b$export$91477dc880baac21)(spacing), (0, $97ecbd121be4860b$export$91477dc880baac21)(niceMin));\n    factor = Math.pow(10, (0, $97ecbd121be4860b$export$342063e11d6c3cad)(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) j++;\n            if ((0, $97ecbd121be4860b$export$23ebac1979863676)(Math.round((niceMin + j * spacing) * factor) / factor, min, $1af551c56cb88ebf$var$relativeLabelSize(min, minSpacing, generationOptions))) j++;\n        } else if (niceMin < min) j++;\n    }\n    for(; j < numSpaces; ++j)ticks.push({\n        value: Math.round((niceMin + j * spacing) * factor) / factor\n    });\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && (0, $97ecbd121be4860b$export$23ebac1979863676)(ticks[ticks.length - 1].value, max, $1af551c56cb88ebf$var$relativeLabelSize(max, minSpacing, generationOptions))) ticks[ticks.length - 1].value = max;\n        else ticks.push({\n            value: max\n        });\n    } else if (!maxDefined || niceMax === max) ticks.push({\n        value: niceMax\n    });\n    return ticks;\n}\nfunction $1af551c56cb88ebf$var$relativeLabelSize(value, minSpacing, { horizontal: horizontal, minRotation: minRotation }) {\n    const rad = (0, $97ecbd121be4860b$export$625550452a3fa3ec)(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass $1af551c56cb88ebf$var$LinearScaleBase extends $1af551c56cb88ebf$export$d60cfc58d3c358b6 {\n    constructor(cfg){\n        super(cfg);\n        this.start = undefined;\n        this.end = undefined;\n        this._startValue = undefined;\n        this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if ((0, $97ecbd121be4860b$export$342063e11d6c3cad)(raw)) return null;\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) return null;\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero: beginAtZero } = this.options;\n        const { minDefined: minDefined, maxDefined: maxDefined } = this.getUserBounds();\n        let { min: min, max: max } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = (0, $97ecbd121be4860b$export$2408f22a0fab9ae5)(min);\n            const maxSign = (0, $97ecbd121be4860b$export$2408f22a0fab9ae5)(max);\n            if (minSign < 0 && maxSign < 0) setMax(0);\n            else if (minSign > 0 && maxSign > 0) setMin(0);\n        }\n        if (min === max) {\n            let offset = 1;\n            if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) offset = Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) setMin(min - offset);\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit: maxTicksLimit, stepSize: stepSize } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) maxTicks = Math.min(maxTicksLimit, maxTicks);\n        return maxTicks;\n    }\n    computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks: maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = $1af551c56cb88ebf$var$generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') (0, $97ecbd121be4860b$export$a33b77bbdbb8366c)(ticks, this, 'value');\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n    configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return (0, $97ecbd121be4860b$export$ae1af26003f05816)(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\nclass $1af551c56cb88ebf$export$e7f4e5e8656f0b93 extends $1af551c56cb88ebf$var$LinearScaleBase {\n    determineDataLimits() {\n        const { min: min, max: max } = this.getMinMax(true);\n        this.min = (0, $97ecbd121be4860b$export$39b482c5e57630a8)(min) ? min : 0;\n        this.max = (0, $97ecbd121be4860b$export$39b482c5e57630a8)(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n    computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = (0, $97ecbd121be4860b$export$625550452a3fa3ec)(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n$1af551c56cb88ebf$export$e7f4e5e8656f0b93.id = 'linear';\n$1af551c56cb88ebf$export$e7f4e5e8656f0b93.defaults = {\n    ticks: {\n        callback: $1af551c56cb88ebf$export$27c7467594ef87bd.formatters.numeric\n    }\n};\nfunction $1af551c56cb88ebf$var$isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, Math.floor((0, $97ecbd121be4860b$export$df995fae86a55f06)(tickVal)));\n    return remain === 1;\n}\nfunction $1af551c56cb88ebf$var$generateTicks(generationOptions, dataRange) {\n    const endExp = Math.floor((0, $97ecbd121be4860b$export$df995fae86a55f06)(dataRange.max));\n    const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n    const ticks = [];\n    let tickVal = (0, $97ecbd121be4860b$export$ef35774e6d314e91)(generationOptions.min, Math.pow(10, Math.floor((0, $97ecbd121be4860b$export$df995fae86a55f06)(dataRange.min))));\n    let exp = Math.floor((0, $97ecbd121be4860b$export$df995fae86a55f06)(tickVal));\n    let significand = Math.floor(tickVal / Math.pow(10, exp));\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    do {\n        ticks.push({\n            value: tickVal,\n            major: $1af551c56cb88ebf$var$isMajor(tickVal)\n        });\n        ++significand;\n        if (significand === 10) {\n            significand = 1;\n            ++exp;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n    }while (exp < endExp || exp === endExp && significand < endSignificand);\n    const lastTick = (0, $97ecbd121be4860b$export$ef35774e6d314e91)(generationOptions.max, tickVal);\n    ticks.push({\n        value: lastTick,\n        major: $1af551c56cb88ebf$var$isMajor(tickVal)\n    });\n    return ticks;\n}\nclass $1af551c56cb88ebf$export$85295eaf7cb3ac3e extends $1af551c56cb88ebf$export$d60cfc58d3c358b6 {\n    constructor(cfg){\n        super(cfg);\n        this.start = undefined;\n        this.end = undefined;\n        this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = $1af551c56cb88ebf$var$LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return (0, $97ecbd121be4860b$export$39b482c5e57630a8)(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min: min, max: max } = this.getMinMax(true);\n        this.min = (0, $97ecbd121be4860b$export$39b482c5e57630a8)(min) ? Math.max(0, min) : null;\n        this.max = (0, $97ecbd121be4860b$export$39b482c5e57630a8)(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) this._zero = true;\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined: minDefined, maxDefined: maxDefined } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        const exp = (v, m)=>Math.pow(10, Math.floor((0, $97ecbd121be4860b$export$df995fae86a55f06)(v)) + m);\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(exp(min, -1));\n                setMax(exp(max, 1));\n            }\n        }\n        if (min <= 0) setMin(exp(max, -1));\n        if (max <= 0) setMax(exp(min, 1));\n        if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) setMin(exp(min, -1));\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = $1af551c56cb88ebf$var$generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') (0, $97ecbd121be4860b$export$a33b77bbdbb8366c)(ticks, this, 'value');\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return value === undefined ? '0' : (0, $97ecbd121be4860b$export$ae1af26003f05816)(value, this.chart.options.locale, this.options.ticks.format);\n    }\n    configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = (0, $97ecbd121be4860b$export$df995fae86a55f06)(start);\n        this._valueRange = (0, $97ecbd121be4860b$export$df995fae86a55f06)(this.max) - (0, $97ecbd121be4860b$export$df995fae86a55f06)(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) value = this.min;\n        if (value === null || isNaN(value)) return NaN;\n        return this.getPixelForDecimal(value === this.min ? 0 : ((0, $97ecbd121be4860b$export$df995fae86a55f06)(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n$1af551c56cb88ebf$export$85295eaf7cb3ac3e.id = 'logarithmic';\n$1af551c56cb88ebf$export$85295eaf7cb3ac3e.defaults = {\n    ticks: {\n        callback: $1af551c56cb88ebf$export$27c7467594ef87bd.formatters.logarithmic,\n        major: {\n            enabled: true\n        }\n    }\n};\nfunction $1af551c56cb88ebf$var$getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = (0, $97ecbd121be4860b$export$3466f893ebf79586)(tickOpts.backdropPadding);\n        return (0, $97ecbd121be4860b$export$90a7f3efeed30595)(tickOpts.font && tickOpts.font.size, (0, $97ecbd121be4860b$export$4368d992c4eafac0).font.size) + padding.height;\n    }\n    return 0;\n}\nfunction $1af551c56cb88ebf$var$measureLabelSize(ctx, font, label) {\n    label = (0, $97ecbd121be4860b$export$8b22cf2602fb60ce)(label) ? label : [\n        label\n    ];\n    return {\n        w: (0, $97ecbd121be4860b$export$9f4f30ee63539e24)(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction $1af551c56cb88ebf$var$determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) return {\n        start: pos - size / 2,\n        end: pos + size / 2\n    };\n    else if (angle < min || angle > max) return {\n        start: pos - size,\n        end: pos\n    };\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\nfunction $1af551c56cb88ebf$var$fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? (0, $97ecbd121be4860b$export$56c0d5a1e737357d) / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = (0, $97ecbd121be4860b$export$c4ce752e73470fba)(opts.font);\n        const textSize = $1af551c56cb88ebf$var$measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = (0, $97ecbd121be4860b$export$3d12bd131bb975d1)(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round((0, $97ecbd121be4860b$export$d66501df72047452)(angleRadians));\n        const hLimits = $1af551c56cb88ebf$var$determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = $1af551c56cb88ebf$var$determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        $1af551c56cb88ebf$var$updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = $1af551c56cb88ebf$var$buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction $1af551c56cb88ebf$var$updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction $1af551c56cb88ebf$var$buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const extra = $1af551c56cb88ebf$var$getTickBackdropHeight(opts) / 2;\n    const outerDistance = scale.drawingArea;\n    const additionalAngle = opts.pointLabels.centerPointLabels ? (0, $97ecbd121be4860b$export$56c0d5a1e737357d) / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n        const angle = Math.round((0, $97ecbd121be4860b$export$d66501df72047452)((0, $97ecbd121be4860b$export$3d12bd131bb975d1)(pointLabelPosition.angle + (0, $97ecbd121be4860b$export$7f8ddf7c7c20b3cd))));\n        const size = labelSizes[i];\n        const y = $1af551c56cb88ebf$var$yForAngle(pointLabelPosition.y, size.h, angle);\n        const textAlign = $1af551c56cb88ebf$var$getTextAlignForAngle(angle);\n        const left = $1af551c56cb88ebf$var$leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n        items.push({\n            x: pointLabelPosition.x,\n            y: y,\n            textAlign: textAlign,\n            left: left,\n            top: y,\n            right: left + size.w,\n            bottom: y + size.h\n        });\n    }\n    return items;\n}\nfunction $1af551c56cb88ebf$var$getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) return 'center';\n    else if (angle < 180) return 'left';\n    return 'right';\n}\nfunction $1af551c56cb88ebf$var$leftForTextAlign(x, w, align) {\n    if (align === 'right') x -= w;\n    else if (align === 'center') x -= w / 2;\n    return x;\n}\nfunction $1af551c56cb88ebf$var$yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) y -= h / 2;\n    else if (angle > 270 || angle < 90) y -= h;\n    return y;\n}\nfunction $1af551c56cb88ebf$var$drawPointLabels(scale, labelCount) {\n    const { ctx: ctx, options: { pointLabels: pointLabels } } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        const plFont = (0, $97ecbd121be4860b$export$c4ce752e73470fba)(optsAtIndex.font);\n        const { x: x, y: y, textAlign: textAlign, left: left, top: top, right: right, bottom: bottom } = scale._pointLabelItems[i];\n        const { backdropColor: backdropColor } = optsAtIndex;\n        if (!(0, $97ecbd121be4860b$export$342063e11d6c3cad)(backdropColor)) {\n            const borderRadius = (0, $97ecbd121be4860b$export$9fa96a7d116ea3ce)(optsAtIndex.borderRadius);\n            const padding = (0, $97ecbd121be4860b$export$3466f893ebf79586)(optsAtIndex.backdropPadding);\n            ctx.fillStyle = backdropColor;\n            const backdropLeft = left - padding.left;\n            const backdropTop = top - padding.top;\n            const backdropWidth = right - left + padding.width;\n            const backdropHeight = bottom - top + padding.height;\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                (0, $97ecbd121be4860b$export$d66dc83d8cfc8dd)(ctx, {\n                    x: backdropLeft,\n                    y: backdropTop,\n                    w: backdropWidth,\n                    h: backdropHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n        (0, $97ecbd121be4860b$export$3a1a48c8f6ef640e)(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction $1af551c56cb88ebf$var$pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx: ctx } = scale;\n    if (circular) ctx.arc(scale.xCenter, scale.yCenter, radius, 0, (0, $97ecbd121be4860b$export$971d5caa766a69d7));\n    else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction $1af551c56cb88ebf$var$drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color: color, lineWidth: lineWidth } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) return;\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(gridLineOpts.borderDash);\n    ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n    ctx.beginPath();\n    $1af551c56cb88ebf$var$pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction $1af551c56cb88ebf$var$createPointLabelContext(parent, index, label) {\n    return (0, $97ecbd121be4860b$export$dda1d9f60106f0e9)(parent, {\n        label: label,\n        index: index,\n        type: 'pointLabel'\n    });\n}\nclass $1af551c56cb88ebf$export$cfafc36d95386d38 extends $1af551c56cb88ebf$var$LinearScaleBase {\n    constructor(cfg){\n        super(cfg);\n        this.xCenter = undefined;\n        this.yCenter = undefined;\n        this.drawingArea = undefined;\n        this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = (0, $97ecbd121be4860b$export$3466f893ebf79586)($1af551c56cb88ebf$var$getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min: min, max: max } = this.getMinMax(false);\n        this.min = (0, $97ecbd121be4860b$export$39b482c5e57630a8)(min) && !isNaN(min) ? min : 0;\n        this.max = (0, $97ecbd121be4860b$export$39b482c5e57630a8)(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n    computeTickLimit() {\n        return Math.ceil(this.drawingArea / $1af551c56cb88ebf$var$getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        $1af551c56cb88ebf$var$LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = (0, $97ecbd121be4860b$export$e7094788287c5e9b)(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) $1af551c56cb88ebf$var$fitWithPointLabels(this);\n        else this.setCenterPoint(0, 0, 0, 0);\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = (0, $97ecbd121be4860b$export$971d5caa766a69d7) / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return (0, $97ecbd121be4860b$export$3d12bd131bb975d1)(index * angleMultiplier + (0, $97ecbd121be4860b$export$625550452a3fa3ec)(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if ((0, $97ecbd121be4860b$export$342063e11d6c3cad)(value)) return NaN;\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) return (this.max - value) * scalingFactor;\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if ((0, $97ecbd121be4860b$export$342063e11d6c3cad)(distance)) return NaN;\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return $1af551c56cb88ebf$var$createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - (0, $97ecbd121be4860b$export$7f8ddf7c7c20b3cd) + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle: angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left: left, top: top, right: right, bottom: bottom } = this._pointLabelItems[index];\n        return {\n            left: left,\n            top: top,\n            right: right,\n            bottom: bottom\n        };\n    }\n    drawBackground() {\n        const { backgroundColor: backgroundColor, grid: { circular: circular } } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            $1af551c56cb88ebf$var$pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n    drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines: angleLines, grid: grid } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) $1af551c56cb88ebf$var$drawPointLabels(this, labelCount);\n        if (grid.display) this.ticks.forEach((tick, index)=>{\n            if (index !== 0) {\n                offset = this.getDistanceFromCenterForValue(tick.value);\n                const optsAtIndex = grid.setContext(this.getContext(index - 1));\n                $1af551c56cb88ebf$var$drawRadiusLine(this, optsAtIndex, offset, labelCount);\n            }\n        });\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color: color, lineWidth: lineWidth } = optsAtIndex;\n                if (!lineWidth || !color) continue;\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n    drawBorder() {}\n    drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) return;\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && !opts.reverse) return;\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = (0, $97ecbd121be4860b$export$c4ce752e73470fba)(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = (0, $97ecbd121be4860b$export$3466f893ebf79586)(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            (0, $97ecbd121be4860b$export$3a1a48c8f6ef640e)(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color\n            });\n        });\n        ctx.restore();\n    }\n    drawTitle() {}\n}\n$1af551c56cb88ebf$export$cfafc36d95386d38.id = 'radialLinear';\n$1af551c56cb88ebf$export$cfafc36d95386d38.defaults = {\n    display: true,\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n        display: true,\n        lineWidth: 1,\n        borderDash: [],\n        borderDashOffset: 0.0\n    },\n    grid: {\n        circular: false\n    },\n    startAngle: 0,\n    ticks: {\n        showLabelBackdrop: true,\n        callback: $1af551c56cb88ebf$export$27c7467594ef87bd.formatters.numeric\n    },\n    pointLabels: {\n        backdropColor: undefined,\n        backdropPadding: 2,\n        display: true,\n        font: {\n            size: 10\n        },\n        callback (label) {\n            return label;\n        },\n        padding: 5,\n        centerPointLabels: false\n    }\n};\n$1af551c56cb88ebf$export$cfafc36d95386d38.defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n};\n$1af551c56cb88ebf$export$cfafc36d95386d38.descriptors = {\n    angleLines: {\n        _fallback: 'grid'\n    }\n};\nconst $1af551c56cb88ebf$var$INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\nconst $1af551c56cb88ebf$var$UNITS = Object.keys($1af551c56cb88ebf$var$INTERVALS);\nfunction $1af551c56cb88ebf$var$sorter(a, b) {\n    return a - b;\n}\nfunction $1af551c56cb88ebf$var$parse(scale, input) {\n    if ((0, $97ecbd121be4860b$export$342063e11d6c3cad)(input)) return null;\n    const adapter = scale._adapter;\n    const { parser: parser, round: round, isoWeekday: isoWeekday } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') value = parser(value);\n    if (!(0, $97ecbd121be4860b$export$39b482c5e57630a8)(value)) value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n    if (value === null) return null;\n    if (round) value = round === 'week' && ((0, $97ecbd121be4860b$export$d141bba7fdc215a3)(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    return +value;\n}\nfunction $1af551c56cb88ebf$var$determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = $1af551c56cb88ebf$var$UNITS.length;\n    for(let i = $1af551c56cb88ebf$var$UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = $1af551c56cb88ebf$var$INTERVALS[$1af551c56cb88ebf$var$UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) return $1af551c56cb88ebf$var$UNITS[i];\n    }\n    return $1af551c56cb88ebf$var$UNITS[ilen - 1];\n}\nfunction $1af551c56cb88ebf$var$determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = $1af551c56cb88ebf$var$UNITS.length - 1; i >= $1af551c56cb88ebf$var$UNITS.indexOf(minUnit); i--){\n        const unit = $1af551c56cb88ebf$var$UNITS[i];\n        if ($1af551c56cb88ebf$var$INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) return unit;\n    }\n    return $1af551c56cb88ebf$var$UNITS[minUnit ? $1af551c56cb88ebf$var$UNITS.indexOf(minUnit) : 0];\n}\nfunction $1af551c56cb88ebf$var$determineMajorUnit(unit) {\n    for(let i = $1af551c56cb88ebf$var$UNITS.indexOf(unit) + 1, ilen = $1af551c56cb88ebf$var$UNITS.length; i < ilen; ++i){\n        if ($1af551c56cb88ebf$var$INTERVALS[$1af551c56cb88ebf$var$UNITS[i]].common) return $1af551c56cb88ebf$var$UNITS[i];\n    }\n}\nfunction $1af551c56cb88ebf$var$addTick(ticks, time, timestamps) {\n    if (!timestamps) ticks[time] = true;\n    else if (timestamps.length) {\n        const { lo: lo, hi: hi } = (0, $97ecbd121be4860b$export$c03999cb2f36933f)(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\nfunction $1af551c56cb88ebf$var$setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) ticks[index].major = true;\n    }\n    return ticks;\n}\nfunction $1af551c56cb88ebf$var$ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n    const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value: value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : $1af551c56cb88ebf$var$setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass $1af551c56cb88ebf$export$a894c72689ff3ec extends $1af551c56cb88ebf$export$d60cfc58d3c358b6 {\n    constructor(props){\n        super(props);\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n        this._unit = 'day';\n        this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n        const adapter = this._adapter = new $1af551c56cb88ebf$export$f32766ea09ec8bc4._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        (0, $97ecbd121be4860b$export$2219238a014317b0)(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n    parse(raw, index) {\n        if (raw === undefined) return null;\n        return $1af551c56cb88ebf$var$parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min: min, max: max, minDefined: minDefined, maxDefined: maxDefined } = this.getUserBounds();\n        function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) min = Math.min(min, bounds.min);\n            if (!maxDefined && !isNaN(bounds.max)) max = Math.max(max, bounds.max);\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') _applyBounds(this.getMinMax(false));\n        }\n        min = (0, $97ecbd121be4860b$export$39b482c5e57630a8)(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = (0, $97ecbd121be4860b$export$39b482c5e57630a8)(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n    _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min: min,\n            max: max\n        };\n    }\n    buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = (0, $97ecbd121be4860b$export$faec65b429be379)(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? $1af551c56cb88ebf$var$determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : $1af551c56cb88ebf$var$determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : $1af551c56cb88ebf$var$determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) ticks.reverse();\n        return $1af551c56cb88ebf$var$ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) this.initOffsets(this.ticks.map((tick)=>+tick.value));\n    }\n    initOffsets(timestamps) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) start = 1 - first;\n            else start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) end = last;\n            else end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = (0, $97ecbd121be4860b$export$a9c23c6ac3fc3eca)(start, 0, limit);\n        end = (0, $97ecbd121be4860b$export$a9c23c6ac3fc3eca)(end, 0, limit);\n        this._offsets = {\n            start: start,\n            end: end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n    _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || $1af551c56cb88ebf$var$determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = (0, $97ecbd121be4860b$export$90a7f3efeed30595)(timeOpts.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = (0, $97ecbd121be4860b$export$d141bba7fdc215a3)(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) first = +adapter.startOf(first, 'isoWeek', weekday);\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++)$1af551c56cb88ebf$var$addTick(ticks, time, timestamps);\n        if (time === max || options.bounds === 'ticks' || count === 1) $1af551c56cb88ebf$var$addTick(ticks, time, timestamps);\n        return Object.keys(ticks).sort((a, b)=>a - b).map((x)=>+x);\n    }\n    getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) return adapter.format(value, timeOpts.tooltipFormat);\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n    _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n        const formatter = options.ticks.callback;\n        return formatter ? (0, $97ecbd121be4860b$export$e7094788287c5e9b)(formatter, [\n            label,\n            index,\n            ticks\n        ], this) : label;\n    }\n    generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n    getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n    getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n    getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n    _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = (0, $97ecbd121be4860b$export$625550452a3fa3ec)(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n    _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, $1af551c56cb88ebf$var$ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n    getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) return timestamps;\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        for(i = 0, ilen = metas.length; i < ilen; ++i)timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        return this._cache.data = this.normalize(timestamps);\n    }\n    getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) return timestamps;\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i)timestamps.push($1af551c56cb88ebf$var$parse(this, labels[i]));\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n    normalize(values) {\n        return (0, $97ecbd121be4860b$export$71511d61b312f219)(values.sort($1af551c56cb88ebf$var$sorter));\n    }\n}\n$1af551c56cb88ebf$export$a894c72689ff3ec.id = 'time';\n$1af551c56cb88ebf$export$a894c72689ff3ec.defaults = {\n    bounds: 'data',\n    adapters: {},\n    time: {\n        parser: false,\n        unit: false,\n        round: false,\n        isoWeekday: false,\n        minUnit: 'millisecond',\n        displayFormats: {}\n    },\n    ticks: {\n        source: 'auto',\n        major: {\n            enabled: false\n        }\n    }\n};\nfunction $1af551c56cb88ebf$var$interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) ({ lo: lo, hi: hi } = (0, $97ecbd121be4860b$export$dc98b0b04f4c7758)(table, 'pos', val));\n        ({ pos: prevSource, time: prevTarget } = table[lo]);\n        ({ pos: nextSource, time: nextTarget } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) ({ lo: lo, hi: hi } = (0, $97ecbd121be4860b$export$dc98b0b04f4c7758)(table, 'time', val));\n        ({ time: prevSource, pos: prevTarget } = table[lo]);\n        ({ time: nextSource, pos: nextTarget } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass $1af551c56cb88ebf$export$85df64a8eb6dc986 extends $1af551c56cb88ebf$export$a894c72689ff3ec {\n    constructor(props){\n        super(props);\n        this._table = [];\n        this._minPos = undefined;\n        this._tableRange = undefined;\n    }\n    initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = $1af551c56cb88ebf$var$interpolate(table, this.min);\n        this._tableRange = $1af551c56cb88ebf$var$interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n    buildLookupTable(timestamps) {\n        const { min: min, max: max } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) items.push(curr);\n        }\n        if (items.length < 2) return [\n            {\n                time: min,\n                pos: 0\n            },\n            {\n                time: max,\n                pos: 1\n            }\n        ];\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) table.push({\n                time: curr,\n                pos: i / (ilen - 1)\n            });\n        }\n        return table;\n    }\n    _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) return timestamps;\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) timestamps = this.normalize(data.concat(label));\n        else timestamps = data.length ? data : label;\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n    getDecimalForValue(value) {\n        return ($1af551c56cb88ebf$var$interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n    getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return $1af551c56cb88ebf$var$interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n$1af551c56cb88ebf$export$85df64a8eb6dc986.id = 'timeseries';\n$1af551c56cb88ebf$export$85df64a8eb6dc986.defaults = $1af551c56cb88ebf$export$a894c72689ff3ec.defaults;\nvar $1af551c56cb88ebf$export$bcac1c16f1530ec2 = /*#__PURE__*/ Object.freeze({\n    __proto__: null,\n    CategoryScale: $1af551c56cb88ebf$export$29e663ba4d09fe7,\n    LinearScale: $1af551c56cb88ebf$export$e7f4e5e8656f0b93,\n    LogarithmicScale: $1af551c56cb88ebf$export$85295eaf7cb3ac3e,\n    RadialLinearScale: $1af551c56cb88ebf$export$cfafc36d95386d38,\n    TimeScale: $1af551c56cb88ebf$export$a894c72689ff3ec,\n    TimeSeriesScale: $1af551c56cb88ebf$export$85df64a8eb6dc986\n});\nconst $1af551c56cb88ebf$export$e8959e79e3af550f = [\n    $1af551c56cb88ebf$export$a6506504f799c5d5,\n    $1af551c56cb88ebf$export$7a5d735b2ab6389d,\n    $1af551c56cb88ebf$export$8b3ca321c77fdea6,\n    $1af551c56cb88ebf$export$bcac1c16f1530ec2\n];\n\n\n(0, $1af551c56cb88ebf$export$acaa6426d77a227e).register(...(0, $1af551c56cb88ebf$export$e8959e79e3af550f));\nvar $5b117e7d5e461010$export$2e2bcd8739ae039 = (0, $1af551c56cb88ebf$export$acaa6426d77a227e);\n\n\n(0, $5b117e7d5e461010$export$2e2bcd8739ae039).defaults.font.family = 'Roboto Mono, monospace';\n(0, $5b117e7d5e461010$export$2e2bcd8739ae039).defaults.font.size = 18;\n(0, $5b117e7d5e461010$export$2e2bcd8739ae039).defaults.color = '#000000';\n(0, $5b117e7d5e461010$export$2e2bcd8739ae039).defaults.plugins.tooltip.titleFont = 300;\n(0, $5b117e7d5e461010$export$2e2bcd8739ae039).defaults.plugins.tooltip.padding = 15;\n(0, $5b117e7d5e461010$export$2e2bcd8739ae039).defaults.plugins.tooltip.titleFont = {\n    size: 18\n};\n(0, $5b117e7d5e461010$export$2e2bcd8739ae039).defaults.plugins.tooltip.bodyFont = {\n    size: 18\n};\n(0, $5b117e7d5e461010$export$2e2bcd8739ae039).defaults.plugins.tooltip.displayColors = false;\n(0, $5b117e7d5e461010$export$2e2bcd8739ae039).defaults.plugins.tooltip.intersect = false;\nlet $a8e2c7184eefcdf3$var$chartTitlesPadding = 15;\nlet $a8e2c7184eefcdf3$var$chartLabelFontSize = 20;\nlet $a8e2c7184eefcdf3$var$chartXAxisLabelFontSize = 16;\nlet $a8e2c7184eefcdf3$var$chartLineTension = 0.3;\nlet $a8e2c7184eefcdf3$var$chartYScaleDisplay = true;\nlet $a8e2c7184eefcdf3$var$chartAspectRatio = 2;\nlet $a8e2c7184eefcdf3$var$chartPointRadius = 5;\nlet $a8e2c7184eefcdf3$var$chartInteractsEvents = [\n    'mousemove',\n    'mouseout'\n];\nconst $a8e2c7184eefcdf3$var$isMobile = window.matchMedia('(max-width: 1024px)');\nconst $a8e2c7184eefcdf3$var$isDarkColorScheme = window.matchMedia('(prefers-color-scheme: dark)');\nif ($a8e2c7184eefcdf3$var$isMobile.matches) {\n    (0, $5b117e7d5e461010$export$2e2bcd8739ae039).defaults.font.size = 14;\n    $a8e2c7184eefcdf3$var$chartLabelFontSize = 16;\n    $a8e2c7184eefcdf3$var$chartXAxisLabelFontSize = 14;\n    $a8e2c7184eefcdf3$var$chartTitlesPadding = 5;\n    $a8e2c7184eefcdf3$var$chartLineTension = 0.5;\n    $a8e2c7184eefcdf3$var$chartYScaleDisplay = false;\n    $a8e2c7184eefcdf3$var$chartAspectRatio = 1;\n    $a8e2c7184eefcdf3$var$chartPointRadius = 4;\n    $a8e2c7184eefcdf3$var$chartInteractsEvents = [\n        'touchstart',\n        'mouseout'\n    ];\n}\nif ($a8e2c7184eefcdf3$var$isDarkColorScheme.matches) {\n    (0, $5b117e7d5e461010$export$2e2bcd8739ae039).defaults.color = '#FFFFFF';\n    (0, $5b117e7d5e461010$export$2e2bcd8739ae039).defaults.elements.point.backgroundColor = '#FFFFFF';\n}\n$a8e2c7184eefcdf3$var$isDarkColorScheme.addEventListener('change', ()=>{\n    window.location.reload();\n});\nfunction $a8e2c7184eefcdf3$export$88f19e598a55130(forecasts) {\n    const { firstDayChartData: firstDayChartData, secondDayChartData: secondDayChartData, thirdDayChartData: thirdDayChartData } = forecasts;\n    const config1 = {\n        type: 'line',\n        data: {\n            datasets: [\n                {\n                    label: \"\\u0421\\u0435\\u0433\\u043E\\u0434\\u043D\\u044F\",\n                    data: firstDayChartData\n                }\n            ]\n        },\n        options: {\n            aspectRatio: $a8e2c7184eefcdf3$var$chartAspectRatio,\n            events: $a8e2c7184eefcdf3$var$chartInteractsEvents,\n            plugins: {\n                tooltip: {\n                    callbacks: {\n                        label: function(tooltip) {\n                            return `KP-\\u{438}\\u{43D}\\u{434}\\u{435}\\u{43A}\\u{441}: ${tooltip.formattedValue}`;\n                        }\n                    }\n                },\n                legend: {\n                    labels: {\n                        font: {\n                            size: $a8e2c7184eefcdf3$var$chartLabelFontSize\n                        }\n                    }\n                }\n            },\n            elements: {\n                line: {\n                    tension: $a8e2c7184eefcdf3$var$chartLineTension,\n                    backgroundColor: '#72B063',\n                    borderWidth: 1,\n                    fill: true\n                },\n                point: {\n                    pointStyle: 'rect',\n                    pointRadius: $a8e2c7184eefcdf3$var$chartPointRadius\n                }\n            },\n            scales: {\n                y: {\n                    title: {\n                        display: $a8e2c7184eefcdf3$var$chartYScaleDisplay,\n                        text: \"KP-\\u0438\\u043D\\u0434\\u0435\\u043A\\u0441\",\n                        padding: $a8e2c7184eefcdf3$var$chartTitlesPadding\n                    },\n                    beginAtZero: true,\n                    max: 9,\n                    ticks: {\n                        stepSize: 1\n                    }\n                },\n                x: {\n                    title: {\n                        display: true,\n                        text: \"\\u0412\\u0440\\u0435\\u043C\\u044F \\u0441\\u0443\\u0442\\u043E\\u043A\",\n                        padding: $a8e2c7184eefcdf3$var$chartTitlesPadding\n                    },\n                    labels: [\n                        '00:00',\n                        '03:00',\n                        '06:00',\n                        '09:00',\n                        '12:00',\n                        '15:00',\n                        '18:00',\n                        '21:00'\n                    ]\n                }\n            }\n        }\n    };\n    const config2 = Object.create(config1, {\n        data: {\n            writable: true,\n            enumerable: true,\n            value: {\n                datasets: [\n                    {\n                        label: \"\\u0417\\u0430\\u0432\\u0442\\u0440\\u0430\",\n                        data: secondDayChartData\n                    }\n                ]\n            }\n        }\n    });\n    const config3 = Object.create(config1, {\n        data: {\n            writable: true,\n            enumerable: true,\n            value: {\n                datasets: [\n                    {\n                        label: \"\\u041F\\u043E\\u0441\\u043B\\u0435\\u0437\\u0430\\u0432\\u0442\\u0440\\u0430\",\n                        data: thirdDayChartData\n                    }\n                ]\n            }\n        }\n    });\n    try {\n        new (0, $5b117e7d5e461010$export$2e2bcd8739ae039)(document.getElementById('first-day-chart'), config1);\n        new (0, $5b117e7d5e461010$export$2e2bcd8739ae039)(document.getElementById('second-day-chart'), config2);\n        new (0, $5b117e7d5e461010$export$2e2bcd8739ae039)(document.getElementById('third-day-chart'), config3);\n    } catch (error) {\n        console.error(`\\u{41E}\\u{448}\\u{438}\\u{431}\\u{43A}\\u{430} \\u{440}\\u{435}\\u{43D}\\u{434}\\u{435}\\u{440}\\u{438}\\u{43D}\\u{433}\\u{430} \\u{433}\\u{440}\\u{430}\\u{444}\\u{438}\\u{43A}\\u{43E}\\u{432} \\u{442}\\u{440}\\u{451}\\u{445}\\u{434}\\u{43D}\\u{435}\\u{432}\\u{43D}\\u{43E}\\u{433}\\u{43E} \\u{43F}\\u{440}\\u{43E}\\u{433}\\u{43D}\\u{43E}\\u{437}\\u{430}: ${error}`);\n    }\n}\nfunction $a8e2c7184eefcdf3$export$f28dcfd73198b697(chartParams) {\n    const { monthChartData: monthChartData, translatedLabels: translatedLabels } = chartParams;\n    const config = {\n        type: 'bar',\n        data: {\n            labels: translatedLabels,\n            datasets: [\n                {\n                    data: monthChartData,\n                    backgroundColor: function(context) {\n                        const index = context.dataIndex;\n                        const value = context.dataset.data[index];\n                        switch(true){\n                            case value === 1:\n                                return '#ebebeb';\n                            case value === 2:\n                                return '#ebebeb';\n                            case value === 3:\n                                return '#ace1af';\n                            case value === 4:\n                                return '#72B063';\n                            case value === 5:\n                                return '#44663B';\n                            case value === 6:\n                                return '#df73ff';\n                            case value === 7:\n                                return '#b366ff';\n                            case value === 8:\n                                return '#8b00ff';\n                            case value === 9:\n                                return '#48268c';\n                            default:\n                                return '#90ee90';\n                        }\n                    },\n                    borderWidth: 0\n                }\n            ]\n        },\n        options: {\n            aspectRatio: $a8e2c7184eefcdf3$var$chartAspectRatio,\n            events: $a8e2c7184eefcdf3$var$chartInteractsEvents,\n            plugins: {\n                tooltip: {\n                    callbacks: {\n                        label: function(tooltip) {\n                            return `KP-\\u{438}\\u{43D}\\u{434}\\u{435}\\u{43A}\\u{441}: ${tooltip.formattedValue}`;\n                        }\n                    }\n                },\n                legend: {\n                    display: false\n                }\n            },\n            scales: {\n                y: {\n                    title: {\n                        display: $a8e2c7184eefcdf3$var$chartYScaleDisplay,\n                        text: \"KP-\\u0438\\u043D\\u0434\\u0435\\u043A\\u0441\",\n                        padding: $a8e2c7184eefcdf3$var$chartTitlesPadding\n                    },\n                    beginAtZero: true,\n                    max: 9,\n                    ticks: {\n                        stepSize: 1\n                    }\n                },\n                x: {\n                    title: {\n                        display: true,\n                        text: \"\\u0414\\u0430\\u0442\\u044B\",\n                        padding: $a8e2c7184eefcdf3$var$chartTitlesPadding\n                    },\n                    ticks: {\n                        font: {\n                            size: $a8e2c7184eefcdf3$var$chartXAxisLabelFontSize\n                        }\n                    }\n                }\n            }\n        }\n    };\n    try {\n        new (0, $5b117e7d5e461010$export$2e2bcd8739ae039)(document.getElementById('month-chart'), config);\n    } catch (error) {\n        console.error(`\\u{41E}\\u{448}\\u{438}\\u{431}\\u{43A}\\u{430} \\u{440}\\u{435}\\u{43D}\\u{434}\\u{435}\\u{440}\\u{438}\\u{43D}\\u{433}\\u{430} \\u{433}\\u{440}\\u{430}\\u{444}\\u{438}\\u{43A}\\u{430} \\u{43C}\\u{435}\\u{441}\\u{44F}\\u{447}\\u{43D}\\u{43E}\\u{433}\\u{43E} \\u{43F}\\u{440}\\u{43E}\\u{433}\\u{43D}\\u{43E}\\u{437}\\u{430}: ${error}`);\n    }\n}\n\n\n(async ()=>{\n    try {\n        const response = await fetch('https://services.swpc.noaa.gov/text/3-day-forecast.txt');\n        const textForecast = await response.text();\n        const resultForecast = $92d001920e846853$var$threeDayTablesFiller(textForecast);\n        (0, $a8e2c7184eefcdf3$export$88f19e598a55130)(resultForecast);\n    } catch (error) {\n        console.error(`\\u{41E}\\u{448}\\u{438}\\u{431}\\u{43A}\\u{430} \\u{432} \\u{441}\\u{43E}\\u{437}\\u{434}\\u{430}\\u{43D}\\u{438}\\u{438} \\u{442}\\u{440}\\u{451}\\u{445}\\u{434}\\u{43D}\\u{435}\\u{432}\\u{43D}\\u{43E}\\u{433}\\u{43E} \\u{43F}\\u{440}\\u{43E}\\u{433}\\u{43D}\\u{43E}\\u{437}\\u{430}: ${error}`);\n    }\n})();\nfunction $92d001920e846853$var$threeDayTablesFiller(data) {\n    const startOfForecastTable = data.indexOf('00-03UT');\n    const endOfForecastTable = data.indexOf('\\n\\nRationale');\n    // Находит лишние подписи, как «(G1)».\n    // Они дополнительно классифицируют силу геомагнитного шторма,\n    // но из-за них меняется число символов внутри response.text(),\n    // поэтому нужно удалить\n    const extraSignatures = new RegExp('[(]G[1-5][)]', 'g');\n    if (startOfForecastTable === -1 || endOfForecastTable === -1) throw new Error(\"\\u041D\\u0435 \\u0443\\u0434\\u0430\\u043B\\u043E\\u0441\\u044C \\u043D\\u0430\\u0439\\u0442\\u0438 \\u043D\\u0430\\u0447\\u0430\\u043B\\u043E \\u0438\\u043B\\u0438 \\u043A\\u043E\\u043D\\u0435\\u0446 \\u0442\\u0430\\u0431\\u043B\\u0438\\u0446\\u044B \\u0442\\u0440\\u0451\\u0445\\u0434\\u043D\\u0435\\u0432\\u043D\\u043E\\u0433\\u043E \\u043F\\u0440\\u043E\\u0433\\u043D\\u043E\\u0437\\u0430\");\n    let crudeForecast = data.slice(startOfForecastTable, endOfForecastTable);\n    if (crudeForecast.includes('G')) // Замена на пробелы нужна, чтобы удалить элемент без сдвига\n    crudeForecast = crudeForecast.replaceAll(extraSignatures, '    ');\n    const resultForecast = crudeForecast.split(' ').filter((item)=>item !== '');\n    const firstDayChartData = [];\n    const secondDayChartData = [];\n    const thirdDayChartData = [];\n    for(let i = 1; i < 32; i++){\n        const value = Number(resultForecast[i]);\n        switch(i % 4){\n            case 1:\n                firstDayChartData.push(value);\n                break;\n            case 2:\n                secondDayChartData.push(value);\n                break;\n            case 3:\n                thirdDayChartData.push(value);\n                break;\n        }\n    }\n    return {\n        firstDayChartData: firstDayChartData,\n        secondDayChartData: secondDayChartData,\n        thirdDayChartData: thirdDayChartData\n    };\n}\n\n\n\n(async ()=>{\n    try {\n        const response = await fetch('https://services.swpc.noaa.gov/text/27-day-outlook.txt');\n        const textForecast = await response.text();\n        const resultForecast = $7b07849fc98c04c9$var$monthTableFiller(textForecast);\n        (0, $a8e2c7184eefcdf3$export$f28dcfd73198b697)(resultForecast);\n    } catch (error) {\n        console.error(`\\u{41E}\\u{448}\\u{438}\\u{431}\\u{43A}\\u{430} \\u{432} \\u{441}\\u{43E}\\u{437}\\u{434}\\u{430}\\u{43D}\\u{438}\\u{438} \\u{43C}\\u{435}\\u{441}\\u{44F}\\u{447}\\u{43D}\\u{43E}\\u{433}\\u{43E} \\u{43F}\\u{440}\\u{43E}\\u{433}\\u{43D}\\u{43E}\\u{437}\\u{430}: ${error}`);\n    }\n})();\nfunction $7b07849fc98c04c9$var$monthTableFiller(data) {\n    const startOfForecastTable = new RegExp('\\\\n2[0-9]+', 'g');\n    const indexOfStart = data.search(startOfForecastTable);\n    if (startOfForecastTable === -1) throw new Error(\"\\u041D\\u0435 \\u0443\\u0434\\u0430\\u043B\\u043E\\u0441\\u044C \\u043D\\u0430\\u0439\\u0442\\u0438 \\u043D\\u0430\\u0447\\u0430\\u043B\\u043E \\u0442\\u0430\\u0431\\u043B\\u0438\\u0446\\u044B \\u043C\\u0435\\u0441\\u044F\\u0447\\u043D\\u043E\\u0433\\u043E \\u043F\\u0440\\u043E\\u0433\\u043D\\u043E\\u0437\\u0430\");\n    const crudeForecast = data.slice(indexOfStart, data.length);\n    const treatedForecast = crudeForecast.replaceAll(/\\n+/g, '     ') // Заменяем знаки разрыва строки на 5 пробелов\n    .replaceAll(/\\s{10}/g, '     ') // Заменяем места, где 10 пробелов, на 5 пробелов\n    .trim().split('     ') // Создаём массив, разбивая строку по 5 пробелов\n    ;\n    const monthChartData = [];\n    const monthChartLabels = [];\n    for(let i = 3; i < treatedForecast.length; i += 4){\n        const value = Number(treatedForecast[i]);\n        monthChartData.push(value);\n    }\n    for(let i = 0; i <= 105; i += 4)monthChartLabels.push(treatedForecast[i]);\n    const MONTHS_TRANSLATION = {\n        Jan: \"\\u042F\\u043D\\u0432\",\n        Feb: \"\\u0424\\u0435\\u0432\",\n        Mar: \"\\u041C\\u0430\\u0440\",\n        Apr: \"\\u0410\\u043F\\u0440\",\n        May: \"\\u041C\\u0430\\u0439\",\n        Jun: \"\\u0418\\u044E\\u043D\",\n        Jul: \"\\u0418\\u044E\\u043B\",\n        Aug: \"\\u0410\\u0432\\u0433\",\n        Sep: \"\\u0421\\u0435\\u043D\",\n        Oct: \"\\u041E\\u043A\\u0442\",\n        Nov: \"\\u041D\\u043E\\u044F\",\n        Dec: \"\\u0414\\u0435\\u043A\"\n    };\n    const translatedLabels = monthChartLabels.map((date)=>{\n        const engMonth = date.slice(5, 8);\n        const ruMonth = MONTHS_TRANSLATION[engMonth];\n        return date.slice(5).replace(engMonth, ruMonth);\n    });\n    return {\n        monthChartData: monthChartData,\n        translatedLabels: translatedLabels\n    };\n}\n\n\nconst $c3d19876e6f60f89$var$testWrapper = document.querySelector('.test__wrapper');\nconst $c3d19876e6f60f89$var$testButton = document.querySelector('.test__button');\n$c3d19876e6f60f89$var$testButton.addEventListener('click', ()=>{\n    $c3d19876e6f60f89$var$testWrapper.classList.toggle('test__wrapper_closed');\n    const isTestWrapperOpened = !$c3d19876e6f60f89$var$testWrapper.classList.contains('test__wrapper_closed');\n    if (isTestWrapperOpened) $c3d19876e6f60f89$var$testButton.textContent = \"\\u0421\\u0432\\u0435\\u0440\\u043D\\u0443\\u0442\\u044C -\";\n    else $c3d19876e6f60f89$var$testButton.textContent = \"\\u0420\\u0430\\u0437\\u0432\\u0435\\u0440\\u043D\\u0443\\u0442\\u044C +\";\n});\n\n\nclass $b26cc05738a8cb4b$var$Test {\n    constructor(questions, grades, tips){\n        this.questions = questions;\n        this.grades = grades;\n        this.tips = tips;\n        this.answers = new Object();\n        this.questionNumber = 0 // Счётчик вопросов, начинается с нуля для правильного поиска по массиву вопросов\n        ;\n        this.progressCount = 1 // Счётчик прогресса внизу теста, начинается с единицы, т.к. привычный для всех счёт начинается тоже с единицы\n        ;\n    }\n    Next(question, answer, answerButtons, progress) {\n        this.answers[this.questionNumber] = {\n            answerType: answer\n        };\n        this.progressCount++;\n        this.questionNumber++;\n        if (this.questionNumber < 7) {\n            question.textContent = this.questions[this.questionNumber];\n            progress.textContent = `${this.progressCount}/7`;\n        } else this.End(question, answerButtons, progress);\n    }\n    End(question, answerButtons, progress) {\n        let questionIndexes = new Array();\n        for(let answer in this.answers)if (this.answers[answer].answerType === 'disagree') questionIndexes.push(answer) // Подводим итог теста. Собираем индексы вопросов, где ответ был «Нет»\n        ;\n        switch(true){\n            case questionIndexes.length === 0:\n                question.textContent = this.grades[0];\n                break;\n            case 3 > questionIndexes.length > 0:\n                question.textContent = this.grades[1];\n                break;\n            case questionIndexes.length > 3:\n                question.textContent = this.grades[2];\n                break;\n            default:\n                question.textContent = this.grades[1];\n                break;\n        }\n        answerButtons.forEach((button)=>button.classList.add('test__answer_hidden'));\n        progress.textContent = \"\\u0424\\u0438\\u043D\\u0438\\u0448\";\n        if (questionIndexes.length === 0) return;\n        const answersWrapper = document.querySelector('.test__answers');\n        const testInner = document.querySelector('.test__inner');\n        testInner.classList.add('test-finished');\n        let answerNumber = 1;\n        for (let questionIndex of questionIndexes){\n            const newParagraph = document.createElement('p');\n            newParagraph.textContent = `${answerNumber}. ${this.tips[questionIndex]}` // Индекс вопроса совпадает с индексом совета\n            ;\n            if (questionIndexes.length === 1) newParagraph.textContent = this.tips[questionIndex];\n            answersWrapper.appendChild(newParagraph);\n            answerNumber++;\n        }\n    }\n}\nconst $b26cc05738a8cb4b$var$questions = [\n    \"\\u0423 \\u0432\\u0430\\u0441 \\u0431\\u0443\\u0434\\u0435\\u0442 \\u0441\\u0432\\u043E\\u0439 \\u0442\\u0440\\u0430\\u043D\\u0441\\u043F\\u043E\\u0440\\u0442?\",\n    \"\\u0423\\u0436\\u0435 \\u0432\\u044B\\u0431\\u0440\\u0430\\u043B\\u0438 \\u043C\\u0435\\u0441\\u0442\\u0430 \\u0434\\u043B\\u044F \\u043D\\u0430\\u0431\\u043B\\u044E\\u0434\\u0435\\u043D\\u0438\\u0439 \\u0437\\u0430 \\u0441\\u0438\\u044F\\u043D\\u0438\\u0435\\u043C?\",\n    \"\\u0418\\u0437\\u0443\\u0447\\u0438\\u043B\\u0438, \\u043A\\u0430\\u043A \\u0441\\u0434\\u0435\\u043B\\u0430\\u0442\\u044C \\u0445\\u043E\\u0440\\u043E\\u0448\\u0438\\u0435 \\u0444\\u043E\\u0442\\u043E\\u0433\\u0440\\u0430\\u0444\\u0438\\u0438 \\u043D\\u043E\\u0447\\u044C\\u044E?\",\n    \"\\u041F\\u043E\\u0433\\u043E\\u0434\\u0443 \\u043E\\u0431\\u0435\\u0449\\u0430\\u044E\\u0442 \\u0431\\u0435\\u0437\\u043E\\u0431\\u043B\\u0430\\u0447\\u043D\\u0443\\u044E?\",\n    \"KP-\\u0438\\u043D\\u0434\\u0435\\u043A\\u0441\\u044B \\u0432 \\u0434\\u043D\\u0438 \\u043F\\u043E\\u0435\\u0437\\u0434\\u043A\\u0438 3 \\u0438 \\u0432\\u044B\\u0448\\u0435?\",\n    \"\\u0422\\u0451\\u043F\\u043B\\u0430\\u044F \\u043E\\u0434\\u0435\\u0436\\u0434\\u0430 \\u0441 \\u0441\\u043E\\u0431\\u043E\\u0439?\",\n    \"\\u0410 \\u0435\\u0434\\u0430 \\u0438 \\u0433\\u043E\\u0440\\u044F\\u0447\\u0438\\u0435 \\u043D\\u0430\\u043F\\u0438\\u0442\\u043A\\u0438?\"\n];\nconst $b26cc05738a8cb4b$var$grades = [\n    \"\\u0412\\u0441\\u0451 \\u0432 \\u043F\\u043E\\u0440\\u044F\\u0434\\u043A\\u0435, \\u043C\\u043E\\u0436\\u043D\\u043E \\u0441\\u043C\\u0435\\u043B\\u043E \\u0435\\u0445\\u0430\\u0442\\u044C. \\u0418 \\u0434\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043D\\u0435\\u0447\\u0435\\u0433\\u043E.\",\n    \"\\u041D\\u0435\\u043F\\u043B\\u043E\\u0445\\u043E, \\u043D\\u043E \\u0435\\u0441\\u0442\\u044C \\u043D\\u0430\\u0434 \\u0447\\u0435\\u043C \\u043F\\u043E\\u0440\\u0430\\u0431\\u043E\\u0442\\u0430\\u0442\\u044C:\",\n    \"\\u0412\\u044B \\u043F\\u043E\\u043B\\u043D\\u044B \\u044D\\u043D\\u0442\\u0443\\u0437\\u0438\\u0430\\u0437\\u043C\\u0430, \\u043D\\u043E \\u043F\\u043E\\u0434\\u0433\\u043E\\u0442\\u043E\\u0432\\u043A\\u0430 \\u0445\\u0440\\u043E\\u043C\\u0430\\u0435\\u0442:\"\n];\nconst $b26cc05738a8cb4b$var$tips = [\n    \"\\u0411\\u0435\\u0437 \\u0441\\u0432\\u043E\\u0435\\u0433\\u043E \\u0442\\u0440\\u0430\\u043D\\u0441\\u043F\\u043E\\u0440\\u0442\\u0430 \\u043F\\u043E\\u0447\\u0442\\u0438 \\u043D\\u0438\\u043A\\u0430\\u043A. \\u041C\\u043E\\u0436\\u043D\\u043E \\u0433\\u0440\\u0435\\u0442\\u044C\\u0441\\u044F \\u0438\\u043B\\u0438 \\u0443\\u0435\\u0445\\u0430\\u0442\\u044C \\u0438\\u0437 \\u043F\\u043E\\u0434 \\u0432\\u043D\\u0435\\u0437\\u0430\\u043F\\u043D\\u044B\\u0445 \\u0442\\u0443\\u0447\",\n    \"\\u0415\\u0441\\u043B\\u0438 \\u0432\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C \\u043C\\u0435\\u0441\\u0442\\u0430 \\u0434\\u043B\\u044F \\u043D\\u0430\\u0431\\u043B\\u044E\\u0434\\u0435\\u043D\\u0438\\u0439 \\u0437\\u0430\\u0440\\u0430\\u043D\\u0435\\u0435, \\u043D\\u0435 \\u043F\\u0440\\u0438\\u0434\\u0451\\u0442\\u0441\\u044F \\u0438\\u0441\\u043A\\u0430\\u0442\\u044C \\u0442\\u043E\\u0447\\u043A\\u0443 \\u043F\\u043E\\u0441\\u0440\\u0435\\u0434\\u0438 \\u043A\\u0440\\u043E\\u043C\\u0435\\u0448\\u043D\\u043E\\u0439 \\u0442\\u044C\\u043C\\u044B\",\n    \"\\u041F\\u0440\\u0438\\u044F\\u0442\\u043D\\u0435\\u0435, \\u043A\\u043E\\u0433\\u0434\\u0430 \\u043C\\u043E\\u0436\\u043D\\u043E \\u0444\\u043E\\u0442\\u043E\\u0433\\u0440\\u0430\\u0444\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u0441\\u0438\\u044F\\u043D\\u0438\\u0435 \\u0441\\u0440\\u0430\\u0437\\u0443, \\u0430 \\u043D\\u0435 \\u0440\\u0430\\u0437\\u0431\\u0438\\u0440\\u0430\\u0442\\u044C\\u0441\\u044F \\u043D\\u0430 \\u043C\\u0435\\u0441\\u0442\\u0435 \\u0432 \\u043D\\u0430\\u0441\\u0442\\u0440\\u043E\\u0439\\u043A\\u0430\\u0445. \\u041F\\u043E\\u0447\\u0438\\u0442\\u0430\\u0439\\u0442\\u0435 \\u0433\\u0430\\u0439\\u0434\\u044B \\u0438\\u043B\\u0438 \\u0442\\u0443\\u0442\\u043E\\u0440\\u0438\\u0430\\u043B\\u044B \\u043F\\u043E \\u043D\\u043E\\u0447\\u043D\\u043E\\u0439 \\u0441\\u044A\\u0451\\u043C\\u043A\\u0435\",\n    \"\\u0414\\u0430\\u0436\\u0435 \\u0435\\u0441\\u043B\\u0438 \\u043F\\u0440\\u043E\\u0433\\u043D\\u043E\\u0437 KP-\\u0438\\u043D\\u0434\\u0435\\u043A\\u0441\\u043E\\u0432 \\u0445\\u043E\\u0440\\u043E\\u0448\\u0438\\u0439, \\u0442\\u0443\\u0447\\u0438 \\u043B\\u0435\\u0433\\u043A\\u043E \\u043F\\u0435\\u0440\\u0435\\u043A\\u0440\\u043E\\u044E\\u0442 \\u0432\\u0435\\u0441\\u044C \\u0432\\u0438\\u0434. \\u041F\\u043B\\u0430\\u043D\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u043E\\u0435\\u0437\\u0434\\u043A\\u0443 \\u0441\\u0442\\u043E\\u0438\\u0442 \\u043D\\u0430 \\u044F\\u0441\\u043D\\u044B\\u0435 \\u0434\\u043D\\u0438\",\n    \"\\u0415\\u0441\\u043B\\u0438 KP-\\u0438\\u043D\\u0434\\u0435\\u043A\\u0441\\u044B \\u043D\\u0430 \\u0434\\u043D\\u0438 \\u043F\\u043E\\u0435\\u0437\\u0434\\u043A\\u0438 \\u043D\\u0438\\u0437\\u043A\\u0438\\u0435, \\u0441\\u0438\\u044F\\u043D\\u0438\\u0435 \\u0431\\u0443\\u0434\\u0435\\u0442 \\u0432\\u044B\\u0433\\u043B\\u044F\\u0434\\u0435\\u0442\\u044C \\u043A\\u0430\\u043A \\u0431\\u0435\\u043B\\u043E\\u0432\\u0430\\u0442\\u044B\\u0435 \\u0440\\u0430\\u0437\\u0432\\u043E\\u0434\\u044B \\u0432 \\u043D\\u0435\\u0431\\u0435, \\u0430 \\u043D\\u0435 \\u044F\\u0440\\u043A\\u0438\\u0435 \\u0437\\u0435\\u043B\\u0451\\u043D\\u044B\\u0435 \\u0432\\u043E\\u043B\\u043D\\u044B\",\n    \"\\u0411\\u0435\\u0437 \\u0442\\u0435\\u043F\\u043B\\u043E\\u0439 \\u043E\\u0434\\u0435\\u0436\\u0434\\u044B \\u043C\\u043E\\u0436\\u043D\\u043E \\u043B\\u0435\\u0433\\u043A\\u043E \\u0437\\u0430\\u043C\\u0435\\u0440\\u0437\\u043D\\u0443\\u0442\\u044C, \\u043E\\u0434\\u0435\\u0432\\u0430\\u0439\\u0442\\u0435\\u0441\\u044C \\u043A\\u0430\\u043A \\u043D\\u0430 \\u0434\\u043E\\u043B\\u0433\\u0443\\u044E \\u043F\\u0440\\u043E\\u0433\\u0443\\u043B\\u043A\\u0443\",\n    \"\\u041D\\u0430 \\u0445\\u043E\\u043B\\u043E\\u0434\\u0435 \\u043F\\u0440\\u0438\\u044F\\u0442\\u043D\\u043E \\u0438\\u043C\\u0435\\u0442\\u044C \\u0441\\u043E\\u0433\\u0440\\u0435\\u0432\\u0430\\u044E\\u0449\\u0438\\u0435 \\u043D\\u0430\\u043F\\u0438\\u0442\\u043A\\u0438, \\u0432\\u0440\\u043E\\u0434\\u0435 \\u0447\\u0430\\u044F \\u0438\\u043B\\u0438 \\u043A\\u043E\\u0444\\u0435. \\u0410 \\u0435\\u0434\\u0430 \\u043F\\u043E\\u043C\\u043E\\u0436\\u0435\\u0442 \\u043D\\u0435 \\u0442\\u0435\\u0440\\u044F\\u0442\\u044C \\u0441\\u0438\\u043B\\u044B\"\n];\nconst $b26cc05738a8cb4b$var$test = new $b26cc05738a8cb4b$var$Test($b26cc05738a8cb4b$var$questions, $b26cc05738a8cb4b$var$grades, $b26cc05738a8cb4b$var$tips) // Инстанцируем класс\n;\nconst $b26cc05738a8cb4b$var$question = document.querySelector('.test__question');\nconst $b26cc05738a8cb4b$var$answerButtons = document.querySelectorAll('.test__answer');\nconst $b26cc05738a8cb4b$var$progress = document.querySelector('.test__progress');\n$b26cc05738a8cb4b$var$answerButtons.forEach((button)=>button.addEventListener('click', $b26cc05738a8cb4b$var$testHandler));\nfunction $b26cc05738a8cb4b$var$testHandler(event) {\n    const answer = event.target.id;\n    setTimeout(()=>{\n        $b26cc05738a8cb4b$var$test.Next($b26cc05738a8cb4b$var$question, answer, $b26cc05738a8cb4b$var$answerButtons, $b26cc05738a8cb4b$var$progress) // На клик по кнопкам запускаем метод Next с небольшой задержкой\n        ;\n    }, 70);\n}\n\n\n\n\n//# sourceMappingURL=severnee.6547548a.js.map\n","import './modules/cookie.js';\nimport './modules/menu.js';\nimport './modules/scroll.js';\nimport './modules/three-day-forecast.js';\nimport './modules/month-forecast.js';\nimport './modules/test-wrapper-toggler.js';\nimport './modules/test.js';\n","(function сookieNotify(){\n  const notification = localStorage.cookieNotification\n\n  if (!notification) {\n    const cookieBanner = document.querySelector('.cookie-notification')\n    const cookieButton = document.querySelector('.cookie-notification__button')\n\n    cookieBanner.classList.replace('notification_hidden', 'notification_visible')\n\n    cookieButton.addEventListener('click', () => {\n      localStorage.setItem('cookieNotification', new Date())\n      cookieBanner.classList.replace('notification_visible', 'notification_hidden')\n    }, {once: true})\n  }\n})()\n","const menu = document.querySelector('.header__menu')\nconst menuButton = document.querySelector('.header__menu-button')\n\nmenuButton.addEventListener('click', () => {\n  menuButton.classList.toggle('header__menu-button_clicked')\n  menu.classList.toggle('header__menu_closed')\n})\n\nconst closeMenu = () => {\n  menuButton.classList.remove('header__menu-button_clicked')\n  menu.classList.add('header__menu_closed')\n}\n\ndocument.addEventListener('click', (event) => {\n  if (!menu.contains(event.target) && !menuButton.contains(event.target)) {\n    closeMenu()\n  }\n})\n\nmenu.addEventListener('click', (event) => {\n  if (event.target.matches('.menu-list__link')) {\n    closeMenu()\n  }\n})\n","const navLinks = document.querySelectorAll('.menu-list__link, .intro__arrow-down')\n\nfunction scrollView(event) {\n  event.preventDefault()\n\n  document\n    .querySelector(event.currentTarget.hash)\n    .scrollIntoView()\n}\n\nnavLinks.forEach((link) => link.addEventListener('click', scrollView))\n","import { daysChartBuilder } from './charts.js'\n\n(async () => {\n  try {\n    const response = await fetch('https://services.swpc.noaa.gov/text/3-day-forecast.txt')\n    const textForecast = await response.text()\n    const resultForecast = threeDayTablesFiller(textForecast)\n\n    daysChartBuilder(resultForecast)\n  } catch (error) {\n    console.error(`Ошибка в создании трёхдневного прогноза: ${error}`)\n  }\n})();\n\nfunction threeDayTablesFiller(data) {\n  const startOfForecastTable = data.indexOf('00-03UT')\n  const endOfForecastTable = data.indexOf('\\n\\nRationale')\n\n  // Находит лишние подписи, как «(G1)».\n  // Они дополнительно классифицируют силу геомагнитного шторма,\n  // но из-за них меняется число символов внутри response.text(),\n  // поэтому нужно удалить\n  const extraSignatures = new RegExp('[(]G[1-5][)]', 'g')\n\n  if (startOfForecastTable === -1 || endOfForecastTable === -1) {\n    throw new Error('Не удалось найти начало или конец таблицы трёхдневного прогноза')\n  }\n\n  let crudeForecast = data.slice(startOfForecastTable, endOfForecastTable)\n\n  if (crudeForecast.includes('G')) {\n    // Замена на пробелы нужна, чтобы удалить элемент без сдвига\n    crudeForecast = crudeForecast.replaceAll(extraSignatures, '    ')\n  }\n\n  const resultForecast = crudeForecast\n    .split(' ')\n    .filter(item => item !== '')\n\n  const firstDayChartData = []\n  const secondDayChartData = []\n  const thirdDayChartData = []\n\n  for (let i = 1; i < 32; i++) {\n    const value = Number(resultForecast[i])\n\n    switch (i % 4) {\n      case 1:\n        firstDayChartData.push(value)\n        break\n      case 2:\n        secondDayChartData.push(value)\n        break\n      case 3:\n        thirdDayChartData.push(value)\n        break\n    }\n  }\n\n  return { firstDayChartData, secondDayChartData, thirdDayChartData }\n}\n","import Chart from 'chart.js/auto'\n\nChart.defaults.font.family = 'Roboto Mono, monospace'\nChart.defaults.font.size = 18\nChart.defaults.color = '#000000'\nChart.defaults.plugins.tooltip.titleFont = 300\nChart.defaults.plugins.tooltip.padding = 15\nChart.defaults.plugins.tooltip.titleFont = {size: 18}\nChart.defaults.plugins.tooltip.bodyFont = {size: 18}\nChart.defaults.plugins.tooltip.displayColors = false\nChart.defaults.plugins.tooltip.intersect = false\n\nlet chartTitlesPadding = 15\nlet chartLabelFontSize = 20\nlet chartXAxisLabelFontSize = 16\nlet chartLineTension = 0.3\nlet chartYScaleDisplay = true\nlet chartAspectRatio = 2\nlet chartPointRadius = 5\nlet chartInteractsEvents = ['mousemove', 'mouseout']\n\nconst isMobile = window.matchMedia('(max-width: 1024px)')\nconst isDarkColorScheme = window.matchMedia('(prefers-color-scheme: dark)')\n\nif (isMobile.matches) {\n  Chart.defaults.font.size = 14\n  chartLabelFontSize = 16\n  chartXAxisLabelFontSize = 14\n  chartTitlesPadding = 5\n  chartLineTension = 0.5\n  chartYScaleDisplay = false\n  chartAspectRatio = 1\n  chartPointRadius = 4\n  chartInteractsEvents = ['touchstart', 'mouseout']\n}\n\nif (isDarkColorScheme.matches) {\n  Chart.defaults.color = '#FFFFFF'\n  Chart.defaults.elements.point.backgroundColor = '#FFFFFF'\n}\n\nisDarkColorScheme.addEventListener('change', () => {\n  window.location.reload()\n})\n\nexport function daysChartBuilder(forecasts) {\n  const { firstDayChartData, secondDayChartData, thirdDayChartData } = forecasts\n\n  const config1 = { // Прототип конфига для графиков\n    type: 'line',\n    data: {\n      datasets: [{\n        label: 'Сегодня',\n        data: firstDayChartData,\n      }]\n    },\n    options: {\n      aspectRatio: chartAspectRatio,\n      events: chartInteractsEvents,\n      plugins: {\n        tooltip: {\n          callbacks: {\n            label: function (tooltip) {\n              return `KP-индекс: ${tooltip.formattedValue}`\n            }\n          }\n        },\n        legend: {\n          labels: {\n            font: {\n              size: chartLabelFontSize\n            }\n          }\n        }\n      },\n      elements: {\n        line: {\n          tension: chartLineTension,\n          backgroundColor: '#72B063',\n          borderWidth: 1,\n          fill: true\n        },\n        point: {\n          pointStyle: 'rect',\n          pointRadius: chartPointRadius\n        }\n      },\n      scales: {\n        y: {\n          title: {\n            display: chartYScaleDisplay,\n            text: 'KP-индекс',\n            padding: chartTitlesPadding\n          },\n          beginAtZero: true,\n          max: 9,\n          ticks: {\n            stepSize: 1\n          }\n        },\n        x: {\n          title: {\n            display: true,\n            text: 'Время суток',\n            padding: chartTitlesPadding\n          },\n          labels: ['00:00', '03:00', '06:00', '09:00', '12:00', '15:00', '18:00', '21:00']\n        }\n      }\n    }\n  }\n\n  const config2 = Object.create(config1, { // Создаём экземпляр основного конфига и перезаписываем data\n    data: {\n      writable: true,\n      enumerable: true,\n      value: {\n        datasets: [{\n          label: 'Завтра',\n          data: secondDayChartData\n        }]\n      }\n    }\n  })\n\n  const config3 = Object.create(config1, {\n    data: {\n      writable: true,\n      enumerable: true,\n      value: {\n        datasets: [{\n          label: 'Послезавтра',\n          data: thirdDayChartData\n        }]\n      }\n    }\n  })\n\n  try { // Рендеринг графиков\n    new Chart(\n      document.getElementById('first-day-chart'),\n      config1\n    )\n    new Chart(\n      document.getElementById('second-day-chart'),\n      config2\n    )\n    new Chart(\n      document.getElementById('third-day-chart'),\n      config3\n    )\n  } catch (error) {\n    console.error(`Ошибка рендеринга графиков трёхдневного прогноза: ${error}`)\n  }\n}\n\nexport function monthChartBuilder(chartParams) {\n  const { monthChartData, translatedLabels } = chartParams\n\n  const config = {\n    type: 'bar',\n    data: {\n      labels: translatedLabels,\n      datasets: [{\n        data: monthChartData,\n        backgroundColor: function(context) { // Добавляем раскраску в зависимости от величены KP-индекса\n          const index = context.dataIndex\n          const value = context.dataset.data[index]\n\n          switch (true) {\n            case (value === 1):\n              return '#ebebeb'\n            case (value === 2):\n              return '#ebebeb'\n            case (value === 3):\n              return '#ace1af'\n            case (value === 4):\n              return '#72B063'\n            case (value === 5):\n              return '#44663B'\n            case (value === 6):\n              return '#df73ff'\n            case (value === 7):\n              return '#b366ff'\n            case (value === 8):\n              return '#8b00ff'\n            case (value === 9):\n              return '#48268c'\n            default:\n              return '#90ee90'\n          }\n        },\n        borderWidth: 0\n      }]\n    },\n    options: {\n      aspectRatio: chartAspectRatio,\n      events: chartInteractsEvents,\n      plugins: {\n        tooltip: {\n          callbacks: {\n            label: function (tooltip) {\n              return `KP-индекс: ${tooltip.formattedValue}`\n            }\n          }\n        },\n        legend: {\n          display: false,\n        }\n      },\n      scales: {\n        y: {\n          title: {\n            display: chartYScaleDisplay,\n            text: 'KP-индекс',\n            padding: chartTitlesPadding\n          },\n          beginAtZero: true,\n          max: 9,\n          ticks: {\n            stepSize: 1\n          }\n        },\n        x: {\n          title: {\n            display: true,\n            text: 'Даты',\n            padding: chartTitlesPadding\n          },\n          ticks: {\n            font: {\n              size: chartXAxisLabelFontSize\n            }\n          }\n        }\n      }\n    }\n  }\n\n  try {\n    new Chart(\n      document.getElementById('month-chart'),\n      config\n    )\n  } catch (error) {\n    console.error(`Ошибка рендеринга графика месячного прогноза: ${error}`)\n  }\n}\n","import {Chart, registerables} from '../dist/chart.mjs';\n\nChart.register(...registerables);\n\nexport default Chart;\n","/*!\n * Chart.js v3.9.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as log10, A as _factorize, B as finiteOrDefault, C as callback, D as _addGrace, E as _limitValue, F as toDegrees, G as _measureText, I as _int16Range, J as _alignPixel, K as toPadding, L as clipArea, M as renderText, N as unclipArea, O as toFont, Q as each, R as _toLeftRightCenter, S as _alignStartEnd, U as overrides, V as merge, W as _capitalize, X as getRelativePosition, Y as _rlookupByKey, Z as _lookupByKey, $ as _isPointInArea, a0 as getAngleFromPoint, a1 as getMaximumSize, a2 as _getParentNode, a3 as readUsedSize, a4 as throttled, a5 as supportsEventListenerOptions, a6 as _isDomSupported, a7 as descriptors, a8 as isFunction, a9 as _attachContext, aa as _createResolver, ab as _descriptors, ac as mergeIf, ad as uid, ae as debounce, af as retinaScale, ag as clearCanvas, ah as setsEqual, ai as _elementsEqual, aj as _isClickEvent, ak as _isBetween, al as _readValueToProps, am as _updateBezierControlPoints, an as _computeSegments, ao as _boundSegments, ap as _steppedInterpolation, aq as _bezierInterpolation, ar as _pointInLine, as as _steppedLineTo, at as _bezierCurveTo, au as drawPoint, av as addRoundedRectPath, aw as toTRBL, ax as toTRBLCorners, ay as _boundSegment, az as _normalizeAngle, aA as getRtlAdapter, aB as overrideTextDirection, aC as _textX, aD as restoreTextDirection, aE as drawPointLegend, aF as noop, aG as distanceBetweenPoints, aH as _setMinAndMaxByKey, aI as niceNum, aJ as almostWhole, aK as almostEquals, aL as _decimalPlaces, aM as _longestText, aN as _filterBetween, aO as _lookup } from './chunks/helpers.segment.mjs';\nexport { d as defaults } from './chunks/helpers.segment.mjs';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || (elapsed < duration));\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n    return range;\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndex.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n      if (isHorizontal) {\n        x = pixel;\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign: tickTextAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {chart, ctx, options: {grid}} = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass ScatterController extends DatasetController {\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    if (this.options.showLine) {\n      const {dataset: line, _dataset} = meta;\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n    this.updateElements(points, start, count, mode);\n  }\n  addElements() {\n    const {showLine} = this.options;\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = registry.getElement('line');\n    }\n    super.addElements();\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  init(chartOptions) {}\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  evaluateInteractionItems,\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n  return {plugins, localIds};\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.9.1\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {mode});\n    this._layers.sort(compare2Level('z', '_idx'));\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n    this.render();\n  }\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n    this.notifyPlugins('afterDestroy');\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    each(this.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n    if (inChartArea) {\n      this._lastEvent = null;\n      callback(options.onHover, [e, active, this], this);\n      if (isClick) {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end, circular) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  if (circular) {\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle, circular) {\n  const {options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle, circular);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n  circular: true,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || (this.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (!meta.controller.supportsDecimation) {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n  return target;\n}\nfunction _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\nfunction _getTargetValue(fill, scale, startValue) {\n  let value;\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n\nfunction _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n\nfunction _getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return _createBoundaryLine(boundary, line);\n}\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n  if (isNumberFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n  return null;\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\nvar index = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {options, ctx} = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n      this._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart || config._chart;\n    this._chart = this.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : (labelColors.borderWidth || 1);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  _willRender() {\n    return !!this.opacity;\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n    const positionChanged = this._positionChanged(active, e);\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n    if (options.reverse) {\n      active.reverse();\n    }\n    return active;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n      if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n        return;\n      }\n      tooltip.draw(chart.ctx);\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid} = opts;\n    const labelCount = this._pointLabels.length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    adapter.init(opts);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  afterAutoSkip() {\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return (this._cache.data = this.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n","/*!\n * Chart.js v3.9.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nfunction noop() {}\nconst uid = (function() {\n  let id = 0;\n  return function() {\n    return id++;\n  };\n}());\nfunction isNullOrUndef(value) {\n  return value === null || typeof value === 'undefined';\n}\nfunction isArray(value) {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\nfunction isObject(value) {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\nconst isNumberFinite = (value) => (typeof value === 'number' || value instanceof Number) && isFinite(+value);\nfunction finiteOrDefault(value, defaultValue) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\nfunction valueOrDefault(value, defaultValue) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : value / dimension;\nconst toDimension = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\nfunction callback(fn, args, thisArg) {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n  let i, len, keys;\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\nfunction _elementsEqual(a0, a1) {\n  let i, ilen, v0, v1;\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction clone$1(source) {\n  if (isArray(source)) {\n    return source.map(clone$1);\n  }\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone$1(source[keys[k]]);\n    }\n    return target;\n  }\n  return source;\n}\nfunction isValidKey(key) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\nfunction _merger(key, target, source, options) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone$1(sval);\n  }\n}\nfunction merge(target, source, options) {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n  if (!isObject(target)) {\n    return target;\n  }\n  options = options || {};\n  const merger = options.merger || _merger;\n  for (let i = 0; i < ilen; ++i) {\n    source = sources[i];\n    if (!isObject(source)) {\n      continue;\n    }\n    const keys = Object.keys(source);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, source, options);\n    }\n  }\n  return target;\n}\nfunction mergeIf(target, source) {\n  return merge(target, source, {merger: _mergerIf});\n}\nfunction _mergerIf(key, target, source) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone$1(sval);\n  }\n}\nfunction _deprecated(scope, value, previous, current) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n\t\t\t'\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\nconst keyResolvers = {\n  '': v => v,\n  x: o => o.x,\n  y: o => o.y\n};\nfunction resolveObjectKey(obj, key) {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\nfunction _getKeyResolver(key) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\nfunction _splitKey(key) {\n  const parts = key.split('.');\n  const keys = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\nfunction _capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value) => typeof value !== 'undefined';\nconst isFunction = (value) => typeof value === 'function';\nconst setsEqual = (a, b) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n  return true;\n};\nfunction _isClickEvent(e) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\nconst PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction niceNum(range) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\nfunction _factorize(value) {\n  const result = [];\n  const sqrt = Math.sqrt(value);\n  let i;\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) {\n    result.push(sqrt);\n  }\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostEquals(x, y, epsilon) {\n  return Math.abs(x - y) < epsilon;\n}\nfunction almostWhole(x, epsilon) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\nfunction _setMinAndMaxByKey(array, target, property) {\n  let i, ilen, value;\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\nfunction toRadians(degrees) {\n  return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n  return radians * (180 / PI);\n}\nfunction _decimalPlaces(x) {\n  if (!isNumberFinite(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n  if (angle < (-0.5 * PI)) {\n    angle += TAU;\n  }\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\nfunction _angleDiff(a, b) {\n  return (a - b + PITAU) % TAU - PI;\n}\nfunction _normalizeAngle(a) {\n  return (a % TAU + TAU) % TAU;\n}\nfunction _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\nfunction _limitValue(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\nfunction _int16Range(value) {\n  return _limitValue(value, -32768, 32767);\n}\nfunction _isBetween(value, start, end, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid;\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n  return {lo, hi};\n}\nconst _lookupByKey = (table, key, value, last) =>\n  _lookup(table, value, last\n    ? index => table[index][key] <= value\n    : index => table[index][key] < value);\nconst _rlookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] >= value);\nfunction _filterBetween(values, min, max) {\n  let start = 0;\n  let end = values.length;\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\nfunction listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n        return res;\n      }\n    });\n  });\n}\nfunction unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n  if (listeners.length > 0) {\n    return;\n  }\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n  delete array._chartjs;\n}\nfunction _arrayUnique(items) {\n  const set = new Set();\n  let i, ilen;\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n  if (set.size === ilen) {\n    return items;\n  }\n  return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\nconst requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\nfunction throttled(fn, thisArg, updateFn) {\n  const updateArgs = updateFn || ((args) => Array.prototype.slice.call(args));\n  let ticking = false;\n  let args = [];\n  return function(...rest) {\n    args = updateArgs(rest);\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\nfunction debounce(fn, delay) {\n  let timeout;\n  return function(...args) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\nconst _toLeftRightCenter = (align) => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\nconst _alignStartEnd = (align, start, end) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\nconst _textX = (align, left, right, rtl) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\nfunction _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nconst atEdge = (t) => t === 0 || t === 1;\nconst elasticIn = (t, s, p) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\nconst effects = {\n  linear: t => t,\n  easeInQuad: t => t * t,\n  easeOutQuad: t => -t * (t - 2),\n  easeInOutQuad: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n  easeInCubic: t => t * t * t,\n  easeOutCubic: t => (t -= 1) * t * t + 1,\n  easeInOutCubic: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n  easeInQuart: t => t * t * t * t,\n  easeOutQuart: t => -((t -= 1) * t * t * t - 1),\n  easeInOutQuart: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n  easeInQuint: t => t * t * t * t * t,\n  easeOutQuint: t => (t -= 1) * t * t * t * t + 1,\n  easeInOutQuint: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n  easeInSine: t => -Math.cos(t * HALF_PI) + 1,\n  easeOutSine: t => Math.sin(t * HALF_PI),\n  easeInOutSine: t => -0.5 * (Math.cos(PI * t) - 1),\n  easeInExpo: t => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n  easeOutExpo: t => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n  easeInOutExpo: t => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n  easeInCirc: t => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n  easeOutCirc: t => Math.sqrt(1 - (t -= 1) * t),\n  easeInOutCirc: t => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n  easeInElastic: t => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n  easeOutElastic: t => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n  easeInOutElastic(t) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n  easeInBack(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack(t) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack(t) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n  easeInBounce: t => 1 - effects.easeOutBounce(1 - t),\n  easeOutBounce(t) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n  easeInOutBounce: t => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n};\n\n/*!\n * @kurkle/color v0.2.1\n * https://github.com/kurkle/color#readme\n * (c) 2022 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nfunction isPatternOrGradient(value) {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n  return false;\n}\nfunction color(value) {\n  return isPatternOrGradient(value) ? value : index_esm(value);\n}\nfunction getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : index_esm(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\nfunction getScope$1(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope$1(root, scope), values);\n  }\n  return merge(getScope$1(root, ''), scope);\n}\nclass Defaults {\n  constructor(_descriptors) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n    this.describe(_descriptors);\n  }\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n  get(scope) {\n    return getScope$1(this, scope);\n  }\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope$1(this, scope);\n    const targetScopeObject = getScope$1(this, targetScope);\n    const privateName = '_' + name;\n    Object.defineProperties(scopeObject, {\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n}\nvar defaults = new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n});\n\nfunction toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\nfunction _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n  ctx.save();\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n  ctx.restore();\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\nfunction _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\nfunction clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n  ctx.save();\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n  drawPointLegend(ctx, options, x, y, null);\n}\nfunction drawPointLegend(ctx, options, x, y, w) {\n  let type, xOffset, yOffset, size, cornerRadius, width;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n  ctx.beginPath();\n  switch (style) {\n  default:\n    if (w) {\n      ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n    } else {\n      ctx.arc(x, y, radius, 0, TAU);\n    }\n    ctx.closePath();\n    break;\n  case 'triangle':\n    ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      width = w ? w / 2 : size;\n      ctx.rect(x - width, y - size, 2 * width, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n  case 'rectRot':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n  case 'cross':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'star':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    rad += QUARTER_PI;\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'line':\n    xOffset = w ? w / 2 : Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n    break;\n  }\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\nfunction _isPointInArea(point, area, margin) {\n  margin = margin || 0.5;\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\nfunction clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\nfunction unclipArea(ctx) {\n  ctx.restore();\n}\nfunction _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\nfunction _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\nfunction renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n    y += font.lineHeight;\n  }\n  ctx.restore();\n}\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\nfunction addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n  ctx.lineTo(x + w, y + radius.topRight);\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n  ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\nconst FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\nfunction toLineHeight(value, size) {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n  value = +matches[2];\n  switch (matches[3]) {\n  case 'px':\n    return value;\n  case '%':\n    value /= 100;\n    break;\n  }\n  return size * value;\n}\nconst numberOrZero = v => +v || 0;\nfunction _readValueToProps(value, props) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\nfunction toTRBL(value) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\nfunction toTRBLCorners(value) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\nfunction toPadding(value) {\n  const obj = toTRBL(value);\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n  return obj;\n}\nfunction toFont(options, fallback) {\n  options = options || {};\n  fallback = fallback || defaults.font;\n  let size = valueOrDefault(options.size, fallback.size);\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = '';\n  }\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n  font.string = toFontString(font);\n  return font;\n}\nfunction resolve(inputs, context, index, info) {\n  let cacheable = true;\n  let i, ilen, value;\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\nfunction _addGrace(minmax, grace, beginAtZero) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value, add) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\nfunction createContext(parentContext, context) {\n  return Object.assign(Object.create(parentContext), context);\n}\n\nfunction _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete target._keys;\n      delete scopes[0][prop];\n      return true;\n    },\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value;\n      delete target._keys;\n      return true;\n    }\n  });\n}\nfunction _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete proxy[prop];\n      return true;\n    },\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n    set(target, prop, value) {\n      proxy[prop] = value;\n      delete target[prop];\n      return true;\n    }\n  });\n}\nfunction _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n  const value = resolve();\n  target[prop] = value;\n  return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop];\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      return null;\n    }\n  }\n  return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    return value;\n  }\n  return target;\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array(count);\n  let i, ilen, index, item;\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i) => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis) => indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n  const fa = t * s01;\n  const fb = t * s12;\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\nfunction monotoneAdjust(points, deltaK, mK) {\n  const pointsLen = points.length;\n  let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\nfunction splineCurveMonotone(points, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK = Array(pointsLen).fill(0);\n  const mK = Array(pointsLen);\n  let i, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n      : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n      : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n  monotoneAdjust(points, deltaK, mK);\n  monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n  return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\nfunction _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n  let i, ilen, point, controlPoints;\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n\nfunction _isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction _getParentNode(domNode) {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = parent.host;\n  }\n  return parent;\n}\nfunction parseMaxStyle(styleValue, node, parentProperty) {\n  let valueInPixels;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n    if (styleValue.indexOf('%') !== -1) {\n      valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n  return valueInPixels;\n}\nconst getComputedStyle = (element) => window.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n  return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles, style, suffix) {\n  const result = {};\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\nconst useOffsetPos = (x, y, target) => (x > 0 || y > 0) && (!target || !target.shadowRoot);\nfunction getCanvasPosition(e, canvas) {\n  const touches = e.touches;\n  const source = touches && touches.length ? touches[0] : e;\n  const {offsetX, offsetY} = source;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\nfunction getRelativePosition(evt, chart) {\n  if ('native' in evt) {\n    return evt;\n  }\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(evt, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\nfunction getContainerSize(canvas, width, height) {\n  let maxWidth, maxHeight;\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect();\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\nconst round1 = v => Math.round(v * 10) / 10;\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    height = round1(width / 2);\n  }\n  return {\n    width,\n    height\n  };\n}\nfunction retinaScale(chart, forceRatio, forceStyle) {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n  chart.height = deviceHeight / pixelRatio;\n  chart.width = deviceWidth / pixelRatio;\n  const canvas = chart.canvas;\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\nconst supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() {\n        passiveSupported = true;\n        return false;\n      }\n    };\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n  }\n  return passiveSupported;\n}());\nfunction readUsedSize(element, property) {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n\nfunction _pointInLine(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\nfunction _steppedInterpolation(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n    : mode === 'after' ? t < 1 ? p1.y : p2.y\n    : t > 0 ? p2.y : p1.y\n  };\n}\nfunction _bezierInterpolation(p1, p2, t, mode) {\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\nfunction formatNumber(num, locale, options) {\n  return getNumberFormat(locale, options).format(num);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\nconst getLeftToRightAdapter = function() {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) {\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) {\n      return x;\n    },\n  };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n  let style, original;\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n    style.setProperty('direction', direction, 'important');\n    ctx.prevTextDirection = original;\n  }\n}\nfunction restoreTextDirection(ctx, original) {\n  if (original !== undefined) {\n    delete ctx.prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  let {start, end, loop} = segment;\n  let i, ilen;\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\nfunction _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n    if (point.skip) {\n      continue;\n    }\n    value = normalize(point[property]);\n    if (value === prevValue) {\n      continue;\n    }\n    inside = between(value, startBound, endBound);\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n  return result;\n}\nfunction _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n  if (loop && !spanGaps) {\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n  while (start < count && points[start].skip) {\n    start++;\n  }\n  start %= count;\n  if (loop) {\n    end += start;\n  }\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n  end %= count;\n  return {start, end};\n}\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n  return result;\n}\nfunction _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n  if (!count) {\n    return [];\n  }\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n  return result;\n}\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nexport { _isPointInArea as $, _factorize as A, finiteOrDefault as B, callback as C, _addGrace as D, _limitValue as E, toDegrees as F, _measureText as G, HALF_PI as H, _int16Range as I, _alignPixel as J, toPadding as K, clipArea as L, renderText as M, unclipArea as N, toFont as O, PI as P, each as Q, _toLeftRightCenter as R, _alignStartEnd as S, TAU as T, overrides as U, merge as V, _capitalize as W, getRelativePosition as X, _rlookupByKey as Y, _lookupByKey as Z, _arrayUnique as _, resolve as a, toLineHeight as a$, getAngleFromPoint as a0, getMaximumSize as a1, _getParentNode as a2, readUsedSize as a3, throttled as a4, supportsEventListenerOptions as a5, _isDomSupported as a6, descriptors as a7, isFunction as a8, _attachContext as a9, getRtlAdapter as aA, overrideTextDirection as aB, _textX as aC, restoreTextDirection as aD, drawPointLegend as aE, noop as aF, distanceBetweenPoints as aG, _setMinAndMaxByKey as aH, niceNum as aI, almostWhole as aJ, almostEquals as aK, _decimalPlaces as aL, _longestText as aM, _filterBetween as aN, _lookup as aO, isPatternOrGradient as aP, getHoverColor as aQ, clone$1 as aR, _merger as aS, _mergerIf as aT, _deprecated as aU, _splitKey as aV, toFontString as aW, splineCurve as aX, splineCurveMonotone as aY, getStyle as aZ, fontString as a_, _createResolver as aa, _descriptors as ab, mergeIf as ac, uid as ad, debounce as ae, retinaScale as af, clearCanvas as ag, setsEqual as ah, _elementsEqual as ai, _isClickEvent as aj, _isBetween as ak, _readValueToProps as al, _updateBezierControlPoints as am, _computeSegments as an, _boundSegments as ao, _steppedInterpolation as ap, _bezierInterpolation as aq, _pointInLine as ar, _steppedLineTo as as, _bezierCurveTo as at, drawPoint as au, addRoundedRectPath as av, toTRBL as aw, toTRBLCorners as ax, _boundSegment as ay, _normalizeAngle as az, isArray as b, PITAU as b0, INFINITY as b1, RAD_PER_DEG as b2, QUARTER_PI as b3, TWO_THIRDS_PI as b4, _angleDiff as b5, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, createContext as h, isObject as i, defined as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, log10 as z };\n","import { monthChartBuilder } from './charts.js'\n\n(async () => {\n  try {\n    const response = await fetch('https://services.swpc.noaa.gov/text/27-day-outlook.txt')\n    const textForecast = await response.text()\n    const resultForecast = monthTableFiller(textForecast)\n\n    monthChartBuilder(resultForecast)\n  } catch (error) {\n    console.error(`Ошибка в создании месячного прогноза: ${error}`)\n  }\n})();\n\nfunction monthTableFiller(data) {\n  const startOfForecastTable = new RegExp('\\\\n2[0-9]+', 'g')\n  const indexOfStart = data.search(startOfForecastTable)\n\n  if (startOfForecastTable === -1) {\n    throw new Error('Не удалось найти начало таблицы месячного прогноза')\n  }\n\n  const crudeForecast = data.slice(indexOfStart, data.length)\n  const treatedForecast = crudeForecast\n    .replaceAll(/\\n+/g, '     ') // Заменяем знаки разрыва строки на 5 пробелов\n    .replaceAll(/\\s{10}/g, '     ') // Заменяем места, где 10 пробелов, на 5 пробелов\n    .trim()\n    .split('     ') // Создаём массив, разбивая строку по 5 пробелов\n\n  const monthChartData = []\n  const monthChartLabels = []\n\n  for (let i = 3; i < treatedForecast.length; i += 4) {\n    const value = Number(treatedForecast[i])\n\n    monthChartData.push(value)\n  }\n\n  for (let i = 0; i <= 105; i += 4) {\n    monthChartLabels.push(treatedForecast[i])\n  }\n\n  const MONTHS_TRANSLATION = {\n    Jan: 'Янв', Feb: 'Фев', Mar: 'Мар', Apr: 'Апр',\n    May: 'Май', Jun: 'Июн', Jul: 'Июл', Aug: 'Авг',\n    Sep: 'Сен', Oct: 'Окт', Nov: 'Ноя', Dec: 'Дек'\n  }\n\n  const translatedLabels = monthChartLabels.map((date) => {\n    const engMonth = date.slice(5, 8)\n    const ruMonth = MONTHS_TRANSLATION[engMonth]\n\n    return date.slice(5).replace(engMonth, ruMonth)\n  })\n\n  return { monthChartData, translatedLabels }\n}\n","const testWrapper = document.querySelector('.test__wrapper')\nconst testButton = document.querySelector('.test__button')\n\ntestButton.addEventListener('click', () => {\n  testWrapper.classList.toggle('test__wrapper_closed')\n\n  const isTestWrapperOpened = !testWrapper.classList.contains('test__wrapper_closed')\n\n  if (isTestWrapperOpened) {\n    testButton.textContent = 'Свернуть -'\n  } else {\n    testButton.textContent = 'Развернуть +'\n  }\n})\n","class Test {\n  constructor(questions, grades, tips) {\n    this.questions = questions\n    this.grades = grades\n    this.tips = tips\n    this.answers = new Object()\n    this.questionNumber = 0 // Счётчик вопросов, начинается с нуля для правильного поиска по массиву вопросов\n    this.progressCount = 1 // Счётчик прогресса внизу теста, начинается с единицы, т.к. привычный для всех счёт начинается тоже с единицы\n  }\n\n  Next(question, answer, answerButtons, progress) {\n    this.answers[this.questionNumber] = {\n      answerType: answer\n    }\n\n    this.progressCount++\n    this.questionNumber++\n\n    if (this.questionNumber < 7) {\n      question.textContent = this.questions[this.questionNumber]\n      progress.textContent = `${this.progressCount}/7`\n    } else {\n      this.End(question, answerButtons, progress)\n    }\n  }\n\n  End(question, answerButtons, progress) {\n    let questionIndexes = new Array()\n\n    for (let answer in this.answers) {\n      if (this.answers[answer].answerType === 'disagree') {\n        questionIndexes.push(answer) // Подводим итог теста. Собираем индексы вопросов, где ответ был «Нет»\n      }\n    }\n\n    switch (true) { // Выводим оценку\n      case (questionIndexes.length === 0):\n        question.textContent = this.grades[0]\n        break\n      case (3 > questionIndexes.length > 0):\n        question.textContent = this.grades[1]\n        break\n      case (questionIndexes.length > 3):\n        question.textContent = this.grades[2]\n        break\n      default:\n        question.textContent = this.grades[1]\n        break\n    }\n\n    answerButtons.forEach(button => button.classList.add('test__answer_hidden'))\n    progress.textContent = 'Финиш'\n\n    if (questionIndexes.length === 0) {\n      return\n    }\n\n    const answersWrapper = document.querySelector('.test__answers')\n\n    const testInner = document.querySelector('.test__inner')\n    testInner.classList.add('test-finished')\n\n    let answerNumber = 1\n\n    for (let questionIndex of questionIndexes) {\n      const newParagraph = document.createElement('p')\n\n      newParagraph.textContent = `${answerNumber}. ${this.tips[questionIndex]}` // Индекс вопроса совпадает с индексом совета\n\n      if (questionIndexes.length === 1) {\n        newParagraph.textContent = this.tips[questionIndex]\n      }\n\n      answersWrapper.appendChild(newParagraph)\n      answerNumber++\n    }\n  }\n}\n\nconst questions = [\n  'У вас будет свой транспорт?',\n  'Уже выбрали места для наблюдений за сиянием?',\n  'Изучили, как сделать хорошие фотографии ночью?',\n  'Погоду обещают безоблачную?',\n  'KP-индексы в дни поездки 3 и выше?',\n  'Тёплая одежда с собой?',\n  'А еда и горячие напитки?'\n]\n\nconst grades = [\n  'Всё в порядке, можно смело ехать. И добавить нечего.',\n  'Неплохо, но есть над чем поработать:',\n  'Вы полны энтузиазма, но подготовка хромает:'\n]\n\nconst tips = [\n  'Без своего транспорта почти никак. Можно греться или уехать из под внезапных туч',\n  'Если выбрать места для наблюдений заранее, не придётся искать точку посреди кромешной тьмы',\n  'Приятнее, когда можно фотографировать сияние сразу, а не разбираться на месте в настройках. Почитайте гайды или туториалы по ночной съёмке',\n  'Даже если прогноз KP-индексов хороший, тучи легко перекроют весь вид. Планировать поездку стоит на ясные дни',\n  'Если KP-индексы на дни поездки низкие, сияние будет выглядеть как беловатые разводы в небе, а не яркие зелёные волны',\n  'Без теплой одежды можно легко замерзнуть, одевайтесь как на долгую прогулку',\n  'На холоде приятно иметь согревающие напитки, вроде чая или кофе. А еда поможет не терять силы'\n]\n\nconst test = new Test(questions, grades, tips) // Инстанцируем класс\n\nconst question = document.querySelector('.test__question')\nconst answerButtons = document.querySelectorAll('.test__answer')\nconst progress = document.querySelector('.test__progress')\n\nanswerButtons.forEach(button => button.addEventListener('click', testHandler))\n\nfunction testHandler(event) {\n  const answer = event.target.id\n\n  setTimeout(() => {\n    test.Next(question, answer, answerButtons, progress) // На клик по кнопкам запускаем метод Next с небольшой задержкой\n  }, 70)\n}\n"],"names":["$97ecbd121be4860b$var$names","id","localStorage","cookieNotification","cookieBanner","document","querySelector","cookieButton","classList","replace","addEventListener","setItem","Date","once","$9463ba52c520f603$var$menu","$9463ba52c520f603$var$menuButton","toggle","$9463ba52c520f603$var$closeMenu","remove","add","$5bed2ca21484f679$var$scrollView","event","preventDefault","currentTarget","hash","scrollIntoView","$97ecbd121be4860b$export$cf2f7c5792f80b46","contains","target","matches","$5bed2ca21484f679$var$navLinks","querySelectorAll","forEach","link","$97ecbd121be4860b$export$4c3d22f3d993c33f","$97ecbd121be4860b$export$342063e11d6c3cad","value","$97ecbd121be4860b$export$8b22cf2602fb60ce","Array","isArray","type","Object","prototype","toString","call","slice","$97ecbd121be4860b$export$23f2a1d2818174ef","$97ecbd121be4860b$export$39b482c5e57630a8","Number","isFinite","$97ecbd121be4860b$export$ef35774e6d314e91","defaultValue","$97ecbd121be4860b$export$90a7f3efeed30595","$97ecbd121be4860b$export$7ccc53e8f1e7dfc5","dimension","endsWith","parseFloat","$97ecbd121be4860b$export$e7094788287c5e9b","fn","args","thisArg","apply","$97ecbd121be4860b$export$3722cfe417b6ed86","loopable","reverse","i","len","keys","length","$97ecbd121be4860b$export$f38c853ae54ed474","a0","a1","ilen","v0","v1","datasetIndex","index","$97ecbd121be4860b$export$738ab4df8bf92ae9","source","map","create","klen","k","$97ecbd121be4860b$var$isValidKey","key","indexOf","$97ecbd121be4860b$export$d377dcb2b61d6c4e","options","tval","sval","$97ecbd121be4860b$export$e7c866399fa523f5","sources","merger","$97ecbd121be4860b$export$2219238a014317b0","$97ecbd121be4860b$export$667d3bf0c5f83305","hasOwnProperty","$97ecbd121be4860b$var$keyResolvers","v","x","o","y","$97ecbd121be4860b$export$2d1720544b23b823","obj","resolver","$97ecbd121be4860b$var$_getKeyResolver","$97ecbd121be4860b$export$1ee57be6f6687d2c","parts","split","tmp","part","push","$97ecbd121be4860b$export$71cec2538cb2c617","str","charAt","toUpperCase","$97ecbd121be4860b$export$35e795649ee09318","$97ecbd121be4860b$export$c3950d9923825c02","$97ecbd121be4860b$export$995eb9fca571757","a","b","size","item","has","$97ecbd121be4860b$export$56c0d5a1e737357d","Math","PI","$97ecbd121be4860b$export$971d5caa766a69d7","$97ecbd121be4860b$export$8c78c7c36408ea29","$97ecbd121be4860b$export$d29e374196577086","$97ecbd121be4860b$export$2ec5befb9e6c97d4","$97ecbd121be4860b$export$7f8ddf7c7c20b3cd","$97ecbd121be4860b$export$53c86fa97d611818","$97ecbd121be4860b$export$39c1cc7c062529d4","$97ecbd121be4860b$export$df995fae86a55f06","log10","$97ecbd121be4860b$export$2408f22a0fab9ae5","sign","$97ecbd121be4860b$export$b9a6b53f9be3734","range","roundedRange","round","niceRange","pow","floor","$97ecbd121be4860b$export$23ebac1979863676","fraction","niceFraction","$97ecbd121be4860b$export$d141bba7fdc215a3","n","isNaN","epsilon","abs","$97ecbd121be4860b$export$a33b77bbdbb8366c","array","property","min","max","$97ecbd121be4860b$export$625550452a3fa3ec","degrees","$97ecbd121be4860b$export$91477dc880baac21","e","p","$97ecbd121be4860b$export$34aec0b863436764","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","$97ecbd121be4860b$export$53a70dd1ebbae346","pt1","pt2","$97ecbd121be4860b$export$7a0bdf7d4a91ea88","$97ecbd121be4860b$export$3d12bd131bb975d1","$97ecbd121be4860b$export$ffb5f4729a158638","start","end","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","$97ecbd121be4860b$export$a9c23c6ac3fc3eca","$97ecbd121be4860b$export$21579262ef46735b","$97ecbd121be4860b$export$c03999cb2f36933f","table","cmp","mid","hi","lo","$97ecbd121be4860b$export$dc98b0b04f4c7758","last","$97ecbd121be4860b$export$8743009a87fcb00f","$97ecbd121be4860b$var$arrayEvents","$97ecbd121be4860b$export$3b14a55fb2447963","listener","stub","_chartjs","listeners","splice","$97ecbd121be4860b$export$71511d61b312f219","items","set","Set","from","$97ecbd121be4860b$export$43caf9889c228507","window","callback","requestAnimationFrame","$97ecbd121be4860b$export$efca4cbe5dd06740","updateFn","updateArgs","ticking","rest","$97ecbd121be4860b$export$db202ddc8be9136","align","$97ecbd121be4860b$export$25ce5a424b770e84","$97ecbd121be4860b$export$9e5f44173e64f162","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","$97ecbd121be4860b$export$efccba1c4a2ef57b","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","assign","$97ecbd121be4860b$var$atEdge","t","$97ecbd121be4860b$var$elasticIn","sin","$97ecbd121be4860b$var$elasticOut","$97ecbd121be4860b$export$f1e1789686576879","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","m","d","easeInOutBounce","$97ecbd121be4860b$var$round","$97ecbd121be4860b$var$lim","l","h","$97ecbd121be4860b$var$p2b","$97ecbd121be4860b$var$n2b","$97ecbd121be4860b$var$b2n","$97ecbd121be4860b$var$n2p","$97ecbd121be4860b$var$map$1","A","B","C","D","E","F","c","f","$97ecbd121be4860b$var$hex","$97ecbd121be4860b$var$h1","$97ecbd121be4860b$var$h2","$97ecbd121be4860b$var$eq","$97ecbd121be4860b$var$HUE_RE","$97ecbd121be4860b$var$hsl2rgbn","$97ecbd121be4860b$var$hsv2rgbn","$97ecbd121be4860b$var$hwb2rgbn","w","rgb","$97ecbd121be4860b$var$rgb2hsl","r","g","$97ecbd121be4860b$var$calln","$97ecbd121be4860b$var$hue","$97ecbd121be4860b$var$map","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","$97ecbd121be4860b$var$names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","$97ecbd121be4860b$var$RGB_RE","$97ecbd121be4860b$var$to","$97ecbd121be4860b$var$from","$97ecbd121be4860b$var$modHSL","ratio","$97ecbd121be4860b$var$clone","proto","$97ecbd121be4860b$var$fromObject","input","$97ecbd121be4860b$var$Color","ret","$97ecbd121be4860b$var$hexParse","$97ecbd121be4860b$var$nameParse","$97ecbd121be4860b$var$unpack","j","ok","nk","unpacked","tkeys","parseInt","transparent","toLowerCase","$97ecbd121be4860b$var$rgbParse","exec","$97ecbd121be4860b$var$hueParse","p1","p2","_rgb","_valid","valid","rgbString","undefined","hexString","$97ecbd121be4860b$var$isShort","hslString","$97ecbd121be4860b$var$hslString","mix","color","weight","w2","c1","c2","w1","interpolate","$97ecbd121be4860b$var$interpolate","rgb1","rgb2","clone","alpha","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","$97ecbd121be4860b$export$2ed0fc6709e59212","$97ecbd121be4860b$export$db3b6bfb95261072","$97ecbd121be4860b$export$f96d196f7728bb5","$97ecbd121be4860b$var$index_esm","$97ecbd121be4860b$export$3a6d5c9ae78a2c08","$97ecbd121be4860b$export$a93c5207d687da10","$97ecbd121be4860b$var$getScope$1","node","$97ecbd121be4860b$var$set","root","scope","values","$97ecbd121be4860b$export$4368d992c4eafac0","_descriptors","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","chart","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","get","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","_scriptable","startsWith","_indexable","_fallback","$97ecbd121be4860b$export$2329c99376c9d0a4","data","gc","longest","string","textWidth","measureText","width","$97ecbd121be4860b$export$b4171a6734a65d42","pixel","currentDevicePixelRatio","halfWidth","$97ecbd121be4860b$export$ee7c8ad385a60b7b","canvas","getContext","save","resetTransform","clearRect","height","restore","$97ecbd121be4860b$export$1fbe638ecf81657e","$97ecbd121be4860b$export$158acd800e1ef08b","xOffset","yOffset","cornerRadius","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","$97ecbd121be4860b$export$3d8c2f653ac9d0b9","point","area","margin","left","right","top","bottom","$97ecbd121be4860b$export$61196ced6d74a310","clip","$97ecbd121be4860b$export$a07804094c3ecf2d","$97ecbd121be4860b$export$6554612db691658e","previous","flip","midpoint","$97ecbd121be4860b$export$493d36ec626b6698","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","$97ecbd121be4860b$export$3a1a48c8f6ef640e","text","opts","line","lines","strokeWidth","strokeColor","translation","fillStyle","textAlign","textBaseline","strokeStyle","lineWidth","strokeText","maxWidth","fillText","$97ecbd121be4860b$var$decorateText","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","$97ecbd121be4860b$export$d66dc83d8cfc8dd","topLeft","bottomLeft","bottomRight","topRight","$97ecbd121be4860b$var$LINE_HEIGHT","RegExp","$97ecbd121be4860b$var$FONT_STYLE","$97ecbd121be4860b$var$numberOrZero","$97ecbd121be4860b$export$ab83b03e4111b1d0","props","objProps","read","prop","$97ecbd121be4860b$export$92108d983e8ee699","$97ecbd121be4860b$export$9fa96a7d116ea3ce","$97ecbd121be4860b$export$3466f893ebf79586","$97ecbd121be4860b$export$c4ce752e73470fba","fallback","match","console","warn","$97ecbd121be4860b$export$fef3dfd9bad05307","$97ecbd121be4860b$export$407448d2b89b1813","inputs","info","cacheable","$97ecbd121be4860b$export$dda1d9f60106f0e9","parentContext","$97ecbd121be4860b$export$7910e0436ed8d1de","scopes","prefixes","rootScopes","getTarget","$97ecbd121be4860b$var$_resolve","Proxy","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","deleteProperty","_keys","$97ecbd121be4860b$var$_cached","$97ecbd121be4860b$var$_resolveWithPrefixes","proxy","prefix","$97ecbd121be4860b$var$readKey","$97ecbd121be4860b$var$needsSubResolver","$97ecbd121be4860b$var$createSubResolver","getOwnPropertyDescriptor","Reflect","getPrototypeOf","$97ecbd121be4860b$var$getKeysFromAllScopes","includes","ownKeys","storage","_storage","$97ecbd121be4860b$export$a9c996f45e5784d0","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","$97ecbd121be4860b$export$555508cbc6add439","setContext","receiver","$97ecbd121be4860b$var$_resolveWithContext","descriptors","isScriptable","$97ecbd121be4860b$var$_resolveScriptable","Error","join","delete","$97ecbd121be4860b$var$_resolveArray","isIndexable","arr","filter","allKeys","configurable","defaults","scriptable","indexable","_allKeys","resolve","$97ecbd121be4860b$var$getScope","parent","parentScopes","allScopes","$97ecbd121be4860b$var$addScopesFromKey","$97ecbd121be4860b$var$subGetTarget","$97ecbd121be4860b$var$addScopes","parentFallback","$97ecbd121be4860b$var$resolveKeysFromAllScopes","$97ecbd121be4860b$export$4a5767248b18ef41","_parsing","parsed","parse","$97ecbd121be4860b$var$EPSILON","EPSILON","$97ecbd121be4860b$var$getPoint","skip","$97ecbd121be4860b$var$getValueAxis","$97ecbd121be4860b$var$capControlPoint","pt","$97ecbd121be4860b$export$2e2af4578d910ddf","$97ecbd121be4860b$export$ce26c07117d59d6a","domNode","parentNode","host","$97ecbd121be4860b$var$parseMaxStyle","styleValue","parentProperty","valueInPixels","$97ecbd121be4860b$var$getComputedStyle","element","getComputedStyle","$97ecbd121be4860b$var$positions","$97ecbd121be4860b$var$getPositionedStyle","styles","suffix","result","pos","$97ecbd121be4860b$export$78acf4525d8a74c4","evt","borderBox","boxSizing","paddings","borders","box","$97ecbd121be4860b$var$getCanvasPosition","touches","offsetX","offsetY","shadowRoot","getBoundingClientRect","clientX","clientY","$97ecbd121be4860b$var$round1","$97ecbd121be4860b$export$c9170ad7d4cd7e57","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","$97ecbd121be4860b$export$a8550f7dbe79f93a","passiveSupported","passive","removeEventListener","$97ecbd121be4860b$export$6559d589eb85fbb6","getPropertyValue","$97ecbd121be4860b$export$d24c54395ce0c509","$97ecbd121be4860b$export$2f6ca3d3b1f80bf5","$97ecbd121be4860b$export$8a5498727ef6be21","cp1","cp2","$97ecbd121be4860b$var$intlCache","Map","$97ecbd121be4860b$export$ae1af26003f05816","num","locale","$97ecbd121be4860b$var$getNumberFormat","cacheKey","JSON","stringify","formatter","Intl","NumberFormat","format","$97ecbd121be4860b$export$91c6e00c14e7e6fd","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","_itemWidth","$97ecbd121be4860b$export$9d398bebfec1c039","direction","original","getPropertyPriority","setProperty","prevTextDirection","$97ecbd121be4860b$export$24baa2b76016ce0e","$97ecbd121be4860b$var$propertyFn","between","compare","normalize","$97ecbd121be4860b$var$normalizeSegment","loop","$97ecbd121be4860b$export$28f7fcd39efa255","segment","bounds","prevValue","startBound","endBound","$97ecbd121be4860b$var$getSegment","inside","subStart","shouldStart","shouldStop","prev","$97ecbd121be4860b$export$7a38258bbe170828","segments","sub","$97ecbd121be4860b$var$splitByStyles","segmentOptions","$97ecbd121be4860b$var$doSplitByStyles","chartContext","_chart","baseStyle","$97ecbd121be4860b$var$readStyle","_datasetIndex","spanGaps","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","$1af551c56cb88ebf$export$a424a0aa8f687495","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","duration","initial","currentStep","_refresh","_update","now","remaining","running","draw","_active","_total","tick","pop","_getAnims","charts","complete","progress","listen","cb","reduce","acc","cur","_duration","stop","cancel","$1af551c56cb88ebf$var$transparent","$1af551c56cb88ebf$var$interpolators","boolean","to","factor","c0","number","$1af551c56cb88ebf$export$c35d437ae5945fcd","cfg","currentValue","_fn","_easing","easing","_start","delay","_loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","$1af551c56cb88ebf$var$animationOptions","colors","properties","numbers","resize","show","animations","visible","hide","$1af551c56cb88ebf$export$8ab227dac26677d","config","_properties","configure","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$1af551c56cb88ebf$var$resolveTargetOptions","$shared","$animations","_createAnimations","$1af551c56cb88ebf$var$awaitAll","anim","all","then","$1af551c56cb88ebf$var$scaleClip","allowedOverflow","$1af551c56cb88ebf$var$getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","$1af551c56cb88ebf$var$applyStack","stack","dsIndex","otherValue","singleMode","$1af551c56cb88ebf$var$isStacked","stacked","$1af551c56cb88ebf$var$getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","$1af551c56cb88ebf$var$updateStacks","controller","_cachedMeta","stacks","_stacks","iAxis","vAxis","indexScale","valueScale","itemStacks","$1af551c56cb88ebf$var$getOrCreateStack","stackKey","indexValue","subStack","_top","_bottom","$1af551c56cb88ebf$var$getFirstScaleId","shift","$1af551c56cb88ebf$var$clearStacks","$1af551c56cb88ebf$var$isDirectUpdateMode","$1af551c56cb88ebf$var$cloneIfNotShared","cached","shared","$1af551c56cb88ebf$export$75572ec5c55b4048","_ctx","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","initialize","linkScales","_stacked","addElements","updateIndex","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","$1af551c56cb88ebf$var$convertObjectDataToArray","adata","isExtensible","defineProperty","base","object","datasetElementType","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","applyStack","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","otherMin","otherMax","$1af551c56cb88ebf$var$getUserBounds","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","$1af551c56cb88ebf$var$defaultClip","_clip","disabled","chartArea","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","_resolveElementOptions","dataElementType","elementType","cache","sharing","datasetElementScopeKeys","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","$1af551c56cb88ebf$var$parseValue","entry","$1af551c56cb88ebf$var$parseFloatBar","startValue","endValue","barStart","barEnd","_custom","$1af551c56cb88ebf$var$parseArrayOrPrimitive","$1af551c56cb88ebf$var$isFloatBar","custom","$1af551c56cb88ebf$var$parseEdge","edge","orig","v2","$1af551c56cb88ebf$var$startEnd","$1af551c56cb88ebf$export$e97d5dc64e999004","iAxisKey","vAxisKey","bars","getBasePixel","horizontal","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","enableBorderRadius","center","$1af551c56cb88ebf$var$setBorderSkipped","borderSkipped","$1af551c56cb88ebf$var$setInflateAmount","inflateAmount","_getStacks","grouped","skipNull","_getStackCount","_getStackIndex","pixels","barThickness","$1af551c56cb88ebf$var$computeMinSampleSize","curr","$1af551c56cb88ebf$var$getAllScaleValues","_cache","$bar","visibleMetas","concat","sort","_length","updateMinAndPrev","ticks","getPixelForTick","_startPixel","_endPixel","stackCount","categoryPercentage","barPercentage","baseValue","minBarLength","actualBase","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","$1af551c56cb88ebf$var$computeFlexCategoryTraits","next","percent","chunk","$1af551c56cb88ebf$var$computeFitCategoryTraits","thickness","stackIndex","rects","overrides","_index_","offset","grid","_value_","beginAtZero","$1af551c56cb88ebf$export$19b5c4773f17abe","iPixel","vPixel","tooltip","title","$1af551c56cb88ebf$export$e04603e7d8b77172","innerRadius","outerRadius","getter","_getRotation","_getCircumference","circumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","cutout","chartWeight","_getRingWeight","ratioX","ratioY","$1af551c56cb88ebf$var$getRatioAndOffset","endAngle","startAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","aspectRatio","legend","generateLabels","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","$1af551c56cb88ebf$export$3c9b5d28c11cbfd0","_dataset","_decimated","animated","maxGapLength","directUpdate","prevParsed","nullData","border","updateControlPoints","$1af551c56cb88ebf$export$2a270b3a0d973c85","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","$1af551c56cb88ebf$export$b21a3f1286706191","$1af551c56cb88ebf$export$48dbc6ac651bf8be","_fullLoop","pointPosition","getPointPositionForValue","$1af551c56cb88ebf$export$db77ccec0bb4ccac","tooltipPosition","useFinalPosition","getProps","hasValue","final","defaultRoutes","$1af551c56cb88ebf$var$formatters","numeric","tickValue","notation","delta","maxTick","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","$1af551c56cb88ebf$var$skip","newTicks","majorStart","majorEnd","ceil","grace","drawBorder","drawOnChartArea","drawTicks","tickLength","tickWidth","tickColor","padding","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","$1af551c56cb88ebf$export$27c7467594ef87bd","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","$1af551c56cb88ebf$var$offsetFromEdge","$1af551c56cb88ebf$var$sample","numItems","increment","$1af551c56cb88ebf$var$getTickMarkLength","$1af551c56cb88ebf$var$getTitleHeight","$1af551c56cb88ebf$export$d60cfc58d3c358b6","_margins","maxHeight","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_maxLength","_longestTextCache","_reversePixels","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","init","suggestedMin","suggestedMax","metas","getPadding","getTicks","xLabels","yLabels","beforeLayout","beforeUpdate","margins","tickOpts","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","change","keepZero","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","$1af551c56cb88ebf$var$autoSkip","ticksLimit","maxTicksLimit","$1af551c56cb88ebf$var$determineMaxTicks","_tickSize","majorIndices","enabled","$1af551c56cb88ebf$var$getMajorIndices","numMajorIndices","first","$1af551c56cb88ebf$var$skipMajors","$1af551c56cb88ebf$var$calculateSpacing","evenMajorSpacing","$1af551c56cb88ebf$var$getEvenSpacing","diff","factors","avgMajorSpacing","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","maxLabelDiagonal","numTicks","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","radians","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","position","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","fullSize","_computeLabelSizes","jlen","tickFont","fontString","nestedLabel","caches","widths","heights","widestLabelSize","highestLabelSize","_resolveTickFontOptions","gcLen","valueAt","idx","getValueForPixel","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","borderValue","lineValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","positionAxisID","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","$1af551c56cb88ebf$var$getPixelForGridLine","offsetGridLines","validIndex","_computeLabelItems","lineCount","textOffset","tickAndPadding","hTickAndPadding","_getXAxisLabelAlignment","_getYAxisLabelAlignment","backdrop","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","fillRect","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","lastLineWidth","drawLabels","drawTitle","titleX","titleY","$1af551c56cb88ebf$var$titleArgs","_layers","tz","z","gz","getSortedVisibleDatasetMetas","axisID","_maxDigits","fontSize","$1af551c56cb88ebf$var$TypedRegistry","isForType","isPrototypeOf","register","parentScope","$1af551c56cb88ebf$var$isIChartComponent","$1af551c56cb88ebf$var$registerDefaults","routes","itemDefaults","propertyParts","sourceName","sourceScope","unregister","$1af551c56cb88ebf$export$4bb7493d241fd8a5","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","$1af551c56cb88ebf$export$b2f2bae6713db87","$1af551c56cb88ebf$export$a6506504f799c5d5","__proto__","BarController","BubbleController","DoughnutController","LineController","PolarAreaController","PieController","RadarController","ScatterController","$1af551c56cb88ebf$var$abstract","$1af551c56cb88ebf$var$DateAdapter","chartOptions","formats","timestamp","amount","unit","startOf","weekday","endOf","members","$1af551c56cb88ebf$var$evaluateInteractionItems","handler","$1af551c56cb88ebf$var$binarySearch","metaset","lookupMethod","el","getRange","$1af551c56cb88ebf$var$getIntersectItems","isPointInArea","inRange","$1af551c56cb88ebf$var$getNearestItems","$1af551c56cb88ebf$var$getNearestCartesianItems","distanceMetric","$1af551c56cb88ebf$var$getDistanceMetricForAxis","useX","useY","minDistance","getCenterPoint","$1af551c56cb88ebf$var$getAxisItems","rangeMethod","intersectsItem","$1af551c56cb88ebf$export$a13296960cae0384","modes","nearest","$1af551c56cb88ebf$var$STATIC_POSITIONS","$1af551c56cb88ebf$var$filterByPosition","$1af551c56cb88ebf$var$filterDynamicPositionByAxis","$1af551c56cb88ebf$var$sortByWeight","$1af551c56cb88ebf$var$getCombinedMax","maxPadding","$1af551c56cb88ebf$var$updateMaxPadding","boxPadding","$1af551c56cb88ebf$var$fitBoxes","boxes","params","layout","refit","refitBoxes","$1af551c56cb88ebf$var$getMargins","positions","same","other","$1af551c56cb88ebf$var$updateDims","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","$1af551c56cb88ebf$var$setBoxDims","$1af551c56cb88ebf$var$placeBoxes","userPadding","placed","stackWeight","autoPadding","$1af551c56cb88ebf$export$1ecca0613f5e56d2","addBox","removeBox","layoutItem","minPadding","availableWidth","availableHeight","$1af551c56cb88ebf$var$buildLayoutBoxes","layoutBoxes","$1af551c56cb88ebf$var$wrapBoxes","wrap","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","verticalBoxes","horizontalBoxes","vBoxMaxWidth","hBoxMaxHeight","$1af551c56cb88ebf$var$setLayoutDims","layouts","$1af551c56cb88ebf$var$buildStacks","updatePos","$1af551c56cb88ebf$export$7b1aeb87f31f7da8","acquireContext","releaseContext","getMaximumSize","isAttached","updateConfig","$1af551c56cb88ebf$export$a40a96b24b46cf35","$1af551c56cb88ebf$var$EXPANDO_KEY","$1af551c56cb88ebf$var$EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","$1af551c56cb88ebf$var$isNullOrEmpty","$1af551c56cb88ebf$var$eventListenerOptions","$1af551c56cb88ebf$var$nodeListContains","nodeList","$1af551c56cb88ebf$var$createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","$1af551c56cb88ebf$var$createDetachObserver","$1af551c56cb88ebf$var$drpListeningCharts","$1af551c56cb88ebf$var$oldDevicePixelRatio","$1af551c56cb88ebf$var$onWindowResize","dpr","$1af551c56cb88ebf$var$createResizeObserver","container","clientWidth","ResizeObserver","contentRect","$1af551c56cb88ebf$var$releaseObserver","disconnect","$1af551c56cb88ebf$var$createProxyAndListen","$1af551c56cb88ebf$var$fromNativeEvent","native","$1af551c56cb88ebf$export$f02da7f882cf6b2e","$1af551c56cb88ebf$var$initCanvas","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","bbWidth","bbHeight","containerSize","$97ecbd121be4860b$var$getContainerSize","containerStyle","containerBorder","containerPadding","clientHeight","isConnected","$1af551c56cb88ebf$var$PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","$1af551c56cb88ebf$var$allPlugins","localIds","$1af551c56cb88ebf$var$createDescriptors","$1af551c56cb88ebf$var$pluginOpts","pluginScopeKeys","previousDescriptors","some","$1af551c56cb88ebf$var$getIndexAxis","datasetDefaults","datasetOptions","$1af551c56cb88ebf$var$determineAxis","scaleOptions","$1af551c56cb88ebf$var$initOptions","$1af551c56cb88ebf$var$mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","error","defaultId","defaultScaleOptions","defaultID","$1af551c56cb88ebf$var$initData","$1af551c56cb88ebf$var$keyCache","$1af551c56cb88ebf$var$keysCached","$1af551c56cb88ebf$var$cachedKeys","generate","$1af551c56cb88ebf$var$addIfFound","$1af551c56cb88ebf$var$Config","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","$1af551c56cb88ebf$var$getResolver","$1af551c56cb88ebf$var$needContext","$1af551c56cb88ebf$var$hasFunction","subResolver","resolverCache","$1af551c56cb88ebf$var$KNOWN_POSITIONS","$1af551c56cb88ebf$var$positionIsHorizontal","$1af551c56cb88ebf$var$compare2Level","l1","l2","$1af551c56cb88ebf$var$onAnimationsComplete","animationOptions","onComplete","$1af551c56cb88ebf$var$onAnimationProgress","onProgress","$1af551c56cb88ebf$var$getCanvas","getElementById","$1af551c56cb88ebf$var$instances","$1af551c56cb88ebf$var$getChart","$1af551c56cb88ebf$export$acaa6426d77a227e","userConfig","timeout","initialCanvas","existingChart","OffscreenCanvas","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","clearTimeout","setTimeout","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","unbindEvents","_getUniformDataChanges","intKey","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","detached","_remove","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","lastEvent","_getActiveElements","isClick","$1af551c56cb88ebf$var$invalidatePlugins","instances","$1af551c56cb88ebf$var$clipArc","pixelMargin","angleMargin","$1af551c56cb88ebf$var$rThetaToXY","theta","$1af551c56cb88ebf$var$pathArc","innerR","spacingOffset","noSpacingOuterRadius","avNogSpacingRadius","noSpacingInnerRadius","beta","angleOffset","outerStart","outerEnd","innerStart","innerEnd","$1af551c56cb88ebf$var$parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","outerStartX","outerStartY","outerEndX","outerEndY","version","getChart","$1af551c56cb88ebf$export$d48203c759d6a1fc","fullCircles","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","$1af551c56cb88ebf$var$drawArc","$1af551c56cb88ebf$var$drawBorder","inner","lineJoin","$1af551c56cb88ebf$var$drawFullCircleBorders","$1af551c56cb88ebf$var$setStyle","lineCap","$1af551c56cb88ebf$var$lineTo","$1af551c56cb88ebf$var$pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","$1af551c56cb88ebf$var$pathSegment","lineMethod","stepped","tension","cubicInterpolationMode","$1af551c56cb88ebf$var$fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","$1af551c56cb88ebf$var$_getSegmentMethod","useFastPath","$1af551c56cb88ebf$var$usePath2D","Path2D","$1af551c56cb88ebf$export$55e463fa7bcd3469","_path","_points","_segments","_pointsUpdated","controlPoints","$97ecbd121be4860b$export$e171bab687b50e0","pointBefore","pointCurrent","valueAxis","pointsLen","deltaK","mK","pointAfter","slopeDelta","$97ecbd121be4860b$var$monotoneAdjust","alphaK","betaK","tauK","squaredMagnitude","$97ecbd121be4860b$var$monotoneCompute","$97ecbd121be4860b$export$1a8f5705751d8277","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","current","capBezierPoints","$97ecbd121be4860b$var$capBezierPoints","inArea","inAreaPrev","inAreaNext","$97ecbd121be4860b$var$findStartAndEnd","completeLoop","$97ecbd121be4860b$var$solidSegments","_interpolate","interpolated","pathSegment","segmentMethod","path","$1af551c56cb88ebf$var$draw","$1af551c56cb88ebf$var$strokePathWithCache","$1af551c56cb88ebf$var$strokePathDirect","$1af551c56cb88ebf$var$inRange$1","hitRadius","$1af551c56cb88ebf$export$bd159b522b230b7a","mouseX","mouseY","inXRange","inYRange","hoverRadius","$1af551c56cb88ebf$var$getBarBounds","bar","half","$1af551c56cb88ebf$var$skipOrLimit","$1af551c56cb88ebf$var$inRange","skipX","skipY","$1af551c56cb88ebf$var$addNormalRectPath","$1af551c56cb88ebf$var$inflateRect","refRect","$1af551c56cb88ebf$export$a16ed71bf4b07672","outer","$1af551c56cb88ebf$var$boundingRects","$1af551c56cb88ebf$var$parseBorderWidth","maxW","maxH","$1af551c56cb88ebf$var$parseBorderRadius","maxR","enableBorder","addRectPath","$1af551c56cb88ebf$var$hasRadius","$1af551c56cb88ebf$export$7a5d735b2ab6389d","ArcElement","LineElement","PointElement","BarElement","$1af551c56cb88ebf$var$cleanDecimatedDataset","$1af551c56cb88ebf$var$cleanDecimatedData","$1af551c56cb88ebf$var$_getBounds","$1af551c56cb88ebf$var$_findSegmentEnd","$1af551c56cb88ebf$var$_getEdge","$1af551c56cb88ebf$var$_createBoundaryLine","boundary","$1af551c56cb88ebf$var$_pointsFromSegments","linePoints","$1af551c56cb88ebf$var$_shouldApplyFill","$1af551c56cb88ebf$var$simpleArc","$1af551c56cb88ebf$var$_drawfill","$1af551c56cb88ebf$var$_getTarget","$1af551c56cb88ebf$var$getLineByIndex","$1af551c56cb88ebf$var$_buildStackLine","sourcePoints","linesBelow","$1af551c56cb88ebf$var$getLinesBelow","below","unshift","$1af551c56cb88ebf$var$addPointsBelow","sourcePoint","postponed","$1af551c56cb88ebf$var$findPoint","pointValue","firstValue","lastValue","$1af551c56cb88ebf$var$computeCircularBoundary","$1af551c56cb88ebf$var$computeLinearBoundary","lineOpts","fillOption","above","$1af551c56cb88ebf$var$doFill","$1af551c56cb88ebf$var$clipVertical","$1af551c56cb88ebf$var$fill","clipY","lineLoop","lastPoint","src","tgt","$1af551c56cb88ebf$var$_segments","tpoints","subBounds","fillSource","notShape","$1af551c56cb88ebf$var$clipBounds","$1af551c56cb88ebf$var$interpolatedLineTo","targetLoop","interpolatedPoint","$1af551c56cb88ebf$var$getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","$1af551c56cb88ebf$var$Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","heightLimit","totalWidth","currentColWidth","currentColHeight","col","adjustHitBoxes","rtlHelper","hitbox","_draw","cursor","defaultColor","fontColor","halfFontSize","drawLegendBox","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","textDirection","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","hoveredItem","sameItem","$1af551c56cb88ebf$var$Title","_padding","textSize","_drawArgs","fontOpts","$1af551c56cb88ebf$var$map","WeakMap","$1af551c56cb88ebf$var$positioners","average","eventPosition","nearestElement","tp","$1af551c56cb88ebf$var$pushOrConcat","toPush","$1af551c56cb88ebf$var$splitNewlines","String","$1af551c56cb88ebf$var$getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","$1af551c56cb88ebf$var$determineAlignment","yAlign","$1af551c56cb88ebf$var$determineYAlign","xAlign","$1af551c56cb88ebf$var$determineXAlign","chartWidth","$1af551c56cb88ebf$var$doesNotFitWithAlign","caret","caretSize","caretPadding","$1af551c56cb88ebf$var$getBackgroundPoint","alignment","paddingAndSize","$1af551c56cb88ebf$var$alignX","$1af551c56cb88ebf$var$alignY","$1af551c56cb88ebf$var$getAlignedX","$1af551c56cb88ebf$var$overrideCallbacks","$1af551c56cb88ebf$var$Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","tooltipItems","getTitle","beforeTitle","afterTitle","getBeforeBody","getBody","bodyItems","scoped","beforeLabel","afterLabel","getAfterBody","getFooter","beforeFooter","afterFooter","_createItems","$1af551c56cb88ebf$var$createTooltipItem","itemSort","labelColor","labelPointStyle","labelTextColor","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleAlign","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","bodyColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","positioners","$1af551c56cb88ebf$export$8b3ca321c77fdea6","Decimation","algorithm","beforeElementsUpdate","decimated","xAxis","$1af551c56cb88ebf$var$getStartAndCountOfVisiblePointsSimplified","threshold","$1af551c56cb88ebf$var$lttbDecimation","maxAreaPoint","maxArea","nextA","samples","bucketWidth","sampledIndex","endIndex","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","$1af551c56cb88ebf$var$minMaxDecimation","minIndex","maxIndex","startIndex","xMin","dx","xMax","lastIndex","intermediateIndex1","intermediateIndex2","Filler","afterDatasetsUpdate","_args","$1af551c56cb88ebf$var$_decodeFill","firstCh","$1af551c56cb88ebf$var$parseFillOption","$filler","$1af551c56cb88ebf$var$_resolveTarget","propagate","visited","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","Legend","_element","afterEvent","ci","SubTitle","Title","titleBlock","Tooltip","afterInit","afterDraw","labelCount","$1af551c56cb88ebf$export$29e663ba4d09fe7","_startValue","_valueRange","_addedLabels","added","$1af551c56cb88ebf$var$findOrAddLabel","addedLabels","lastIndexOf","$1af551c56cb88ebf$var$relativeLabelSize","minSpacing","$1af551c56cb88ebf$var$LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","getTickLimit","maxTicks","stepSize","computeTickLimit","$1af551c56cb88ebf$var$generateTicks$1","generationOptions","dataRange","niceMin","niceMax","numSpaces","precision","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","rounded","decimalPlaces","$1af551c56cb88ebf$export$e7f4e5e8656f0b93","$1af551c56cb88ebf$var$isMajor","tickVal","$1af551c56cb88ebf$export$85295eaf7cb3ac3e","_zero","exp","$1af551c56cb88ebf$var$generateTicks","endExp","endSignificand","significand","$1af551c56cb88ebf$var$getTickBackdropHeight","$1af551c56cb88ebf$var$determineLimits","$1af551c56cb88ebf$var$pathRadiusLine","getPointPosition","$1af551c56cb88ebf$export$cfafc36d95386d38","drawingArea","_pointLabels","_pointLabelItems","$1af551c56cb88ebf$var$fitWithPointLabels","limits","valueCount","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","plFont","arrayOfThings","thing","nestedThing","garbageCollect","$1af551c56cb88ebf$var$updateLimits","hLimits","vLimits","setCenterPoint","$1af551c56cb88ebf$var$buildPointLabelItems","extra","outerDistance","pointLabelPosition","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","$1af551c56cb88ebf$var$drawPointLabels","backdropLeft","backdropTop","backdropWidth","backdropHeight","$1af551c56cb88ebf$var$drawRadiusLine","gridLineOpts","animate","$1af551c56cb88ebf$var$INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","$1af551c56cb88ebf$var$UNITS","$1af551c56cb88ebf$var$sorter","$1af551c56cb88ebf$var$parse","adapter","_adapter","parser","isoWeekday","_parseOpts","$1af551c56cb88ebf$var$determineUnitForAutoTicks","minUnit","capacity","interval","$1af551c56cb88ebf$var$addTick","time","timestamps","$1af551c56cb88ebf$var$ticksFromTimestamps","majorUnit","$1af551c56cb88ebf$var$setMajorTicks","$1af551c56cb88ebf$export$a894c72689ff3ec","_unit","_majorUnit","_offsets","_normalized","adapters","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","$1af551c56cb88ebf$var$determineUnitForFormatting","$1af551c56cb88ebf$var$determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","$1af551c56cb88ebf$var$interpolate","prevSource","nextSource","prevTarget","nextTarget","span","$1af551c56cb88ebf$export$85df64a8eb6dc986","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","$1af551c56cb88ebf$export$bcac1c16f1530ec2","CategoryScale","LinearScale","LogarithmicScale","RadialLinearScale","TimeScale","TimeSeriesScale","$a8e2c7184eefcdf3$var$chartTitlesPadding","$a8e2c7184eefcdf3$var$chartLabelFontSize","$a8e2c7184eefcdf3$var$chartXAxisLabelFontSize","$a8e2c7184eefcdf3$var$chartLineTension","$a8e2c7184eefcdf3$var$chartYScaleDisplay","$a8e2c7184eefcdf3$var$chartAspectRatio","$a8e2c7184eefcdf3$var$chartPointRadius","$a8e2c7184eefcdf3$var$chartInteractsEvents","$a8e2c7184eefcdf3$var$isMobile","matchMedia","$a8e2c7184eefcdf3$var$isDarkColorScheme","location","reload","response","fetch","textForecast","firstDayChartData","secondDayChartData","thirdDayChartData","$92d001920e846853$var$threeDayTablesFiller","startOfForecastTable","endOfForecastTable","crudeForecast","replaceAll","resultForecast","config1","pointRadius","config2","config3","monthChartData","translatedLabels","$7b07849fc98c04c9$var$monthTableFiller","indexOfStart","search","treatedForecast","trim","monthChartLabels","MONTHS_TRANSLATION","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","engMonth","ruMonth","$c3d19876e6f60f89$var$testWrapper","$c3d19876e6f60f89$var$testButton","textContent","$b26cc05738a8cb4b$var$test","questions","grades","tips","answers","questionNumber","progressCount","Next","question","answer","answerButtons","answerType","End","questionIndexes","button","answersWrapper","testInner","answerNumber","questionIndex","newParagraph","createElement","appendChild","$b26cc05738a8cb4b$var$question","$b26cc05738a8cb4b$var$answerButtons","$b26cc05738a8cb4b$var$progress","$b26cc05738a8cb4b$var$testHandler"],"version":3,"file":"severnee.6547548a.js.map"}